webpackJsonp([155, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 123, 125, 126, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], {
    "+8/T": function(e, t, n) {
        "use strict";
        (function(e) {
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function o(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function s(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var a = n("worM")
              , r = n("yviC")
              , l = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , c = function(e) {
                return e && null === e.id ? e.name : ""
            }
              , d = function(t) {
                function n(e) {
                    i(this, n);
                    var t = o(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
                    return t._onFocusInput = t._onFocusInput.bind(t),
                    t._onBlurInput = t._onBlurInput.bind(t),
                    t
                }
                return s(n, t),
                l(n, [{
                    key: "_onFocusInput",
                    value: function() {
                        this.keyMap.enable()
                    }
                }, {
                    key: "_onBlurInput",
                    value: function() {
                        this.keyMap.disable()
                    }
                }, {
                    key: "_setCustomResource",
                    value: function(e) {
                        this.props.setResource(e)
                    }
                }, {
                    key: "_revertCustomResource",
                    value: function() {
                        this.customResource.value = c(this.props.assignee),
                        this.customResource.blur()
                    }
                }, {
                    key: "componentDidMount",
                    value: function() {
                        var e = this
                          , t = MM.utils.KeyEvent;
                        this.keyMap = new MM.utils.KeyMap(this.customResource,"custom_resource_keymap",[{
                            key: t.ENTER,
                            fn: function() {
                                return e._setCustomResource(e.customResource.value)
                            }
                        }, {
                            key: t.ESC,
                            fn: function() {
                                return e._revertCustomResource()
                            }
                        }]),
                        this.keyMap.disable(),
                        this.tooltips = MM.ui.ToolTips.touchSafe({
                            el: this.container
                        })
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
                        MM.ui.ToolTips.destroyTouchSafe(this.tooltips)
                    }
                }, {
                    key: "renderCustomResource",
                    value: function() {
                        var t = this
                          , n = this.props
                          , i = n.assignee
                          , o = n.isExternalTask
                          , s = o ? I18n.t("js.custom_assignee_not_possible_on_external_tasks") : "";
                        return e.createElement("div", {
                            className: "ph-10 pt-10 mt-8 bt-1 bc-grey4 tooltip",
                            title: s
                        }, e.createElement("input", {
                            ref: function(e) {
                                return t.customResource = e
                            },
                            type: "text",
                            className: "w-100%",
                            defaultValue: c(i),
                            placeholder: I18n.t("js.enter_custom"),
                            onFocus: this._onFocusInput,
                            onBlur: this._onBlurInput,
                            disabled: o
                        }))
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this
                          , n = this.props
                          , i = n.users
                          , o = n.assignee
                          , s = i.sortBy(function(e) {
                            return e.name.split(/\s/)[1]
                        })
                          , l = s.map(function(n) {
                            return {
                                icon: e.createElement(r.a, {
                                    user: n,
                                    className: "small mr-5"
                                }),
                                label: n.name,
                                selected: o && n.id === o.id,
                                onClick: function() {
                                    return t._setCustomResource(n.id)
                                }
                            }
                        });
                        return e.createElement("div", {
                            ref: function(e) {
                                return t.container = e
                            }
                        }, e.createElement(a.a, {
                            className: "maxh-150 h-overflow-y",
                            items: l
                        }), this.renderCustomResource())
                    }
                }]),
                n
            }(e.Component);
            t.a = d
        }
        ).call(t, n("nakD"))
    },
    "+ASY": function(e, t) {
        function n(e) {
            return function(t) {
                return e(t)
            }
        }
        e.exports = n
    },
    "+ptD": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = {
            getElements: function(e, t) {
                var n = []
                  , i = []
                  , o = !1;
                t = Object.extend({
                    idPrefix: "",
                    containerClassName: ""
                }, t);
                for (var s = 0; s < e.length; s++) {
                    var a = e[s];
                    if (a.thumbnail && (o = !0),
                    -1 === i.indexOf(a.url())) {
                        var r = new Element("a",{
                            id: t.idPrefix + a.id,
                            href: "#",
                            className: t.containerClassName
                        })
                          , l = new Element("img");
                        if (a.mm_default && a.local_path ? l.src = a.local_path : a.thumbnail ? (l.src = a.thumbnail,
                        l.setAttribute("data-url", a.url())) : l.src = a.url(),
                        !a.thumbnail && !isNaN(t.width) && !isNaN(t.height)) {
                            var c = o ? [t.width, t.height] : a.resize(t.width, t.height);
                            o || (l.style.width = c[0] + "px"),
                            l.style.height = c[1] + "px"
                        }
                        r.appendChild(l),
                        n.push(r),
                        i.push(a.url(!0))
                    }
                }
                return n
            },
            checkLicense: function(e) {
                var t = $("img_copyright");
                if (t) {
                    var n = parseInt(e.getAttribute("google_id"));
                    if (n) {
                        var i = sideBar.images.googleSearch.items[n];
                        t.innerHTML = I18n.t("js.this_image_may_be_subject_to_copyright") + '. <a class="plainlink" href="' + i.contextUrl + '" target="_blank">' + I18n.t("js.open_source_page") + "</a>",
                        t.addClassName("info"),
                        t.show()
                    }
                }
            },
            insertIntoLibrary: function(e, t, n) {
                var o = IdeaImage.createDummy(t.url, t.width && t.height ? [t.width, t.height] : null);
                o.thumbnail = t.thumbnailUrl;
                var s = i.getElements([o], {
                    idPrefix: e + "img_",
                    containerClassName: "item rad-3"
                })[0]
                  , a = s.select("img")[0]
                  , r = MM.ui.LoadingSpinner(48)
                  , l = new Element("cell");
                s.setAttribute(e + "_id", n),
                addClassName(s, "loading"),
                s.insert(r),
                s.onclick = function() {
                    return !1
                }
                ,
                a.onerror = function() {
                    r.remove(),
                    s.innerHTML = '<span class="h-a-center text-center">' + I18n.t("js.image_not_available") + "</span>"
                }
                ,
                a.onload = function() {
                    removeClassName(s, "loading"),
                    r.remove(),
                    l.observe("click", sideBar.images.onSelectImage.bindAsEventListener(sideBar.images, s, !0)),
                    l.observe("dblclick", sideBar.images.onDblClickImage.bindAsEventListener(sideBar.images, s, !0))
                }
                ,
                l.appendChild(s),
                mm$(e + "_imgs_container") && mm$(e + "_imgs_container").appendChild(l)
            }
        };
        t.default = i
    },
    "/dW8": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("xAzy")
          , o = ["cp_from_x", "cp_from_y", "cp_to_x", "cp_to_y", "cp_scale_x", "cp_scale_y", "color", "label"]
          , s = Class.create({
            id: null,
            from_id: null,
            to_id: null,
            view: null,
            color: null,
            cp_from_x: null,
            cp_from_y: null,
            cp_to_x: null,
            cp_to_y: null,
            cp_scale_x: null,
            cp_scale_y: null,
            cp_zoom_factor: null,
            initialize: function(e) {
                var t = this;
                this.id = e.id,
                this.from_id = e.from_id,
                this.from = tree.root.getChild(this.from_id),
                this.to_id = e.to_id,
                this.raphael_id = e.from_id + "-" + e.to_id,
                this.to = tree.root.getChild(this.to_id),
                o.each(function(n) {
                    return t[n] = e[n]
                }),
                this.view = new i.default(this),
                this.from && this.to && s.all.push(this)
            },
            __onSetProperties: function(e, t) {
                var n = !1;
                for (var i in e)
                    this[i] = e[i],
                    ("color" === i || "label" === i || t) && (n = !0);
                return tree.readyForConnections && n && this.view.redraw(!0),
                !0
            },
            setProperties: function(e) {
                var t = new ChangeList
                  , n = this.getProperties()
                  , i = {};
                for (var o in e)
                    i[o] = e[o];
                i.from_id = n.from_id = this.from.id,
                i.to_id = n.to_id = this.to.id,
                t.changes.push(new ConnectionPropertiesChange({
                    idea_id: this.from.id,
                    type: "ConnectionProperties",
                    new_data: i,
                    old_data: n
                })),
                t.execute(),
                i.label && (i.label = i.label.unescapeHTML()),
                ServerConnection.doChanges(t)
            },
            getProperties: function() {
                var e = this
                  , t = {};
                return o.each(function(n) {
                    return t[n] = e[n]
                }),
                t
            },
            destroy: function() {
                this.from.connections.remove(this),
                this.from.outgoing_connections.remove(this),
                this.to.connections.remove(this),
                s.all.remove(this),
                this.view.destroy(),
                this.from_id = this.from = this.to_id = this.to = this.raphael_id = this.color = this.view = null
            },
            isDrawable: function() {
                var e = this.to.getAncestors().concat(this.from.getAncestors());
                return e.push(this.to, this.from),
                !e.any(function(e) {
                    return e._listener.isTemporarilyRemoved
                })
            }
        });
        s.all = [],
        s.get = function(e, t) {
            for (var n = s.all.length; n > 0; ) {
                var i = s.all[--n];
                if (i.from.id == e && i.to.id == t)
                    return i
            }
        }
        ,
        t.default = s
    },
    "/t6o": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, t) {
            var i = n("MAG5")
              , o = n.n(i)
              , s = n("dnTF")
              , a = n.n(s)
              , r = n("ZfKP")
              , l = n("jMx0")
              , c = n("d2ki")
              , d = function(e, t) {
                if (!t)
                    return IdeaVote.NONE;
                var n = IdeaVote.get(e, t.id);
                return n ? n.vote : IdeaVote.NONE
            }
              , h = function n(i) {
                var o = i.node.votes
                  , s = IdeaVote.getByVote(i.node, IdeaVote.UP)
                  , a = function(e, t) {
                    i.select(),
                    sideBar.comments.onVote(e, t),
                    setTimeout(function() {
                        return n(i)
                    }, 0)
                }
                  , r = function() {
                    i.select(),
                    sideBar.show(!0, !0),
                    sideBar.comments.expand({
                        savePreference: !0
                    })
                };
                e.render(t.createElement(c.a, {
                    votes: o,
                    upVotes: s,
                    downVotes: o.length - s.length,
                    userVote: d(i.node, users.selfUser),
                    editable: App.config.editable && "edit" === UI.Registry.mode && sideBar && sideBar.comments,
                    onVote: a,
                    onExpand: r
                }), mm$("msg_popup"))
            };
            App.ui.Preview = {
                show: function(e, t) {
                    var n = this;
                    if (!this.popover || !this.popover.visible) {
                        this.clearTimer(e);
                        var i = {
                            type: t,
                            alignElement: mm$(e.node.id + "_" + t)
                        };
                        switch (t) {
                        case "note":
                            e.node.note.stripHTML().length > 250 && MM.ui.page.height > 600 && (i.klass = "large"),
                            this.doShow('<div class="note_content">' + e.node.note + "</div>", i),
                            this.popover.parent.select("a").each(function(e) {
                                e.setAttribute("target", "_blank"),
                                e.onclick = n.doHide.bind(n)
                            });
                            break;
                        case "task":
                            var o = "-";
                            if (e.node.task.effort) {
                                o = parseInt(e.node.task.effort);
                                var s = e.node.task.effort.sub(o.toString(), "");
                                o += " " + I18n.t("js.helper_" + s)
                            }
                            var a = "-";
                            if (e.node.task.complete >= 0) {
                                var r = e.node.icons.detect(function(e) {
                                    return "task" === e.group()
                                });
                                r && (a = r.getTitle())
                            }
                            this.doShow("<h3>" + I18n.t("js.task_information") + '</h3><p class="first" style="margin-top:1em"><label class="mr-5">' + I18n.t("js.priority") + ":</label>" + (e.node.task.priority >= 0 ? e.node.task.priority + 1 : "-") + '</p><p><label class="mr-5">' + I18n.t("js.complete") + ":</label>" + a + '</p><p><label class="mr-5">' + I18n.t("js.start_date") + "</label>" + (e.node.task.from ? Date.fromUTC(e.node.task.toString("from")).toUIString(!0) : "-") + '</p><p><label class="mr-5">' + I18n.t("js.due_date") + "</label>" + (e.node.task.due ? Date.fromUTC(e.node.task.toString("due")).toUIString(!0) : "-") + '</p><p><label class="mr-5">' + I18n.t("js.duration") + ":</label>" + o + '</p><p><label class="mr-5">' + I18n.t("js.assigned_to") + "</label>" + e.node.task.toString("resource").escapeHTML() + "</p>", i);
                            break;
                        case "link":
                            this._link(e, i);
                            break;
                        case "attachments":
                            this._attachments(e, i);
                            break;
                        case "comments":
                            this._comments(e, i);
                            break;
                        case "votes":
                            this._votes(e, i)
                        }
                    }
                },
                initPopover: function(t) {
                    var n = this;
                    if (!this.popover) {
                        var i = new Element("div",{
                            id: "popover_extras",
                            style: "display:none;"
                        }).insert(new Element("div",{
                            id: "msg_popup"
                        }));
                        document.body.insert(i),
                        this.onMouseMoveListener = a()(this.onMove.bindAsEventListener(this), 750),
                        this.popover = new Popover("extras",null,{
                            observeEvent: "none",
                            closeOnSelect: !1,
                            onShow: function() {
                                return document.observe("mouseover", n.onMouseMoveListener)
                            },
                            onClose: function() {
                                return document.stopObserving("mouseover", n.onMouseMoveListener)
                            },
                            onHide: function() {
                                n.mounted && e.unmountComponentAtNode(mm$("msg_popup")),
                                n.mounted = !1
                            }
                        })
                    }
                    this.popover.parent.className = "popover " + t.type,
                    this.popover.opener = t.alignElement,
                    t.klass && addClassName(this.popover.parent, t.klass)
                },
                openPopover: function() {
                    this.popover.show(),
                    Presentation.on ? (CSS.set(this.popover.parent, {
                        transform: CSS.scale(MM.ui.getZoomScale(this.popover.parent.getDimensions(), {
                            minScale: 1,
                            maxScale: 5,
                            paddingX: 20,
                            paddingY: 20
                        }))
                    }),
                    MM.ui.centerAndShow(this.popover.parent)) : canvas.scrollToElement(this.popover.opener)
                },
                doShow: function(e, t) {
                    this.initPopover(t),
                    mm$("msg_popup").innerHTML = "",
                    t.ajaxUrl ? new Ajax.Updater("msg_popup",t.ajaxUrl,{
                        asynchronous: !0,
                        evalScripts: !0,
                        onComplete: this.openPopover.bind(this)
                    }) : (mm$("msg_popup").innerHTML = e,
                    this.openPopover())
                },
                doHide: function() {
                    this.popover && Element.visible(this.popover.parent) && this.popover.close()
                },
                onHover: function(e, t) {
                    Presentation.on || (e._linktimeout = setTimeout(function() {
                        this.show(e, t)
                    }
                    .bind(this), 1e3))
                },
                onMove: function(e) {
                    var t = Event.element(e);
                    this.popover.parent.contains(t) || this.popover.opener.contains(t) || this.doHide()
                },
                clearTimer: function(e) {
                    e._linktimeout && (clearTimeout(e._linktimeout),
                    e._linktimeout = null)
                },
                _link: function(e, t) {
                    var n = e.node.getLinkObj();
                    switch (n.type) {
                    case "url":
                        this.doShow("<h3>" + I18n.t("js.external_link") + '</h3><a rel="' + e.node.getLinkRel({
                            link: e.node.link
                        }) + '" href="' + o()(e.node.link) + '" onclick="App.ui.Preview.doHide(); return true;" target="_blank" class="ta-center w-160 ellipsis">' + o()(e.node.link) + "</a>", t);
                        break;
                    case "email":
                        this.doShow("<h3>" + I18n.t("js.email_link") + '</h3><a href="' + o()(e.node.link) + '" onclick="App.ui.Preview.doHide();"  class="ta-center w-180 ellipsis">' + o()(e.node.link).substring(7) + "</a>", t);
                        break;
                    case "topic":
                        var i = mm$(n.link);
                        if (i)
                            this.doShow("<h3>" + I18n.t("js.link_to_topic") + '</h3><p><a href="#" class="map" onclick="mm$(\'' + e.node.id + "')._listener.scrollToLinkTarget(mm$('" + n.link + "'));return false;\">" + i._listener.node.title.unescapeHTML().substring(0, 28) + "</a></p><p>[" + I18n.t("js.in_this_map") + "]</p>", t);
                        else {
                            var s = "/dialog/get_topic_ajax/" + n.link + "?source_id=" + e.node.id + ("public" === App.config.viewMode ? "&public=true" : "") + (App.config.is_embedded ? "&embedded=true&width=" + App.config.embedWidth + "&height=" + App.config.embedHeight + "&zoom=" + App.config.zoomFactor : "");
                            this.doShow("", Object.extend(t, {
                                ajaxUrl: s
                            }))
                        }
                    }
                },
                _attachments: function(e, t) {
                    var n = "<h3>" + I18n.t("js.attachments") + "</h3>";
                    if (App.config.showRevisions)
                        n += "<ul>",
                        e.node.attachments.each(function(e) {
                            n += "<li>" + e.filename.truncate(18) + " " + e.size.toHumanSize(1) + "</li>"
                        }),
                        n += "</ul>";
                    else if (1 == e.node.attachments.length && e.node.attachments[0].isImage()) {
                        var i = e.node.attachments[0]
                          , o = "tn_" + e.node.id;
                        n += '<div align="center"><a href="' + i.downloadLink() + '" onclick="App.ui.Preview.showPopup(' + i.id + ", " + e.node.id + '); return false;" class="thumbnail" id="' + o + '" title="' + i.filename + '"><span style="background-image:url(' + i.downloadLink() + (Presentation.on ? "" : "&thumb=true") + ');"></span><a href="' + i.downloadLink() + '" onclick="App.ui.Preview.showPopup(' + i.id + ", " + e.node.id + '); return false;" class="inline">' + i.filename.truncate(18) + "</a> - " + i.size.toHumanSize(1) + "</div>",
                        setTimeout('mm$("' + o + '").style.backgroundImage = "none"', i.loaded ? 10 : 1500),
                        i.loaded = !0
                    } else
                        n += "<ul>",
                        e.node.attachments.each(function(t) {
                            n += "<li>",
                            n += '<a href="#" onclick="App.ui.Preview.showPopup(' + t.id + ", " + e.node.id + '); return false;" title="' + t.filename + " (" + t.size.toHumanSize(1) + ')">' + t.filename.truncate(18) + "</a> - " + t.size.toHumanSize(1),
                            n += "</li>"
                        }),
                        n += "</ul>";
                    this.doShow(n, t)
                },
                _comments: function(e, t) {
                    var n = r.default.sort(e.node.comments)
                      , i = n.length - 2
                      , o = "";
                    n.slice(i, n.length).reverse().each(function(e) {
                        e.read = !0,
                        o += '<row><cell class="w-40px">' + e.user.getAvatar("medium") + '</cell><cell><div row class="comment_date">' + e.createdAt.ago(!0) + (e.isEdited() ? '<span class="ml-5" title="' + I18n.t("js.edited") + ": " + e.updatedAt.ago(!0) + '">' + MM.ui.icon({
                            name: "pen",
                            size: 8,
                            color: "grey-light",
                            clickable: !1
                        }) + "</span>" : "") + "</div><p>" + I18n.t("js.said", {
                            v0: e.user.displayname
                        }) + '</p><div class="comment" style="height: auto;">' + EmojiArea.getHTMLContent(e.text) + "</div></cell></row>"
                    }),
                    o += '<div class="text-right">',
                    App.config.editable && "edit" === UI.Registry.mode && sideBar && sideBar.comments && (o += '<a href="#" onclick="tree.root.getChild(' + e.node.id + ')._listener.select(); sideBar.show(true, true); sideBar.comments.expand({ savePreference: true }); return false;" style="text-decoration: underline">' + (i > 0 ? I18n.t("js.more_d", {
                        v0: i
                    }) : I18n.t("js.expand")) + "</a>"),
                    o += "</div>",
                    e.node._listener.__onSetProperty("comments", !0),
                    this.doShow(o, t)
                },
                _votes: function(e, t) {
                    this.initPopover(t),
                    h(e),
                    this.mounted = !0,
                    this.openPopover()
                },
                showPopup: function(e, t) {
                    return this.doHide(),
                    this.attachmentViewer = new l.default({
                        attachmentId: e,
                        nodeId: t
                    }),
                    this.attachmentViewer.open(),
                    !1
                }
            }
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    "079/": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("MAG5")
              , s = n.n(o)
              , a = n("A9ap")
              , r = n("vLs6")
              , l = n("worM")
              , c = n("jR5l")
              , d = n("PYcA")
              , h = n("Se7B")
              , u = n("bPcH")
              , p = Class.create(a.default, {
                activeType: "url",
                cache: {
                    autolink: {
                        id: null
                    }
                },
                initialize: function($super, e, t) {
                    $super("links", e, t),
                    this.field = $("fld_link"),
                    Element.bindOnClick("btn_autolink", this.getAutoLink.bind(this)),
                    Element.bindOnClick("btn_removelink", this.removeLink.bind(this)),
                    Element.bindOnClick("btn_dlg_link", this.showDialog.bind(this)),
                    this.field.observe("focus", this.focus.bind(this)),
                    this.blurListener = this.blur.bind(this),
                    this.buildPopover()
                },
                focus: function() {
                    _Event.observeBlur(this.field, this.blurListener),
                    canvas.removeFocus(),
                    "topic" === this.activeType && this.showDialog()
                },
                blur: function() {
                    _Event.stopObservingBlur(this.field, this.blurListener),
                    canvas.addFocus(),
                    this.setFieldValue()
                },
                setFieldValue: function() {
                    var e = void 0;
                    switch (this.activeType) {
                    case "topic":
                        return;
                    case "url":
                        this.field.value.length > 0 && this.field.value.indexOf("://") < 0 && (this.field.value = "http://" + this.field.value),
                        e = s()(this.field.value);
                        break;
                    case "email":
                        e = this.field.value.length > 0 ? "mailto:" + s()(this.field.value) : this.field.value
                    }
                    canvas.onSetProperty("link", e),
                    canvas.addFocus(),
                    this.updateLinkControl(),
                    App.trigger(CustomEvents.LINK_CHANGED)
                },
                onSelectNode: function() {
                    this.updatePopover()
                },
                updateLinkControl: function(e, t) {
                    var n = canvas.selected.node.link ? canvas.selected.node.getLinkObj().type : "url";
                    if (e || (e = n),
                    this.activeType = e,
                    mm$("cap_link").innerHTML = I18n.t("js." + e),
                    hasClassName(this.field, "disabled") && removeClassName(this.field, "disabled"),
                    p.types.each(function(e) {
                        mm$("linktype_" + e) && removeClassName(mm$("linktype_" + e).parentNode, "selected")
                    }),
                    e.length && addClassName(mm$("linktype_" + e).parentNode, "selected"),
                    !t)
                        switch (e) {
                        case "url":
                            this.field.value = canvas.selected.node.link && e == n ? canvas.selected.node.link.unescapeHTML() : "";
                            break;
                        case "email":
                            this.field.value = e == n ? canvas.selected.node.link.substring(7) : "";
                            break;
                        case "topic":
                            var i = "";
                            if (e == n) {
                                var o = $(canvas.selected.node.link.substring(6));
                                i = o ? o._listener.node.title.truncate(20) : "(" + I18n.t("js.in_other_map") + ")"
                            }
                            this.field.value = i,
                            addClassName(this.field, "disabled")
                        }
                },
                buildPopover: function() {
                    var e = p.types.map(function(e) {
                        return new Element("a",{
                            href: "#",
                            id: "linktype_" + e
                        }).update(I18n.t("js." + e))
                    });
                    this.linkTypePopover = new Popover("link",this.setPopoverValue.bind(this)),
                    this.linkTypePopover.addElements(e)
                },
                updatePopover: function(e) {
                    this.updateLinkControl(e)
                },
                setPopoverValue: function(e) {
                    this.updateLinkControl(e.split("linktype_")[1])
                },
                showDialog: function() {
                    var e = canvas.selected.node.link && canvas.selected.node.getLinkObj().type == this.activeType ? "&edit=" + this.activeType : "";
                    MM.ui.dialogs.show("link_" + this.activeType, {
                        map_id: canvas.selected.node.id,
                        param: e,
                        autoSize: !0,
                        onComplete: function() {
                            MM.status.helpTopic = "218027868-Add-Links-to-Topics"
                        }
                    })
                },
                initTopicList: function(t, n) {
                    var o = e.createElement(d.a, {
                        className: "w-300",
                        opener: e.createElement(h.a, {
                            className: "b-1 bc-grey3 rad-5 fs-14 p-10 w-300",
                            labelClassName: "to-ellipsis",
                            color: "black"
                        }),
                        selected: t.find(function(e) {
                            return e.value === n
                        }),
                        onChange: this._updateTopicList
                    }, e.createElement(u.a, {
                        autofocus: !0,
                        filterableAttribute: "label",
                        inputClassName: "m-10 content-visible"
                    }, e.createElement(c.a, null, e.createElement(l.a, {
                        className: "maxh-300 h-overflow-y",
                        items: t
                    }))));
                    i.render(o, mm$("link_map_id"))
                },
                _updateTopicList: function(e) {
                    $("topiclist").insert(MM.ui.LoadingSpinner(48)),
                    new Ajax.Request("/dialog/update_link_topics/" + e.value)
                },
                removeLink: function() {
                    this.field.value = "",
                    this.updateLinkControl("url", !0),
                    this.setFieldValue(),
                    this.cache.autolink = {
                        id: null
                    }
                },
                getAutoLink: function() {
                    if (this.cache.autolink.id == canvas.selected.node.id && this.cache.autolink.title == canvas.selected.node.title && this.cache.autolink.items.length > 1)
                        return this.cache.autolink.items.shift(),
                        this.field.value = this.cache.autolink.items[0].link,
                        this.updateLinkControl("url", !0),
                        void this.setFieldValue();
                    $("btn_autolink").addClassName("fx-wiggle fx-infinite fx-none"),
                    this.saved_url = this.field.value,
                    this.field.value = I18n.t("js.getting_auto_link"),
                    this.initGoogleSearch(),
                    this.googleSearch.query(canvas.selected.node.title, {
                        onComplete: this.setAutoLink.bind(this),
                        onError: this.setAutoLink.bind(this, [])
                    }),
                    Amplitude.logEvent("wunder_link")
                },
                setAutoLink: function(e) {
                    if ($("btn_autolink").removeClassName("fx-wiggle fx-infinite").removeClassName("fx-none"),
                    !e || 0 === e.length)
                        return Message.show(I18n.t("js.no_link_found_for_topic"), Message.INFO),
                        void (this.field.value = this.saved_url);
                    this.field.value = e[0].link,
                    this.updateLinkControl("url", !0),
                    this.setFieldValue(),
                    this.cache.autolink = {
                        id: canvas.selected.node.id,
                        title: canvas.selected.node.title,
                        items: e
                    }
                },
                getPopularLinks: function(e) {
                    var t = mm$("get_popular_links")
                      , n = mm$("popular_links")
                      , i = hasClassName(t, "open");
                    return toggleClassName(t, "open"),
                    i ? (hide(n),
                    n.innerHTML = "") : (show(n),
                    this.cache.popularLinks && this.cache.popularLinks.title === e ? this.setPopularLinks(this.cache.popularLinks.items) : (this.cache.popularLinks = {
                        title: e
                    },
                    n.insert(MM.ui.LoadingSpinner(24)),
                    this.initGoogleSearch(),
                    this.googleSearch.query(e, {
                        onComplete: this.setPopularLinks.bind(this),
                        onError: this.setPopularLinks.bind(this, [])
                    }))),
                    !1
                },
                setPopularLinks: function(e) {
                    var t = mm$("popular_links")
                      , n = mm$("link_target");
                    if (this.cache.popularLinks = Object.extend({
                        items: e
                    }, this.cache.popularLinks),
                    !e || 0 === e.length)
                        return void (t.innerHTML = I18n.t("js.no_results_received"));
                    t.innerHTML = "",
                    e.each(function(e) {
                        var i = new Element("a",{
                            href: "#",
                            title: e.description.stripTags().truncate(150),
                            className: "ellipsis"
                        }).update('<span class="va-middle">' + e.title + "</span>");
                        i.onclick = function() {
                            return n.value = e.link,
                            addClassName(n, "highlight"),
                            setTimeout(function() {
                                removeClassName(n, "highlight")
                            }, 300),
                            !1
                        }
                        ,
                        t.appendChild(i)
                    })
                },
                initGoogleSearch: function() {
                    if (!this.googleSearch) {
                        var e = {
                            disablePages: !0
                        };
                        App.hasFeature("google_cse") || (e = Object.extend({
                            limitRequests: !0
                        }, e)),
                        this.googleSearch = new r.GoogleWebSearch(e)
                    }
                }
            });
            p.types = ["url", "topic", "email"],
            t.default = p
        }
        .call(t, n("nakD"), n("x9tB"))
    },
    "15Wi": function(e, t) {
        function n(e, t) {
            for (var n = -1, i = t.length, o = e.length; ++n < i; )
                e[o + n] = t[n];
            return e
        }
        e.exports = n
    },
    "1GA3": function(e, t) {
        function n(e) {
            return e
        }
        e.exports = n
    },
    "1M8a": function(e, t, n) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var o = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var i = t[n];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, n, i) {
                return n && e(t.prototype, n),
                i && e(t, i),
                t
            }
        }()
          , s = function() {
            return null
        }
          , a = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : s
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s;
                i(this, e),
                this.onContextMenu = t,
                this.onCloseContextMenu = n,
                this.onOpen = this.onOpen.bind(this),
                this.onClose = this.onClose.bind(this),
                this.observe()
            }
            return o(e, [{
                key: "observe",
                value: function() {
                    window.addEventListener("contextmenu", this.onOpen)
                }
            }, {
                key: "stopObserving",
                value: function() {
                    window.removeEventListener("contextmenu", this.onOpen)
                }
            }, {
                key: "onOpen",
                value: function(e) {
                    this.onContextMenu(e),
                    window.addEventListener(MM.ua.getEvent().mousedown, this.onClose),
                    window.addEventListener("keyup", this.onClose)
                }
            }, {
                key: "onClose",
                value: function(e) {
                    this.onCloseContextMenu(e),
                    window.removeEventListener(MM.ua.getEvent().mousedown, this.onClose),
                    window.removeEventListener("keyup", this.onClose)
                }
            }]),
            e
        }();
        t.default = a
    },
    "2J63": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = {
            enableResizing: function() {
                this.handle || (this.handle = new Element("span",{
                    className: "rhandle"
                }),
                Element.insert(this.el, {
                    top: this.handle
                })),
                Draggables.deactivate(),
                this.initListeners()
            },
            disableResizing: function() {
                this.handle.stopObserving("mousedown", this.onMouseDown)
            },
            initListeners: function() {
                this.onMouseDown = this.onResizeStart.bindAsEventListener(this),
                this.onMouseMove = this.onResize.bindAsEventListener(this),
                this.onMouseUp = this.onResizeEnd.bindAsEventListener(this),
                this.handle.observe("mousedown", this.onMouseDown)
            },
            onResizeStart: function(e) {
                this.toResizing(),
                this.mouseCoords = [Event.pointerX(e), Event.pointerY(e)],
                Event.stop(e),
                this.el.style.visibility = "hidden",
                this.getResizer({
                    className: this.el.className,
                    style: {
                        borderImage: "",
                        borderStyle: ""
                    }
                });
                var t = this.el._listener
                  , n = t.getTextPosition();
                show(App.resizer),
                this.initialWidth = this.getBrowserQuirks(t.node.title).width,
                this.getTextElement().innerHTML = this.getTextForResizer(t.node.title.replace(/\r/gi, " ")),
                App.resizer.style.left = n[0] + "px",
                App.resizer.style.top = n[1] + "px",
                App.resizer.style.width = this.initialWidth + "px",
                Draggables.deactivate(),
                Event.observe(document, "mousemove", this.onMouseMove),
                Event.observe(document, "mouseup", this.onMouseUp)
            },
            onResize: function(e) {
                Draggables.deactivate(),
                this.resizeElement(e)
            },
            onResizeEnd: function(e) {
                this.resizeElement(e),
                Event.stopObserving(document, "mouseup", this.onMouseUp),
                Event.stopObserving(document, "mousemove", this.onMouseMove);
                var t = this.insertWraps(this.el._listener.node.title, getRealWidth(App.resizer)).safeUnescapeHTML();
                App.resizer.style.display = "none",
                this.el.style.visibility = "visible",
                this.el._listener.node.commitEdit(t, [0, 0], "rename"),
                setTimeout(function() {
                    this.toSelected()
                }
                .bind(this), 10)
            },
            resizeElement: function(e) {
                var t = Event.pointerX(e) - this.mouseCoords[0];
                App.resizer.style.width = this.initialWidth + t + "px"
            },
            getResizer: function(e) {
                mm$("resizer_field") ? App.resizer.className = e.className : (App.resizer = new Element("div",{
                    id: "resizer_field",
                    className: e.className
                }),
                App.resizer.container = new Element("div",{
                    className: "tk_title",
                    dir: "auto"
                }),
                App.resizer.appendChild(App.resizer.container),
                canvas.el.appendChild(App.resizer)),
                App.resizer.style.top = "-9999px",
                App.resizer.style.left = "-9999px",
                this.applyStyles(App.resizer);
                for (var t in e.style)
                    App.resizer.style[t] = e.style[t];
                this.unfixWidth()
            },
            getTextForResizer: function(e, t) {
                var n = e.replace(/\n$/g, "<br/><br/>").replace(/\r\n/g, "<br/>").replace(/[\n]/g, "<br/>").replace(/ \</g, "<").replace(/\t/gi, "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                return t && (n = n.replace(/[\r]/g, "<br/>")),
                n
            },
            getTextElement: function() {
                return App.resizer.container
            },
            getLabelSize: function(e) {
                return this.getTextElement().innerHTML = this.getTextForResizer(e || "I", !0),
                {
                    width: getRealWidth(App.resizer),
                    height: App.resizer.clientHeight
                }
            },
            insertWraps: function(e, t) {
                var n = this
                  , i = e.split("\n")
                  , o = []
                  , s = t;
                return i.each(function(e) {
                    var t = e.replace(/[\r\f\v]{1}/gi, " ").split(" ")
                      , i = n.getTextElement();
                    i.innerHTML = t.map(function(e) {
                        return "<span>" + e.safeUnescapeHTML().escapeHTML() + "</span>"
                    }).join(" "),
                    s && n.fixWidth(s),
                    i.childElements().each(function(e, n) {
                        var i = nextSibling(e);
                        i && i.clientWidth > 0 && i.offsetTop > e.offsetTop && (t[n] += "\r")
                    }),
                    o.push(t.join(" ").replace(/\r /gi, "\r"))
                }),
                o.join("\n")
            },
            getBrowserQuirks: function(e) {
                return (MM.ua.isBrowser("Internet Explorer") || MM.ua.isBrowser("Edge") || MM.ua.isBrowser("Firefox")) && (e = e.replace(/\r/gi, " \r")),
                this.getLabelSize(e)
            },
            fixWidth: function(e, t) {
                App.resizer.setStyle({
                    width: e + "px"
                }),
                t && (this.fixed_width = e)
            },
            unfixWidth: function() {
                App.resizer.setStyle({
                    width: "auto",
                    maxWidth: ""
                }),
                this.fixed_width = !1
            }
        };
        t.default = i
    },
    "2UzH": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("dnTF")
          , o = n.n(i)
          , s = function(e) {
            e = Object.assign({
                strict: !0
            }, e);
            var t = "(?:(?:[a-z]+:)?//)" + (e.strict ? "" : "?")
              , n = "(?:" + t + '|www\\.)(?:\\S+(?::\\S*)?@)?(?:localhost|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*)(?::\\d{2,5})?(?:[/?#][^\\s"]*)?';
            return e.exact ? new RegExp("(?:^" + n + "$)","i") : new RegExp(n,"ig")
        }
          , a = n("qlDW")
          , r = n("d407")
          , l = n("h7V/")
          , c = function(e) {
            return -1 !== e.indexOf("\n")
        }
          , d = function(e) {
            return /\n\s/.test(e)
        }
          , h = function(e) {
            window.getSelection().selectAllChildren(e)
        }
          , u = function() {
            var e = this
              , t = this.getValue();
            if (!this.el._listener.node.isRoot() && c(t) && k) {
                var n = [new Element("a",{
                    href: "#",
                    id: "btn_menu_split",
                    tabindex: 0
                }).update(I18n.t("js.split"))];
                d(t) && n.push(new Element("a",{
                    href: "#",
                    id: "btn_menu_split_tree",
                    tabindex: 0
                }).update(I18n.t("js.split_into_tree"))),
                a.default.showCustom(n, {
                    opener: this.el,
                    noKeymap: !0,
                    onClose: function() {
                        A = !1,
                        e.title.focus()
                    }
                })
            } else
                A = !1
        }
          , p = function(e) {
            if (e) {
                var t = r.default.getPlainClipboardData(e);
                f.call(this, t),
                Event.stop(e)
            }
        }
          , f = function(e) {
            A = !0,
            r.default.isPastingTopics(e) ? r.default.onPasteTopics(e) : (r.default.simulatePaste(e),
            u.call(this))
        }
          , g = function(e) {
            !A && k && null !== this.el._listener && this.el._listener.dcontent.toSelected(e, !0, !0)
        }
          , m = function() {
            canvas.scrollToElement(this.el, null, !0, !0),
            y.call(this)
        }
          , v = function() {
            return {
                x: this.el.getWidth() - this.nodeWidth,
                y: this.title.getHeight() - this.titleHeight
            }
        }
          , _ = function(e) {
            var t = this
              , n = e.match(s());
            if (n && n.length > 0) {
                var i = n[0];
                if (users.selfUser.anonymous)
                    return;
                l.a.get("expand_links", function(e) {
                    e && 1 === parseInt(e.value) && t.el._listener.node.generateThumb(i, {
                        onSuccess: function() {
                            e.new && Message.show(I18n.t("js.generate_thumbnail", {
                                url_start: '<a href="#" onclick="MM.ui.dialogs.dialogPreferences(); return false;">',
                                url_end: "</a>"
                            }), Message.NOTICE, 15)
                        }
                    })
                })
            }
        }
          , y = function() {
            var e = this.el._listener;
            Math.abs(this.widthAtLastLineDraw - this.el.getWidth()) > 5 && (e.node.isRoot() ? (App.config.layout.name === App.Layouts.LeftAligned.name ? e.translateChildNodes({
                x: -(this.el.getWidth() - this.widthAtLastLineDraw),
                y: 0
            }, App.Layouts.orientation.left) : e.translateChildNodes({
                x: this.el.getWidth() - this.widthAtLastLineDraw,
                y: 0
            }, App.Layouts.orientation.right),
            e.redrawBoundaries()) : (e.rc.redrawLines(!0),
            App.config.layout.name === App.Layouts.OrgChart.name && (e.rc.translateOrgChildNodes(e.rc.vnode.dcontainer.el.getWidth() - this.containerWidthAtLastDraw),
            this.containerWidthAtLastDraw = e.rc.vnode.dcontainer.el.getWidth())),
            this.widthAtLastLineDraw = this.el.getWidth()),
            Math.abs(this.titleHeight - this.title.getHeight()) > 1 && (e.node.isRoot() ? e.redrawBoundaries() : e.rc && (e.rc.redrawLines(!0),
            this.titleHeight = this.title.getHeight()))
        }
          , b = function() {
            var e = this;
            C = p.bindAsEventListener(this),
            x = g.bindAsEventListener(this),
            S = o()(m.bindAsEventListener(this), 100),
            this.title.observe("keyup", S),
            this.title.observe("paste", C),
            setTimeout(function() {
                return e.title.observe("blur", x)
            }, 0),
            this.simulateNodePasteCallback = function(t) {
                f.call(e, t.memo.clipboardData)
            }
            ,
            App.subscribe(CustomEvents.SIMULATE_TOPIC_PASTED, this.simulateNodePasteCallback)
        }
          , w = function() {
            this.title.stopObserving("paste", C),
            this.title.stopObserving("blur", x),
            this.title.stopObserving("keyup", S),
            S.cancel(),
            App.unsubscribe(CustomEvents.SIMULATE_TOPIC_PASTED, this.simulateNodePasteCallback)
        }
          , C = void 0
          , x = void 0
          , S = void 0
          , k = void 0
          , A = void 0
          , M = {
            enterEditMode: function() {
                if (!k && (k = !0,
                A = !1,
                this.disableDragging && this.disableDragging(),
                this.title.setAttribute("contenteditable", "true"),
                this.el.addClassName("editing"),
                this.titleHeight = this.title.getHeight(),
                this.titleWidth = this.title.getWidth() + 1,
                this.widthAtLastLineDraw = this.el.getWidth(),
                this.nodeWidth = this.el.getWidth(),
                -1 !== this.title.innerHTML.indexOf('<br class="js-automatic-break ">') || this.titleWidth > 270 ? (this.title.textContent = this.getValue(),
                this.title.setStyle({
                    "max-width": this.titleWidth + "px"
                })) : this.title.setStyle({
                    "max-width": "270px"
                }),
                this.title.focus(),
                b.apply(this),
                canvas.__onStartEdit(),
                h(this.title),
                this.getResizer({
                    className: this.el.className,
                    style: {
                        borderImage: "",
                        borderStyle: "",
                        border: "none"
                    }
                }),
                show(App.resizer),
                !this.el._listener.node.isRoot() && (this.containerWidthAtLastDraw = this.el._listener.rc.vnode.dcontainer.el.getWidth(),
                App.config.layout.name === App.Layouts.Aligned.name && this.el._listener.rc.orientation === App.Layouts.orientation.left))) {
                    var e = $("tk_map")
                      , t = e.offsetLeft;
                    e.style.left = "auto",
                    e.style.right = "calc(100% - " + (t + e.offsetWidth) + "px)"
                }
            },
            getValue: function() {
                var e = this.title.innerHTML.replace(/&nbsp;|<br class="js-automatic-break ">/g, " ").replace(/<br>/g, "\n").safeUnescapeHTML();
                return this.el._listener.node.normalizeWhitespaces(e).trim()
            },
            setValue: function(e) {
                k && (this.title.textContent = e)
            },
            getWrappedValue: function() {
                var e = this.title.getWidth() + 1
                  , t = parseFloat(window.getComputedStyle(App.resizer).getPropertyValue("padding-left"));
                return e += parseFloat(window.getComputedStyle(App.resizer).getPropertyValue("padding-right")) + t + 6,
                this.insertWraps(this.getValue(), e)
            },
            commit: function() {
                var e = {
                    x: 0,
                    y: 0
                };
                this.el._listener.node.isRoot() || this.el._listener.rc.orientation === App.Layouts.orientation.left && (e = v.call(this));
                var t = this.getWrappedValue();
                t !== this.el._listener.node.getTitle(!0) ? (this.el._listener.node.commitEdit(t, [-e.x, -e.y], this._editingAction, this.el._listener.node.isFloating()),
                _.call(this, this.getValue())) : 0 === this.el._listener.node.getTitle().length && 0 === t.length ? this.el._listener.node.parent.__onRemoveChild(this.el._listener.node) : this.updateTitle()
            },
            leaveEditMode: function(e) {
                if (k) {
                    if (k = !1,
                    A = !1,
                    this.el._listener.rc && App.config.layout.name === App.Layouts.Aligned.name && this.el._listener.rc.orientation === App.Layouts.orientation.left) {
                        var t = $("tk_map")
                          , n = t.offsetLeft;
                        t.style.left = n + "px",
                        t.style.right = "auto"
                    }
                    e && this.getValue().length > 0 ? this.commit() : 0 === this.el._listener.node.getTitle().length ? this.el._listener.node.parent.__onRemoveChild(this.el._listener.node) : this.updateTitle(),
                    this.enableDragging && this.enableDragging(),
                    this.title.style.removeProperty("max-width"),
                    this.title.setAttribute("contenteditable", "false"),
                    this.el.removeClassName("editing"),
                    this.title.blur(),
                    MM.utils.clearSelection(),
                    w.call(this),
                    canvas.__onStopEdit(),
                    this.el._listener.refreshLayout()
                }
            },
            setCursor: function(e, t) {
                var n = window.getSelection()
                  , i = document.createRange()
                  , o = this.title.childNodes[0];
                i.setStart(o, e),
                i.setEnd(o, t),
                n.removeAllRanges(),
                n.addRange(i)
            }
        };
        t.default = M
    },
    "3Kh2": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            initialize: function(e) {
                e && (this.floating = e.floating)
            },
            toJSON: function() {
                return {
                    floating: this.floating
                }
            }
        });
        t.default = i
    },
    "3sJ7": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("A9ap")
              , s = n("ugn0")
              , a = n("h7V/")
              , r = Class.create(o.default, {
                cache: {},
                recentIcons: ["smilie_1", "smilie_2", "smilie_3", "status_ok", "status_error", "heart", "star", "idea", "priority_01", "priority_02", "priority_03", "flag_red", "flag_green", "sign_warning", "sign_info"],
                expandable: !0,
                animationShow: CSS.translate({
                    x: "0",
                    y: 0
                }),
                animationHide: CSS.translate({
                    x: "100%",
                    y: 0
                }),
                animationFunction: "ease",
                initialize: function($super, e, t) {
                    $super("icons", e, t)
                },
                load: function($super) {
                    var e = this;
                    Element.bindOnClick("btn_clearicon", function() {
                        return e.removeIcon()
                    }),
                    a.a.get("recent_icons", function(t) {
                        t && t.value && (e.recentIcons = t.value.split(",").concat(e.recentIcons).slice(0, 15)),
                        e.buildRecentIcons()
                    }),
                    this.renderExpansion(),
                    $super()
                },
                buildRecentIcons: function() {
                    this.list = mm$("recent_icons"),
                    this.list.innerHTML = "";
                    for (var e = 0, t = this.recentIcons.length; e < t; e++) {
                        var n = Icon.fromFullName(this.recentIcons[e]);
                        if (n) {
                            var i = n.isDefault() ? n.getSpriteElement("span") : n.getElement({
                                className: "h-a-center"
                            })
                              , o = new Element("a",{
                                id: "rec_" + n.fullName(),
                                href: "#",
                                title: n.getTitle(),
                                className: "item recent tooltip"
                            }).insert(i);
                            Element.bindOnClick(o, this.toggleIcon.bind(this, n)),
                            this.list.insert(new Element("cell").insert(o))
                        }
                    }
                    this.buildExpandButton(),
                    MM.ui.ToolTips.destroyTouchSafe(this._tooltips),
                    this._tooltips = MM.ui.ToolTips.touchSafe({
                        el: this.list
                    })
                },
                buildExpandButton: function() {
                    var e = new Element("a",{
                        href: "#",
                        className: "tooltip",
                        title: "Choose icon"
                    });
                    e.insert(MM.ui.icon({
                        name: "arrow-right",
                        color: "grey-lighter",
                        size: 12,
                        iconSize: 28,
                        classes: "h-a-center"
                    })),
                    Element.bindOnClick(e, this.expand.bind(this)),
                    this.list.insert(new Element("cell").insert(e))
                },
                toggleIcon: function(e) {
                    canvas.selected.node.icons.find(function(t) {
                        return t === e
                    }) ? this.removeIcon(e.fullName()) : this.setIcon(e.fullName())
                },
                updateRecentIconsSelection: function() {
                    this.recentIcons.each(function(e) {
                        canvas.selected.node.icons.detect(function(t) {
                            return t.fullName() === e
                        }) ? addClassName(mm$("rec_" + e), "selected") : mm$("rec_" + e) && removeClassName(mm$("rec_" + e), "selected")
                    })
                },
                onSelectIcon: function(e, t) {
                    e && Event.stop(e),
                    this.selectedIcon && removeClassName(mm$("icon_library_" + this.selectedIcon.fullName()).parentNode, "selected"),
                    this.selectedIcon = t,
                    addClassName(mm$("icon_library_" + this.selectedIcon.fullName()).parentNode, "selected")
                },
                removeIcon: function(e) {
                    if (void 0 === e)
                        canvas.onRemoveIcon();
                    else {
                        var t = Icon.get(e);
                        t && canvas.onRemoveIcon(t)
                    }
                    this.sidebar.tasks.visible && this.sidebar.tasks.onSelectNode(),
                    App.trigger(CustomEvents.ICON_CHANGED, {
                        iconName: e
                    }),
                    this.onSelectNode()
                },
                setIcon: function(e) {
                    var t = null;
                    if (e && (t = Icon.get(e.replace(/icon_default_/, ""))),
                    t) {
                        var n = t.fullName();
                        canvas.onSetIcon(t),
                        this.addRecentIcon(n),
                        this.sidebar.tasks.visible && this.sidebar.tasks.onSelectNode(),
                        App.trigger(CustomEvents.ICON_CHANGED, {
                            iconName: n
                        }),
                        this.onSelectNode()
                    }
                },
                addRecentIcon: function(e) {
                    this.recentIcons.indexOf(e) < 0 && (this.recentIcons.pop(),
                    this.recentIcons.unshift(e),
                    a.a.save({
                        name: "recent_icons",
                        value: this.recentIcons.join(",")
                    }),
                    this.buildRecentIcons())
                },
                onSelectNode: function() {
                    this.updateRecentIconsSelection(),
                    this.expansion && this.expanded && this.expansion.update()
                },
                onExpand: function() {
                    this.expansion || this.renderExpansion()
                },
                renderExpansion: function() {
                    var t = this
                      , n = [];
                    Object.keys(Icon.libraries).without("silk").map(function(e) {
                        var t = Icon.getSections(e);
                        t ? t.map(function(t) {
                            return n.push({
                                lib: e,
                                section: t
                            })
                        }) : n.push({
                            lib: e,
                            section: null
                        })
                    }),
                    this.expansion = e.render(i.createElement(s.default, {
                        libs: n,
                        onBack: this.contract.bind(this),
                        onSelectIcon: this.toggleIcon.bind(this),
                        onClose: function() {
                            return t.sidebar.hide(!0, !0)
                        }
                    }), this.expandedEl)
                }
            });
            t.default = r
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    "49TO": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("A9ap")
              , s = n("t8zp")
              , a = n("atEJ")
              , r = function() {
                function e(e, t) {
                    var n = []
                      , i = !0
                      , o = !1
                      , s = void 0;
                    try {
                        for (var a, r = e[Symbol.iterator](); !(i = (a = r.next()).done) && (n.push(a.value),
                        !t || n.length !== t); i = !0)
                            ;
                    } catch (e) {
                        o = !0,
                        s = e
                    } finally {
                        try {
                            !i && r.return && r.return()
                        } finally {
                            if (o)
                                throw s
                        }
                    }
                    return n
                }
                return function(t, n) {
                    if (Array.isArray(t))
                        return t;
                    if (Symbol.iterator in Object(t))
                        return e(t, n);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }()
              , l = Class.create(o.default, {
                initialize: function($super, e, t) {
                    $super("boundaries", e, t),
                    Element.bindOnClick("btn_remove_boundary", this.setValue.bind(this)),
                    Element.bindOnClick("btn_customize_boundary", this.showDialog.bind(this))
                },
                load: function($super) {
                    this.list = this.el.select("grid")[0],
                    this.list.innerHTML = "";
                    for (var e = this._getBoundaryStyles(), t = 0; t < e.length; t++)
                        this.addStyle(e[t]);
                    $super()
                },
                addStyle: function(e) {
                    var t = Rectangle.fromPosSize(new Point(15,18), new Point(35,10))
                      , n = Rectangle.fromPosSize(new Point(35,10), new Point(22,26))
                      , i = {
                        r1: t,
                        r2: n,
                        style: e
                    }
                      , o = new Element("a",{
                        href: "#",
                        id: "style_boundary_" + e.id,
                        className: "item",
                        style: "background-color: #" + App.config.mapTheme.background.color
                    });
                    o.observe("click", this.setValue.bindAsEventListener(this, e)),
                    s.Graphics.drawBoundaryPreview(o, i),
                    this.list.insert(new Element("cell",{
                        className: "topic-preview"
                    }).insert(o))
                },
                setValue: function(e, t) {
                    if (Event.stop(e),
                    t) {
                        var n = canvas.allSelected
                          , i = n.filter(function(e) {
                            var n = e.node;
                            return n.boundary && n.boundary.style.equals(t)
                        });
                        n.length === i.length && (t = null)
                    }
                    canvas.onSetBoundary(t),
                    this._setSelected(t)
                },
                showDialog: function(t) {
                    var o = this
                      , s = t.target;
                    MM.ui.disableButton(s),
                    Dialog.multipleChoice('<div id="format_dialog"></div>', {
                        windowParameters: {
                            id: "formatboundary",
                            width: 630,
                            onBeforeShow: function() {
                                $("formatboundary_content").select(".dialog_buttons")[0].style.visibility = "hidden"
                            },
                            onShow: function() {
                                MM.status.helpTopic = "218435697-Customize",
                                e.render(i.createElement(a.a, {
                                    size: 64,
                                    opts: {
                                        className: "h-h-center"
                                    }
                                }), mm$("format_dialog")),
                                Promise.all([n.e(57).then(n.bind(null, "1umx")), n.e(78).then(n.bind(null, "vLqA"))]).then(function(e) {
                                    var t = r(e, 1)
                                      , n = t[0];
                                    $("formatboundary_content").select(".dialog_buttons")[0].style.visibility = "visible",
                                    o.customizeBoundary = n.default,
                                    o.customizeBoundary.init()
                                })
                            },
                            onClose: function() {
                                return MM.ui.enableButton(s)
                            }
                        },
                        choices: [{
                            label: I18n.t("js.cancel"),
                            callback: function() {
                                return MM.ui.dialogs.close("formatboundary")
                            },
                            classes: "button"
                        }, {
                            label: I18n.t("js.save") + "...",
                            callback: function() {
                                App.hasFeature("custom_styles") ? o.customizeBoundary.save() : MM.ui.dialogs.dialogUpgrade("map_custom_styles")
                            },
                            classes: "button"
                        }, {
                            label: I18n.t("js.ok"),
                            callback: function() {
                                o.customizeBoundary.setStyle(App.config.mapTheme.id),
                                MM.ui.dialogs.close("formatboundary")
                            },
                            classes: "button default"
                        }]
                    })
                },
                onSelectNode: function() {
                    if (canvas.selected.node) {
                        var e = this._getStyleByBoundary(canvas.selected.node.boundary);
                        this._setSelected(e)
                    }
                },
                _setSelected: function(e) {
                    if (this.list.select(".selected").invoke("removeClassName", "selected"),
                    e) {
                        var t = mm$("style_boundary_" + e.id);
                        t && addClassName(t, "selected")
                    }
                },
                _getStyleByBoundary: function(e) {
                    if (e)
                        return this._getBoundaryStyles().find(function(t) {
                            return e.style.equals(t)
                        })
                },
                _getBoundaryStyles: function() {
                    var e = App.config.mapTheme.boundary_styles;
                    return 0 === e.length && MapTheme.getDefault() && (e = MapTheme.getDefault().boundary_styles),
                    e.concat(Style.userBoundaryStyles)
                }
            });
            t.default = l
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    "4XN+": function(e, t) {
        function n() {
            return []
        }
        e.exports = n
    },
    "4dmE": function(e, t, n) {
        function i(e) {
            if ("string" == typeof e || o(e))
                return e;
            var t = e + "";
            return "0" == t && 1 / e == -s ? "-0" : t
        }
        var o = n("hyfS")
          , s = 1 / 0;
        e.exports = i
    },
    "5cCM": function(e, t, n) {
        function i(e, t, n) {
            var i = e[t];
            r.call(e, t) && s(i, n) && (void 0 !== n || t in e) || o(e, t, n)
        }
        var o = n("tZex")
          , s = n("0huu")
          , a = Object.prototype
          , r = a.hasOwnProperty;
        e.exports = i
    },
    "62Jj": function(e, t) {
        App.ui.Message = {
            INFO: "info",
            NOTICE: "info",
            WARNING: "warning",
            ERROR: "error",
            captions: [I18n.t("js.info") + ":", I18n.t("js.note") + ":", I18n.t("js.warning") + ":", I18n.t("js.error") + ":", I18n.t("js.did_you_know")],
            duration: 5,
            show: function(e, t, n) {
                if (!Presentation.on) {
                    this.element || (this.element = $("popover_message")),
                    this.duration = n || this.duration;
                    var i = MM.ui.icon({
                        name: t || this.WARNING,
                        size: 16
                    })
                      , o = "<div row>" + i + '<p class="mh-10">' + e + "</p></div>";
                    this.element.innerHTML === o && this.visible ? (this.clearTimer(),
                    this.setTimer()) : (this.element.update(o),
                    CSS.set(this.element, {
                        top: "-60px",
                        left: UI.Registry.getViewportOffset("left") + "px",
                        transitionDuration: 0
                    }),
                    this.timeout && this.clearTimer(),
                    setTimeout(function() {
                        CSS.Effect.Morph(this.element, {
                            duration: .8,
                            style: {
                                top: UI.Registry.getViewportOffset("top") + "px",
                                opacity: "1"
                            }
                        }),
                        this.setTimer()
                    }
                    .bind(this), 10)),
                    this.visible = !0
                }
            },
            hide: function() {
                CSS.Effect.Morph(this.element, {
                    duration: .8,
                    style: {
                        left: "-360px",
                        opacity: "0"
                    }
                }),
                this.clearTimer(),
                this.visible = !1
            },
            showSticky: function(e, t) {
                var n = new Element("div",{
                    id: "popover_message_sticky",
                    class: "popover message sticky rad-5 " + (t || "")
                });
                document.body.appendChild(n),
                mm$("popover_message_sticky").innerHTML = e,
                new Effect.Appear(n)
            },
            hideSticky: function() {
                $("popover_message_sticky").remove()
            },
            setTimer: function() {
                -1 !== this.duration && (this.timeout = setTimeout(function() {
                    this.hide()
                }
                .bind(this), 1e3 * this.duration))
            },
            clearTimer: function() {
                this.timeout && clearTimeout(this.timeout),
                this.timeout = null
            }
        },
        window.Message = App.ui.Message
    },
    "6B3d": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("A9ap")
              , s = n("CT+U")
              , a = function(t) {
                e.render(i.createElement(s.a, {
                    selectedValue: t,
                    onSelect: canvas.onSetStyle.bind(canvas, "fontSize")
                }), mm$("btn-size-container"))
            }
              , r = Class.create(o.default, {
                initialize: function($super, e, t) {
                    $super("format", e, t),
                    Element.bindOnClick("btn_bold", canvas.onSetStyle.bind(canvas, "bold", "toggle")),
                    Element.bindOnClick("btn_italic", canvas.onSetStyle.bind(canvas, "italic", "toggle"))
                },
                onSelectNode: function() {
                    MM.ui.buttonUnselect("btn_bold", "btn_italic");
                    var e = canvas.selected.node.currentStyle();
                    a(e.fontSize),
                    e.bold && MM.ui.buttonSelect("btn_bold"),
                    e.italic && MM.ui.buttonSelect("btn_italic")
                }
            });
            t.default = r
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    "7jJu": function(e, t) {
        function n(e, t) {
            return null == e ? void 0 : e[t]
        }
        e.exports = n
    },
    "83D3": function(e, t) {
        function n(e, t, n) {
            for (var i = -1, o = null == e ? 0 : e.length; ++i < o; )
                if (n(t, e[i]))
                    return !0;
            return !1
        }
        e.exports = n
    },
    "8yla": function(e, t) {
        function n(e, t) {
            for (var n = -1, i = null == e ? 0 : e.length; ++n < i && !1 !== t(e[n], n, e); )
                ;
            return e
        }
        e.exports = n
    },
    "9pOK": function(e, t) {
        function n(e) {
            return null === e
        }
        e.exports = n
    },
    A9ap: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            visible: !1,
            expandable: !1,
            onExpand: function() {
                return null
            },
            initialize: function(e, t, n) {
                this.id = e,
                this.sidebar = t,
                this.el = $(e),
                this.parent = n,
                this.expandable && (this.expandedEl = $(e + "_expanded")),
                this.animationHide && this.expandedEl && CSS.set(this.expandedEl, {
                    transform: this.animationHide
                })
            },
            show: function(e) {
                function t(t) {
                    return e.apply(this, arguments)
                }
                return t.toString = function() {
                    return e.toString()
                }
                ,
                t
            }(function(e) {
                this.visible || (this.visible = !0,
                e && this.sidebar.expandedWidget && !this.expandable && this.sidebar.expandedWidget.contract(),
                show(this.el),
                this.loaded || this.load(),
                canvas.selected && this.onSelectNode(),
                UI.Registry.notify(this.sidebar, "onResize"),
                this.parent && this.parent.onShow(this))
            }),
            hide: function(e) {
                function t() {
                    return e.apply(this, arguments)
                }
                return t.toString = function() {
                    return e.toString()
                }
                ,
                t
            }(function() {
                hide(this.el),
                this.visible = !1,
                UI.Registry.notify(this.sidebar, "onResize")
            }),
            toggle: function() {
                this.visible ? this.hide() : this.show()
            },
            load: function() {
                this.loaded = !0
            },
            toViewMode: function() {},
            toEditMode: function() {},
            onSelectNode: function() {},
            expand: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                if (this.expandable && !this.expanded) {
                    var t = e.savePreference;
                    this.sidebar.expandedWidget = this,
                    this.expanded = !0,
                    this.positionExpandedEl(this.expandedEl),
                    t && App.setPreference("sidebar_extended", this.id),
                    this.onExpand()
                }
            },
            contract: function() {
                this.expandable && (App.setPreference("sidebar_extended", null),
                this.sidebar.expandedWidget = null,
                this.expanded = !1,
                this.positionExpandedEl(this.sidebar.toolbar))
            },
            positionExpandedEl: function(e) {
                this.sidebar.hide(!0, !1, this.animationHide, this.animationFunction),
                this.sidebar.expandedElement = e,
                this.sidebar.show(!0, !1, this.animationShow, this.animationFunction)
            }
        });
        t.default = i
    },
    AGfX: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
          , o = Class.create({
            from: null,
            due: null,
            resource: null,
            effort: "",
            priority: -1,
            complete: -1,
            initialize: function(e) {
                e.from && (this.from = new Date(e.from)),
                e.due && (this.due = new Date(e.due)),
                this.resource = null,
                "string" == typeof e.resource && "" !== e.resource ? this.resource = {
                    id: e.resource_id,
                    name: e.resource
                } : "object" === i(e.resource) && (this.resource = e.resource),
                this.effort = e.effort || "",
                this.priority = void 0 !== e.priority && e.priority > -1 ? e.priority : -1,
                this.complete = void 0 !== e.complete && e.complete > -1 ? e.complete : -1
            },
            equals: function(e) {
                return !(this.from && !e.from || !this.from && e.from || this.from && e.from && this.from.toString() != e.from.toString()) && (!(this.due && !e.due || !this.due && e.due || this.due && e.due && this.due.toString() != e.due.toString()) && (!(this.resource && !e.resource || !this.resource && e.resource || this.resource && e.resource && (this.resource.name != e.resource.name || this.resource.id != e.resource.id)) && (this.effort == e.effort && (this.priority == e.priority && this.complete == e.complete))))
            },
            empty: function() {
                return !this.from && !this.due && !this.resource && !this.effort && this.priority < 0 && this.complete < 0
            },
            iconsOnly: function() {
                return !(this.from || this.due || this.resource || this.effort)
            },
            toString: function(e) {
                return "due" === e ? this.due ? this.due.getMonth() + 1 + "/" + this.due.getDate() + "/" + this.due.getFullYear() : "-" : "from" === e ? this.from ? this.from.getMonth() + 1 + "/" + this.from.getDate() + "/" + this.from.getFullYear() : "-" : "resource" === e ? this.resource ? this.resource.name : "-" : void 0
            }
        });
        t.default = o
    },
    BLbw: function(e, t, n) {
        "use strict";
        (function(e) {
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function o(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function s(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var a = n("atEJ")
              , r = n("worM")
              , l = n("zISO")
              , c = n("jR5l")
              , d = n("bPcH")
              , h = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , u = function(e, t) {
                t && (e.metaKey || e.ctrlKey || e.shiftKey ? window.open("/" + t) : window.location.href = "/" + t)
            }
              , p = []
              , f = function(t) {
                function n(e) {
                    i(this, n);
                    var t = o(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
                    return t.state = {
                        isLoading: !0,
                        items: p
                    },
                    t._createNewMap = t._createNewMap.bind(t),
                    t
                }
                return s(n, t),
                h(n, [{
                    key: "_createNewMap",
                    value: function(e) {
                        e.preventDefault(),
                        MM.ui.disableButton(this.newMapBtn),
                        document.location.href = document.location.protocol + "//" + document.location.host + "/maps/new?template_id=0"
                    }
                }, {
                    key: "componentWillMount",
                    value: function() {
                        var e = this;
                        new Ajax.Request("/maps/get_user_maps",{
                            onSuccess: function(t) {
                                var n = t.responseText.evalJSON();
                                p = [],
                                n.each(function(e) {
                                    p.push({
                                        label: e.title,
                                        className: "ellipsis",
                                        style: {
                                            whiteSpace: "pre"
                                        },
                                        onClick: function(t) {
                                            return u(t, e.id)
                                        }
                                    })
                                }),
                                e.setState({
                                    isLoading: !1,
                                    items: p
                                })
                            }
                        })
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this;
                        return this.state.isLoading ? e.createElement("div", {
                            className: "ta-center"
                        }, e.createElement(a.a, {
                            size: 48,
                            opts: {
                                className: "h-iblock m-10"
                            }
                        })) : e.createElement("div", {
                            className: ""
                        }, e.createElement(l.a, {
                            title: I18n.t("js.my_maps"),
                            className: "ph-15 fs-18 pb-10",
                            titleClassName: "mv-5 c-grey fw-500"
                        }), e.createElement(d.a, {
                            autofocus: !0,
                            inputClassName: "mh-15 mb-10",
                            filterableAttribute: "label"
                        }, e.createElement(c.a, null, e.createElement(r.a, {
                            items: this.state.items,
                            className: "maxh-300px h-overflow-y"
                        }))), e.createElement("a", {
                            ref: function(e) {
                                return t.newMapBtn = e
                            },
                            className: "button default m-10",
                            onClick: this._createNewMap
                        }, I18n.t("js.new_mind_map")))
                    }
                }]),
                n
            }(e.Component);
            t.a = f
        }
        ).call(t, n("nakD"))
    },
    CKi4: function(e, t, n) {
        function i(e, t) {
            return a(e, s(o(t)))
        }
        var o = n("EAyW")
          , s = n("t6QJ")
          , a = n("yDlx");
        e.exports = i
    },
    "CT+U": function(e, t, n) {
        "use strict";
        (function(e) {
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function o(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function s(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var a = n("YmTu")
              , r = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , l = function(t) {
                function n(e) {
                    i(this, n);
                    var t = o(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
                    return t.state = {
                        selected: t.props.selectedValue
                    },
                    t
                }
                return s(n, t),
                r(n, [{
                    key: "_handleClick",
                    value: function(e, t) {
                        t.preventDefault(),
                        t.stopPropagation(),
                        this.props.onSelect(e),
                        this.setState({
                            selected: e
                        })
                    }
                }, {
                    key: "componentDidMount",
                    value: function() {
                        this.tooltips = MM.ui.ToolTips.touchSafe({
                            el: this.container
                        })
                    }
                }, {
                    key: "componentWillReceiveProps",
                    value: function(e) {
                        e.selectedValue && this.props.selected !== e.selectedValue && this.setState({
                            selected: e.selectedValue
                        })
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this
                          , n = [{
                            name: "small",
                            value: 100,
                            className: "m-0",
                            iconSize: "10"
                        }, {
                            name: "medium",
                            value: 120,
                            className: null,
                            iconSize: "16"
                        }, {
                            name: "large",
                            value: 150,
                            className: "m-0",
                            iconSize: "20"
                        }];
                        return e.createElement("div", {
                            ref: function(e) {
                                return t.container = e
                            },
                            className: "h-flex-row " + this.props.className
                        }, n.map(function(n, i) {
                            var o = "tooltip widget-button s-36 " + n.className + (t.state.selected === n.value ? " selected" : "");
                            return e.createElement("a", {
                                key: i,
                                href: "#",
                                className: o,
                                title: I18n.t("js.text_size." + n.name),
                                onClick: t._handleClick.bind(t, n.value)
                            }, e.createElement(a.a, {
                                opts: {
                                    name: "text-size",
                                    size: n.iconSize
                                }
                            }))
                        }))
                    }
                }]),
                n
            }(e.Component);
            l.defaultProps = {
                className: "",
                onSelect: function() {}
            },
            t.a = l
        }
        ).call(t, n("nakD"))
    },
    FN6h: function(e, t, n) {
        "use strict";
        (function(e) {
            var i = n("PYcA")
              , o = n("qzqB")
              , s = n("YmTu")
              , a = n("worM")
              , r = {
                youtube: {
                    label: "YouTube"
                },
                vimeo: {},
                dailymotion: {},
                google: {},
                iconfinder: {
                    label: "IconFinder",
                    iconClassName: "rad-0"
                },
                url: {
                    label: "URL"
                },
                skoletube: {
                    label: "SkoleTube"
                }
            }
              , l = function(t) {
                var n = t.sources
                  , l = t.selectedSource
                  , c = t.onChange
                  , d = n.map(function(t) {
                    var n = r[t]
                      , i = n.label
                      , o = void 0 === i ? t.capitalize() : i
                      , a = n.iconClassName
                      , l = void 0 === a ? "" : a;
                    return {
                        icon: e.createElement(s.a, {
                            opts: {
                                name: ("url" === t ? "" : "service-") + t,
                                size: 22,
                                parentClasses: "rad-100% mr-8 " + l
                            }
                        }),
                        label: o,
                        value: t
                    }
                });
                return e.createElement(i.a, {
                    opener: e.createElement(o.a, {
                        className: "w-190 mr-10"
                    }),
                    selected: d.find(function(e) {
                        return e.value === l
                    }),
                    onChange: c
                }, e.createElement(a.a, {
                    items: d
                }))
            };
            t.a = l
        }
        ).call(t, n("nakD"))
    },
    G8SJ: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("A9ap")
              , s = n("zOua")
              , a = n("worM")
              , r = n("YmTu")
              , l = n("SZxL")
              , c = n("67vC")
              , d = [10, 12, 14, 18]
              , h = {
                left: "text-left-aligned",
                right: "text-right-aligned",
                center: "text-centered",
                justify: "text-justify"
            }
              , u = {
                color: "000000",
                fontSize: 12
            }
              , p = Class.create(o.default, {
                initialize: function($super, e, t) {
                    $super("notes", e, t),
                    this.field = $("note_content"),
                    this.blurListener = this.onBlur.bind(this),
                    this.keymap = new MM.utils.KeyMap(this.field,"notes_keymap",[{
                        key: MM.utils.KeyEvent.TAB,
                        stopEvent: !0,
                        fn: function() {
                            return MM.utils.replaceSelection("\t")
                        }
                    }, {
                        key: "s",
                        ctrl: !0,
                        fn: this.onBlur.bind(this)
                    }]),
                    this.keymap.disable(),
                    Element.bindOnClick("btn_removenote", this.removeNote.bind(this)),
                    Element.bindOnClick("btn_autonote", this.getAutoNote.bind(this)),
                    Element.bindOnClick("btn_dlg_notes_widget", this.showDialog.bind(this)),
                    this.state = {
                        color: u.color
                    }
                },
                load: function($super) {
                    this.initCE(),
                    $super()
                },
                focus: function() {
                    this.show(!0),
                    this.field.focus()
                },
                onFocus: function() {
                    _Event.observeBlur(this.field, this.blurListener),
                    this.keymap.enable(),
                    canvas.removeFocus()
                },
                onBlur: function() {
                    _Event.stopObservingBlur(this.field, this.blurListener),
                    this.field.blur(),
                    this.keymap.disable(),
                    canvas.addFocus(),
                    this.save(this.getValue())
                },
                initCE: function() {
                    this.field.contentEditable = !0,
                    this.field.observe("focus", this.onFocus.bind(this))
                },
                showDialog: function(e) {
                    e && e.stop(),
                    this.shown || (this.shown = !0,
                    canvas.removeFocus(),
                    MM.utils.loadCSS("app/map/quill.css"),
                    MM.utils.loadScript("tools/quill/quill.js", function() {
                        MM.ui.dialogs.show("notes_widget", {
                            controller: "dialog",
                            dlg_name: "notes_widget",
                            width: 590,
                            noHelp: !0,
                            onComplete: this.setupDialogContent.bind(this, canvas.selected.node.note),
                            onDestroy: function() {
                                clearTimeout(this.selectionTimeout),
                                this.selectionTimeout = null,
                                this.shown = !1,
                                this.editor_dlg = null,
                                this.sizePopover.destroy(),
                                this.sizePopover = null,
                                this.alignPopover.destroy(),
                                this.alignPopover = null,
                                this.colorPopover.destroy(),
                                this.colorPopover = null,
                                MM.ui.ToolTips.destroyTouchSafe(this.tooltips),
                                this.tooltips = null,
                                canvas.addFocus()
                            }
                            .bind(this)
                        })
                    }
                    .bind(this)))
                },
                setupDialogContent: function(e) {
                    if (mm$("notes_header").innerHTML = e ? I18n.t("js.edit_note") : I18n.t("js.add_note"),
                    this.initEditor(),
                    this.buildPopovers(),
                    this.tooltips = MM.ui.ToolTips.touchSafe({
                        el: this.editor_dlg.modules.toolbar.container
                    }),
                    e) {
                        this.editor_dlg.root.innerHTML = "";
                        var t = new Element("div").update(e);
                        t.firstChild.tagName || (t = new Element("div").update(t.outerHTML)),
                        t.childElements().each(function(e) {
                            setTimeout(function() {
                                this.editor_dlg.root.appendChild(e)
                            }
                            .bind(this), 100)
                        }
                        .bind(this))
                    }
                    this.selectionTimeout = setTimeout(this.setEditorDlgSelection.bind(this), 400)
                },
                initEditor: function() {
                    this.editor_dlg = new Quill("#node_content_dlg",{
                        modules: {
                            toolbar: {
                                container: "#notes_toolbar"
                            },
                            "link-tooltip": {
                                template: '<span class="title" style="margin-right: 5px;">' + I18n.t("js.visit_url") + ':</span><a href="#" class="url" target="_blank"></a><input class="input" type="text"><span style="margin: 0 5px;">-</span><a href="#" class="change">' + I18n.t("js.change") + '</a><a href="#" class="done">' + I18n.t("js.done") + "</a>"
                            },
                            "image-tooltip": {
                                template: '<input class="input" type="textbox"><div class="preview"><span>' + I18n.t("js.preview") + '</span></div><a href="#" class="cancel">' + I18n.t("js.cancel") + '</a><a href="#" class="insert">' + I18n.t("js.insert") + "</a>"
                            }
                        },
                        theme: "snow"
                    }),
                    this.initEditorListeners(),
                    this.pasteManager = this.editor_dlg.getModule("paste-manager"),
                    this.switchModeBtn = mm$("btn_switch_mode"),
                    this.renderSwitchButton(),
                    this.switchModeBtn.observe("click", this.onSwitchMode.bind(this)),
                    mm$("btn_erase").observe("click", this.removeFormat.bind(this))
                },
                initEditorListeners: function() {
                    this.editor_dlg.on("text-change", this.onTextChange.bind(this)),
                    this.editor_dlg.on("selection-change", this.onSelectionChange.bind(this))
                },
                onTextChange: function(e, t) {
                    if (this.getDialogValue().length > 65e3 && MM.ui.dialogs.showError(I18n.t("js.note_is_too_long")),
                    !this.pasteManager.plainText) {
                        var n = this.editor_dlg.getSelection();
                        n && this.updateAlignBtn(n)
                    }
                },
                onSelectionChange: function(e) {
                    if (!this.pasteManager.plainText && e) {
                        var t = this.editor_dlg.getContents(e.end - 1, e.end);
                        if (t && t.ops.length > 0) {
                            var n = t.ops[0].attributes
                              , i = "";
                            if (n.color) {
                                n.color.split(",").each(function(e) {
                                    e = parseInt(e.replace(/[^\d]/g, "")).toString(16),
                                    i += e.length > 1 ? e : "0" + e
                                })
                            } else
                                i = u.color;
                            this.updateFontColorBtn(i),
                            this.updateFontSizeBtn(n.size)
                        }
                        this.updateAlignBtn(e)
                    }
                },
                buildPopovers: function() {
                    var t = this;
                    this.colorPopover = new l.c("color",{
                        onShow: function() {
                            e.render(i.createElement(s.a, {
                                selectedColor: t.state.color,
                                onItemClick: t.changeFontColor.bind(t)
                            }), t.colorPopover.widgetContainer)
                        }
                    }),
                    this.sizePopover = new l.c("size"),
                    e.render(i.createElement(a.a, {
                        items: d.map(function(e) {
                            return {
                                label: i.createElement("span", {
                                    className: "fs-" + e
                                }, e, "pt"),
                                onClick: t.changeFontSize.bind(t, e)
                            }
                        })
                    }), this.sizePopover.widgetContainer),
                    this.alignPopover = new l.c("align"),
                    e.render(i.createElement(a.a, {
                        items: Object.keys(h).map(function(e) {
                            return {
                                icon: i.createElement(r.a, {
                                    opts: {
                                        name: h[e],
                                        size: 18,
                                        consize: 20,
                                        color: "blue",
                                        classes: "h-a-center",
                                        parentClasses: "p-r mr-8px"
                                    }
                                }),
                                label: I18n.t("js.text_alignment." + e),
                                onClick: t.changeAlignment.bind(t, e)
                            }
                        })
                    }), this.alignPopover.widgetContainer)
                },
                _getSelection: function() {
                    return this.editor_dlg.focus(),
                    this.editor_dlg.getSelection()
                },
                changeFontSize: function(e) {
                    var t = this._getSelection()
                      , n = e + "px";
                    this.editor_dlg.prepareFormat("size", n),
                    t && t.end > t.start && this.editor_dlg.formatText(t.start, t.end, "size", n),
                    this.updateFontSizeBtn(e)
                },
                changeAlignment: function(e) {
                    var t = this._getSelection();
                    this.editor_dlg.formatLine(t, "align", e, "user"),
                    this.updateAlignBtn(t, e)
                },
                removeNote: function() {
                    this.saveFromValue(""),
                    p.cache.autonote = {
                        id: null
                    }
                },
                getAutoNote: function() {
                    p.cache.autonote.id == canvas.selected.node.id && p.cache.autonote.title == canvas.selected.node.title && p.cache.autonote.items.length > 1 ? (p.cache.autonote.items.shift(),
                    this.saveFromValue(p.cache.autonote.items[0].content)) : (ServerConnection.autoNote({
                        query: canvas.selected.node.title
                    }, this.setAutoNote.bind(this)),
                    $("btn_autonote").addClassName("fx-wiggle fx-infinite fx-none")),
                    Amplitude.logEvent("wunder_note")
                },
                setAutoNote: function(e) {
                    if ($("btn_autonote").removeClassName("fx-wiggle fx-infinite").removeClassName("fx-none"),
                    e.error || 0 === e.items.length)
                        return void Message.show(I18n.t("js.no_auto_note_found_for_topic"), Message.INFO);
                    p.cache.autonote = {
                        id: canvas.selected.node.id,
                        title: canvas.selected.node.title,
                        items: e.items
                    },
                    this.saveFromValue(e.items[0].content)
                },
                getValue: function() {
                    return this.field.innerHTML
                },
                getDialogValue: function() {
                    return this.pasteManager.plainText ? this.editor_dlg.getText().escapeHTML() : this.editor_dlg.getHTML()
                },
                save: function(e) {
                    canvas.selected.node.note !== e && (App.trigger(CustomEvents.NOTE_CHANGED),
                    "<br>" === e && (e = ""),
                    canvas.onSetProperty("note", e, {
                        onOk: Windows.close.bind(Windows, "notes_widget")
                    }))
                },
                saveFromValue: function(e) {
                    "<p>&nbsp;</p>" === e && (e = ""),
                    this.setValue(e),
                    this.save(e)
                },
                saveFromDialog: function() {
                    this.saveFromValue(this.getDialogValue())
                },
                setValue: function(e) {
                    this.field && (this.field.innerHTML = e.replace(/\n/g, "<br/>"))
                },
                onSelectNode: function() {
                    this.setValue(canvas.selected.node.note || "")
                },
                setEditorDlgSelection: function(e) {
                    e = Object.extend({
                        start: 0,
                        end: 0
                    }, e),
                    setTimeout(this.editor_dlg.setSelection.bind(this.editor_dlg, e.start, e.end), 0)
                },
                onSwitchMode: function(e) {
                    e.stop();
                    var t = this._getSelection();
                    if (this.pasteManager.plainText)
                        this.doSwitchMode(!1, t);
                    else {
                        if (this.editor_dlg.getText().trim().empty())
                            return void this.doSwitchMode(!0, t);
                        Dialog.confirm("<h2>" + I18n.t("js.convert_to_plain_text") + "</h2><p>" + I18n.t("js.convert_to_plain_text_information") + "</p>", {
                            okLabel: I18n.t("js.si"),
                            cancelLabel: I18n.t("js.njet"),
                            ok: function() {
                                this.doSwitchMode(!0, t),
                                Dialog.closeInfo()
                            }
                            .bind(this),
                            cancel: this.setEditorDlgSelection.bind(this, t),
                            windowParameters: {
                                width: 270
                            }
                        })
                    }
                },
                doSwitchMode: function(e, t) {
                    this.pasteManager.plainText = e;
                    var n = mm$("notes_toolbar");
                    e ? (this.editor_dlg.setContents([{
                        value: this.editor_dlg.getText().replace(/<br\/>/g, "\n")
                    }]),
                    addClassName(n, "h-hidden"),
                    n.style.opacity = 0,
                    this.switchModeBtn.innerHTML = I18n.t("js.switch_to_formatted_text")) : (removeClassName(n, "h-hidden"),
                    new Effect.Opacity(n,{
                        from: 0,
                        to: 1,
                        duration: .5
                    }),
                    this.switchModeBtn.innerHTML = I18n.t("js.switch_to_plain_text")),
                    this.renderSwitchButton(),
                    this.setEditorDlgSelection(t)
                },
                renderSwitchButton: function() {
                    this.switchModeBtn.innerHTML = this.pasteManager.plainText ? MM.ui.icon({
                        name: "copy",
                        size: 20,
                        parentClasses: "h-iblock mr-5px",
                        color: "grey-light"
                    }) + I18n.t("js.switch_to_formatted_text") : MM.ui.icon({
                        name: "file-format-generic",
                        size: 20,
                        parentClasses: "h-iblock mr-5px"
                    }) + I18n.t("js.switch_to_plain_text")
                },
                changeFontColor: function(e) {
                    var t = "rgb(" + parseInt(e.substring(0, 2), 16) + ", " + parseInt(e.substring(2, 4), 16) + ", " + parseInt(e.substring(4, 6), 16) + ")"
                      , n = this._getSelection();
                    this.editor_dlg.prepareFormat("color", t),
                    n && n.end > n.start && this.editor_dlg.formatText(n.start, n.end, "color", t),
                    this.updateFontColorBtn(e)
                },
                removeFormat: function(e) {
                    e.stop();
                    var t = this._getSelection()
                      , n = this.editor_dlg.getText(t.start, t.end);
                    this.editor_dlg.deleteText(t.start, t.end),
                    this.editor_dlg.insertText(t.start, n)
                },
                updateAlignBtn: function(e, t) {
                    if (!t) {
                        var n = this.editor_dlg.editor.doc.findLineAt(e.end)[0];
                        t = n && n.formats.align ? n.formats.align : "left"
                    }
                    this.alignPopover.opener.update(MM.ui.icon({
                        name: h[t],
                        size: 18,
                        consize: 18,
                        color: "blue"
                    }))
                },
                updateFontSizeBtn: function(e) {
                    e = parseInt(e),
                    !isNaN(e) && d.include(e) || (e = u.fontSize),
                    this.sizePopover.field.update(e + "pt")
                },
                updateFontColorBtn: function(e) {
                    e = c.COLORS.include(e) ? e : u.color,
                    this.state.color !== e && (this.state.color = e,
                    mm$("btn_color_bg").style.backgroundColor = "#" + this.state.color)
                }
            });
            p.cache = {
                autonote: {
                    id: null
                }
            },
            t.default = p
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    Gdal: function(e, t, n) {
        function i(e, t) {
            return a(s(e, t, o), e + "")
        }
        var o = n("atk5")
          , s = n("ORg+")
          , a = n("1GA3");
        e.exports = i
    },
    GgL9: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("kLIQ")
          , o = n("pNvO")
          , s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
          , a = {
            width: 110,
            height: 74
        };
        App.ui.Slide = Class.create({
            initialize: function(e) {
                this.id = e.id,
                this.nodes = e.nodes || [],
                this.padding = e.padding || {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0
                },
                this.next_slide_id = e.next_slide_id,
                this.transition = void 0 !== e.transition ? e.transition : void 0 !== App.ui.SlideShow ? App.ui.SlideShow.defaultTransition : App.ui.Slide.Transition.fast_zoom_pan,
                this.setRectangle()
            },
            setRectangle: function() {
                this.rectangle = null;
                var e = this.nodes.findAll(function(e) {
                    return e.isVisible()
                });
                0 !== e.length && (this.rectangle = canvas.getRectangleFromNodes(e),
                this.rectangle && this.rectangle.addPadding(this.padding))
            },
            save: function(e) {
                if (0 !== this.nodes.length) {
                    e = Object.extend({}, e);
                    var t = [];
                    this.nodes.each(function(e) {
                        for (var n = e.children.length > 0, i = 0; i < e.children.length && n; ) {
                            var o = e.children[i];
                            this.nodes.include(o) || (n = !1),
                            i++
                        }
                        t.push({
                            id: e.id,
                            with_children: n
                        })
                    }
                    .bind(this));
                    var n = {
                        map_id: App.config.map_id,
                        nodes: Object.toJSON(t),
                        padding: Object.toJSON(this.padding),
                        transition: this.transition
                    };
                    this.id && Object.extend(n, {
                        id: this.id
                    }),
                    this.next && Object.extend(n, {
                        next_slide: this.next.id
                    }),
                    new Ajax.Request("/presentation/slide",{
                        parameters: n,
                        onSuccess: function(t) {
                            var n = t.responseText.evalJSON();
                            n.error ? (Message.show("The slide could not be saved.", Message.ERROR),
                            e.onFailure && e.onFailure()) : this.id = n.slide.id
                        }
                        .bind(this)
                    })
                }
            },
            buildUI: function(e) {
                if (this.setRectangle(),
                !this.rectangle)
                    return void (this.selection && (this.selection.remove(),
                    this.selection = null));
                var t = {
                    x1: this.rectangle.p1.x,
                    y1: this.rectangle.p1.y,
                    x2: this.rectangle.p2.x,
                    y2: this.rectangle.p2.y
                };
                if (!this.selection || this.selection.areaCoords.x1 !== t.x1 || this.selection.areaCoords.x2 !== t.x2 || this.selection.areaCoords.y1 !== t.y1 || this.selection.areaCoords.y2 !== t.y2) {
                    var n = Object.extend(this.defaultSelectionOptions(), {
                        displayOnInit: !0,
                        useEffect: e,
                        onloadCoords: {
                            x1: this.rectangle.p1.x,
                            y1: this.rectangle.p1.y,
                            x2: this.rectangle.p2.x,
                            y2: this.rectangle.p2.y
                        }
                    });
                    this.selection && Selections.all.indexOf(this.selection) > -1 ? (this.selection.areaCoords = t,
                    this.selection.drawArea()) : "undefined" != typeof Selection && void 0 !== Selection.Base && App.config.editable && (this.selection = new Selection.Base("canvas",n),
                    this.selection.deselect(),
                    void 0 === App.ui.SlideShow || App.ui.SlideShow.selectionsVisible || this.selection.hide())
                }
            },
            getSize: function() {
                return this.rectangle ? this.rectangle.dimensions() : {
                    width: 0,
                    height: 0
                }
            },
            getCoords: function() {
                return this.rectangle || this.setRectangle(),
                this.rectangle ? {
                    x1: this.rectangle.p1.x,
                    y1: this.rectangle.p1.y,
                    x2: this.rectangle.p2.x,
                    y2: this.rectangle.p2.y
                } : {
                    x1: 0,
                    y1: 0,
                    x2: 0,
                    y2: 0
                }
            },
            transformCoordsForPreview: function(e) {
                var t = this.getCoords()
                  , n = Math.min(t.x1, t.x2) - e.left
                  , i = Math.min(t.y1, t.y2) - e.top
                  , o = Math.abs(t.x2 - t.x1)
                  , s = Math.abs(t.y2 - t.y1);
                if (o < a.width && s < a.height)
                    return n -= (a.width - o) / 2,
                    i -= (a.height - s) / 2,
                    {
                        x: parseInt(n),
                        y: parseInt(i),
                        width: a.width,
                        height: a.height
                    };
                var r = o / a.width
                  , l = s / a.height
                  , c = Math.max(r, l);
                if (r > l) {
                    i -= (a.height * c - s) / 2
                } else {
                    n -= (a.width * c - o) / 2
                }
                return {
                    x: parseInt(n),
                    y: parseInt(i),
                    width: parseInt(a.width * c),
                    height: parseInt(a.height * c)
                }
            },
            getPreviewImageSrc: function(e) {
                var t = this.transformCoordsForPreview(e);
                return "/export/image_section/" + App.config.map_id + "?x=" + t.x + "&y=" + t.y + "&w=" + t.width + "&h=" + t.height
            },
            onExitPlay: function() {
                this.nodes.each(function(e) {
                    removeClassName(e._listener.dcontent.el, "slideshow_current")
                }),
                this.nodes.detect(function(e) {
                    return !e.isVisible()
                }) && this.selection && (this.selection.remove(),
                this.selection = null),
                canvas.closeTemporarilyOpen()
            },
            onPlay: function() {
                var e = !1;
                if (this.nodes.detect(function(e) {
                    return !e.isVisible()
                }) && (this.nodes.each(function(e) {
                    e._listener.makeVisible()
                }),
                this.buildUI(),
                e = !0),
                this.nodes.each(function(e) {
                    addClassName(e._listener.dcontent.el, "slideshow_current")
                }),
                this.prev ? MM.ui.enableButton("slideshow-prev") : MM.ui.disableButton("slideshow-prev"),
                this.next ? MM.ui.enableButton("slideshow-next") : MM.ui.disableButton("slideshow-next"),
                mm$("slideshow_steps")) {
                    mm$("slideshow_step" + this.id).className = "selected";
                    for (var t = this.prev; t; )
                        mm$("slideshow_step" + t.id).className = "seen",
                        t = t.prev;
                    for (t = this.next; t; )
                        mm$("slideshow_step" + t.id).className = "unseen",
                        t = t.next
                }
                return e
            },
            onEnter: function() {},
            defaultSelectionOptions: function() {
                return {}
            }
        }),
        App.ui.VSlide = Class.create(App.ui.Slide, {
            initialize: function($super, e) {
                $super(e),
                this.registerObservers(),
                App.trigger(CustomEvents.SLIDE_CREATED)
            },
            registerObservers: function() {
                this.content = new Element("a"),
                this.label = new Element("span"),
                this.opener = new Element("div",{
                    className: "p-a at-5 ar-5 z-10"
                }).update(MM.ui.icon({
                    name: "opener",
                    size: 12
                })),
                this.imagePreview = new Element("img",{
                    className: "h-hidden"
                }),
                this.content.insert(this.opener).insert(this.label),
                this.content.insert(this.imagePreview),
                this.element = new Element("div",{
                    class: "slide h-cp"
                }).insert(this.content),
                this.element.setStyle({
                    backgroundColor: "#" + App.config.mapTheme.background.color
                }),
                this.element.listener = this,
                App.config.editable && (Event.observe(this.element, "click", this.select.bindAsEventListener(this, !0)),
                Event.observe(this.element, "contextmenu", this.showMenu.bindAsEventListener(this)),
                Event.observe(this.opener, "click", this.showMenu.bindAsEventListener(this)))
            },
            save: function($super) {
                this.rectangle && this.updatePreview(),
                $super({
                    onFailure: this.remove.bind(this)
                })
            },
            buildUI: function($super, e) {
                $super(e),
                this.show()
            },
            copy: function() {
                var e = new App.ui.VSlide({
                    transition: this.transition,
                    padding: this.padding,
                    nodes: this.nodes
                });
                return e.selection = this.selection,
                e
            },
            select: function(e, t) {
                if (e && e.shiftKey) {
                    var n = App.ui.SlideShow.selectedSlide;
                    if (parseInt(n.element.id.replace("mmslide_", "")) < this.element.id.replace("mmslide_", ""))
                        for (; n && n.next && n.next != this; )
                            n = n.next,
                            n.onSelect();
                    else
                        for (; n && n.prev && n.prev != this; )
                            n = n.prev,
                            n.onSelect()
                } else if (e && (e.metaKey || e.ctrlKey)) {
                    if (this.isSelected() && App.ui.SlideShow.selected.length > 1)
                        return void this.deselect(e)
                } else
                    App.ui.SlideShow.selected.each(function(e) {
                        e.deselect()
                    }),
                    App.ui.SlideShow.selected = [];
                this.onSelect(),
                App.ui.SlideShow.selectedSlide = this,
                this.selection && App.ui.SlideShow.selectionsVisible && t && canvas.centerOnElement(this.selection.selArea),
                e && e.preventDefault()
            },
            onSelect: function() {
                if (!this.isSelected()) {
                    App.ui.SlideShow.selectionsVisible && this.nodes.detect(function(e) {
                        return !e.isVisible()
                    }) && (this.nodes.each(function(e) {
                        e._listener.makeVisible()
                    }),
                    this.buildUI(),
                    App.ui.SlideShow.updateLabels()),
                    App.ui.SlideShow.selected.push(this),
                    App.trigger(CustomEvents.SELECTED_SLIDE, {
                        slide: this
                    }),
                    this.element.addClassName("selected"),
                    this.selection && this.selection.select();
                    var e = App.ui.SlideShow.element.parentNode
                      , t = App.ui.SlideShow.element.clientWidth / App.ui.SlideShow.list.length
                      , n = Math.round(t * App.ui.SlideShow.list.indexOf(this)) + 20;
                    e.scrollLeft <= n && n <= e.scrollLeft + e.clientWidth - t || (e.scrollLeft < n ? e.scrollLeft = n : e.scrollLeft = n - e.clientWidth + t)
                }
            },
            isSelected: function() {
                return this.element.hasClassName("selected")
            },
            deselect: function(e) {
                App.ui.SlideShow.selectedSlide === this && (App.ui.SlideShow.selectedSlide = null),
                App.ui.SlideShow.selected = App.ui.SlideShow.selected.without(this),
                this.element.removeClassName("selected"),
                this.selection && this.selection.deselect(),
                canvas.closeTemporarilyOpen(),
                this.selection && !this.nodes.detect(function(e) {
                    return e.isVisible()
                }) && (this.selection.remove(),
                this.selection = null),
                e && "object" === (void 0 === e ? "undefined" : s(e)) && Event.stop(e)
            },
            remove: function() {
                CSS.set(this.element, {
                    transform: CSS.scale(.01),
                    transition: "all 500ms ease"
                }),
                setTimeout(function() {
                    this.element.remove(),
                    this.selection.remove(),
                    this.selection = null
                }
                .bind(this), 500)
            },
            show: function() {
                this.element.show()
            },
            showMenu: function(e) {
                Event.stop(e);
                var t = e.findElement();
                this.select();
                var n = App.ui.SlideShow
                  , i = n.popover;
                n.selectedSlide.id === this.id && i.visible && i.opener === t || (i.opener = t,
                i.show())
            },
            onStartDrag: function() {
                canvas.disableScrollByDrag(),
                this.markedNodes = this.nodes,
                this.markNodes(this.markedNodes)
            },
            onDrag: function(e) {
                if (canvas.disableScrollByDrag(),
                this.unMarkNodes(this.markedNodes),
                e.areaCoords) {
                    var t = new Rectangle(new Point(e.areaCoords.x1,e.areaCoords.y1),new Point(e.areaCoords.x2,e.areaCoords.y2));
                    this.markedNodes = canvas.getNodesFromRectangle(t)
                }
                this.markNodes(this.markedNodes)
            },
            onEndDrag: function(e) {
                if (canvas.enableScrollByDrag(),
                this.unMarkNodes(this.markedNodes),
                this.markedNodes = null,
                e = e || this.selection) {
                    var t = this.nodes;
                    if (this.updateNodes(e.areaCoords),
                    this.nodes = this.nodes.reject(function(e) {
                        return e.id < 0
                    }),
                    0 === this.nodes.length)
                        return Message.show(I18n.t("js.slideshow_no_nodes_error"), Message.INFO),
                        void (this.selection ? (this.nodes = t,
                        this.buildUI(),
                        App.ui.SlideShow.updateLabels(),
                        this.isSelected() && this.selection.select()) : e.remove());
                    var n = this.nodes[0]._listener.dcontent.el.toRectangle();
                    this.nodes.each(function(e) {
                        var t = e._listener.dcontent.el.toRectangle();
                        n = Rectangle.max(n, t)
                    });
                    var i = e.areaCoords
                      , o = new Rectangle(new Point(i.x1,i.y1),new Point(i.x2,i.y2))
                      , s = Rectangle.max(n, o);
                    this.padding = {
                        top: Math.abs(s.p1.y - n.p1.y),
                        right: Math.abs(s.p2.x - n.p2.x),
                        bottom: Math.abs(s.p2.y - n.p2.y),
                        left: Math.abs(s.p1.x - n.p1.x)
                    },
                    this.setRectangle();
                    var a = {
                        x1: s.p1.x,
                        y1: s.p1.y,
                        x2: s.p2.x,
                        y2: s.p2.y
                    };
                    e.setAreaCoords(a, !1, !1, 1),
                    e.drawArea(),
                    this.element.parentNode || App.ui.SlideShow.onEndDrag(this),
                    this.select()
                }
            },
            updatePreview: function() {
                var e = this
                  , t = this.getPreviewImageSrc(App.ui.SlideShow.mapSize)
                  , n = function(t) {
                    e.imagePreview.src = t.src,
                    removeClassName(e.imagePreview, "h-hidden")
                };
                o.a.add({
                    image: {
                        src: t
                    },
                    onLoad: n
                })
            },
            isInViewport: function() {
                var e = this.element.getBoundingClientRect();
                return e.left > 0 && e.right < window.innerWidth
            },
            updateLabel: function(e) {
                this.element.id = "mmslide_" + (e + 1),
                this.label.update(e + 1),
                this.selection && this.selection.updateLabel(e + 1)
            },
            updateNodes: function(e) {
                if (this.unMarkNodes(),
                e) {
                    var t = new Rectangle(new Point(e.x1,e.y1),new Point(e.x2,e.y2));
                    this.nodes = canvas.getNodesFromRectangle(t),
                    this.setRectangle()
                }
            },
            markNodes: function(e) {
                e = e || this.nodes,
                e.each(function(e) {
                    addClassName(e._listener.dcontent.el, "drop_label")
                })
            },
            unMarkNodes: function(e) {
                e = e || this.nodes,
                e.each(function(e) {
                    removeClassName(e._listener.dcontent.el, "drop_label")
                })
            },
            blurForCut: function() {
                Effect.Fade(this.element.id, {
                    from: 1,
                    to: .5
                })
            },
            unblurForCut: function() {
                Effect.Fade(this.element.id, {
                    from: .5,
                    to: 1
                })
            },
            defaultSelectionOptions: function() {
                return {
                    listener: this,
                    onStartDrag: this.onStartDrag.bind(this),
                    onDrag: this.onDrag.bind(this),
                    onEndDrag: this.onEndDrag.bind(this),
                    onUpdate: this.save.bind(this),
                    captureKeys: !1
                }
            }
        }),
        Object.extend(App.ui.Slide, i.a.Node)
    },
    HTWB: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("Kh9o")
          , o = n("wvK4")
          , s = n("i5N/")
          , a = Class.create({
            loaded: !1,
            initialize: function(e) {
                this.options = e || {}
            },
            load: function(e) {
                MM.utils.loadScript("https://apis.google.com/js/client.js", function() {
                    setTimeout(function() {
                        if (void 0 === gapi.client)
                            return void this.load(e);
                        gapi.client.load("youtube", "v3", e),
                        this.loaded = !0
                    }
                    .bind(this), 500)
                }
                .bind(this))
            },
            query: function(e, t) {
                this.loaded ? this.doSearch(e, t) : this.load(this.doSearch.bind(this, e, t))
            },
            queryVideoDetails: function(e, t) {
                t = Object.extend({
                    details: !0
                }, t),
                this.query(e, t)
            },
            doSearch: function(e, t) {
                if (t = Object.extend({
                    per_page: 10
                }, t),
                gapi.client.setApiKey(ServerData.keys.googleOauth),
                t.details)
                    var n = gapi.client.youtube.videos.list({
                        part: "snippet",
                        id: e,
                        fields: "items/snippet/title"
                    });
                else {
                    this.queryText = e.toLowerCase();
                    var n = gapi.client.youtube.search.list({
                        part: "snippet",
                        type: "video",
                        maxResults: t.per_page,
                        fields: "items(id, snippet)",
                        q: this.queryText
                    })
                }
                n.execute(function(e) {
                    e && e.items ? t.onComplete(e.items.map(function(e) {
                        return {
                            id: e.id ? e.id.videoId : "",
                            url: e.id ? e.id.videoId : "",
                            title: e.snippet.title
                        }
                    })) : t.onComplete([])
                })
            }
        })
          , r = Class.create({
            api_url: "https://api.vimeo.com/videos?",
            api_detail_url: "https://vimeo.com/api/oembed.json?url=https://vimeo.com/",
            initialize: function(e) {
                this.options = e || {}
            },
            createRequest: function(e, t, n) {
                var i = new XMLHttpRequest;
                i.open("GET", e, !0),
                t && (i.setRequestHeader("Authorization", "bearer " + ServerData.keys.vimeo),
                i.setRequestHeader("Accept", "application/vnd.vimeo.*+json;version=3.2"),
                i.setRequestHeader("Content-Type", "application/json")),
                i.onreadystatechange = function(e) {
                    return function() {
                        if (4 === e.readyState && 200 === e.status) {
                            var t = JSON.parse(e.responseText);
                            t.data ? n.onComplete && n.onComplete(t.data.map(function(e) {
                                return {
                                    id: e.uri.replace("/videos/", ""),
                                    url: e.uri.replace("/videos/", ""),
                                    title: e.name
                                }
                            })) : n.onComplete([t])
                        }
                    }
                }(i),
                i.send()
            },
            query: function(e, t) {
                this.queryText = e.toLowerCase();
                var n = Object.toQueryString(Object.extend({
                    query: e,
                    page: 1,
                    per_page: 10
                }, t))
                  , i = this.api_url + n.toLowerCase();
                this.createRequest(i, !0, t)
            },
            queryVideoDetails: function(e, t) {
                this.createRequest(this.api_detail_url + e, !1, t)
            }
        })
          , l = Class.create({
            initialize: function(e) {
                this.options = e || {}
            },
            createRequest: function(e, t) {
                var n = mm$(e);
                n && document.body.removeChild(n),
                n = new Element("script",{
                    id: e,
                    src: "https://api.dailymotion.com/" + t
                }),
                document.body.appendChild(n)
            },
            query: function(e, t) {
                window.dailymotionCallback = this.showSearchResult.bind(this);
                var n = {
                    limit: t.per_page || 10,
                    personal: 0,
                    private: 0,
                    search: e
                }
                  , i = "videos?fields=id,title&" + Object.toQueryString(n) + "&callback=dailymotionCallback";
                this.createRequest("dailymotion_script", i),
                this.queryText = e.toLowerCase(),
                this.callback && this.callback == t.onComplete || (this.callback = t.onComplete)
            },
            queryVideoDetails: function(e, t) {
                window.dailymotionCallback = this.showSearchResult.bind(this);
                var n = "video/" + e + "?fields=";
                t.fields.each(function(e) {
                    n += e + ","
                }),
                this.createRequest("dailymotion_script", n + "&callback=dailymotionCallback"),
                this.callback && this.callback == t.onComplete || (this.callback = t.onComplete)
            },
            showSearchResult: function(e) {
                if (delete window.dailymotionCallback,
                this.callback)
                    if (e.list) {
                        var t = e.list;
                        this.callback(t.map(function(e) {
                            return {
                                id: e.id,
                                url: e.id,
                                title: e.title
                            }
                        }))
                    } else
                        e.title ? this.callback([{
                            id: "",
                            url: "",
                            title: e.title
                        }]) : this.callback([])
            }
        })
          , c = Class.create(o.default, {
            initialize: function($super, e) {
                switch ($super(e),
                this.options = Object.extend({
                    type: "videos"
                }, this.options),
                this.options.searcher) {
                case "youtube":
                    this.search = new a,
                    this.options.embedURL = "//www.youtube.com/embed/";
                    break;
                case "vimeo":
                    this.search = new r,
                    this.options.embedURL = "//player.vimeo.com/video/";
                    break;
                case "dailymotion":
                    this.search = new l,
                    this.options.embedURL = "//www.dailymotion.com/embed/video/";
                    break;
                case "skoletube":
                    this.search = new s.default,
                    this.options.embedURL = "//www.skoletube.dk/e/"
                }
            },
            insertListElement: function(e, t) {
                var n = mm$(this.options.searcher + "_" + this.options.type + "_container");
                if (n) {
                    var o = new i.default({
                        url: this.options.embedURL + e.url,
                        source: this.searcher,
                        size: {
                            width: 320,
                            height: 200
                        },
                        title: e.title
                    })
                      , s = new Element("li",{
                        className: "p5 very-rounded text-center"
                    })
                      , a = MM.ui.LoadingSpinner(48)
                      , r = o.getElement();
                    addClassName(r, "mb5"),
                    Event.observeOnce(r, "load", function(e, t, n, i) {
                        this.items[e] = t;
                        var o = new Element("div",{
                            class: "icon-svg video_selector",
                            "data-icon": "checkmark",
                            title: I18n.t("js.select_video")
                        })
                          , s = new Element("p").update(t.title.escapeHTML());
                        i.remove(),
                        n.appendChild(o),
                        n.appendChild(s),
                        n.onclick = this.options.onItemSelect.curry(t),
                        o.onclick = this.options.onItemSelect.curry(t)
                    }
                    .bind(this, t, o, s, a)),
                    s.appendChild(r),
                    s.appendChild(a),
                    n.appendChild(s)
                }
            },
            onNoResultsFound: function() {
                this.ui && mm$(this.options.searcher + "_" + this.options.type + "_container").update(I18n.t("js.no_video_was_found"))
            },
            destroy: function() {
                this.search.items = [],
                this.search.queryText = null,
                this.ui = !1
            }
        });
        t.default = c
    },
    Hnr2: function(e, t, n) {
        function i() {
            if (!arguments.length)
                return [];
            var e = arguments[0];
            return o(e) ? e : [e]
        }
        var o = n("zOp4");
        e.exports = i
    },
    HqoD: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("MAG5")
          , o = n.n(i)
          , s = n("qlsV")
          , a = n("xAzy")
          , r = n("ZfKP")
          , l = n("oMUV")
          , c = n("Kh9o")
          , d = n("AGfX")
          , h = n("/dW8")
          , u = n("67vC")
          , p = (n("oxsE"),
        n("vu0f"))
          , f = Class.create({
            id: null,
            title: null,
            parent: null,
            children: null,
            closed: null,
            pos: null,
            icons: [],
            style: null,
            note: null,
            link: null,
            task: null,
            externalTask: null,
            _listener: null,
            hidden: null,
            modifiedAt: null,
            modifiedBy: null,
            attachments: null,
            idea_image: null,
            idea_video: null,
            comments: null,
            connections: null,
            outgoing_connections: null,
            initialize: function(e) {
                if (this.id = e.id,
                this.children = [],
                this.title = e.title,
                this.closed = e.closed || !1,
                this.icons = [],
                e.icon) {
                    var t = [];
                    e.icon.split(",").each(function(e) {
                        var n = Icon.fromFullName(e);
                        n && t.push(n)
                    }
                    .bind(this)),
                    this.icons = Icon.compactAndOrder(t)
                }
                e.style && (this.style = new Style(e.style)),
                this.note = e.note,
                this.link = e.link ? e.link.escapeHTML() : "",
                e.idea_video && (this.idea_video = new c.default(Object.extend(e.idea_video, {
                    idea_id: this.id
                }))),
                this.getTaskObject(e.task),
                this.externalTask = e.externalTask,
                this.pos = e.pos,
                this.modifiedAt = e.modifiedAt ? new Date(e.modifiedAt) : new Date,
                this.modifiedBy = e.modifiedBy,
                this.attachments = [],
                this.idea_image = null,
                this.connections = [],
                this.outgoing_connections = [],
                this.ideaProperty = e.ideaProperty,
                e.boundary && (this.boundary = new s.default(Object.extend(e.boundary)),
                this.boundary.node = this),
                tree.nodes[e.id] = this,
                this.votes = [],
                e.votes && e.votes.each(function(e) {
                    this.votes.push(new IdeaVote(e)),
                    -1 === IdeaVote.nodesWithVotes.indexOf(this) && IdeaVote.nodesWithVotes.push(this)
                }
                .bind(this)),
                this.comments = [],
                e.comments && e.comments.each(function(e) {
                    this.comments.push(new r.default(e))
                }
                .bind(this))
            },
            defaultStyle: function() {
                if (!App.config.mapTheme)
                    return null;
                return this.isRoot() ? Object.clone(App.config.mapTheme.root_style) : this.parent.isRoot() ? Object.clone(App.config.mapTheme.root_children_style) : Object.clone(App.config.mapTheme.nodes_style)
            },
            currentStyle: function() {
                return this.style ? this.style : this.defaultStyle()
            },
            __onAddChild: function(e, t, n, i, o) {
                return e.parent = this,
                e.hidden = !1,
                "number" == typeof t && t >= 0 ? this.children.insert(e, t) : this.children[this.children.length] = e,
                !!this._listener.__onAddChild(e._listener, this.rank(e), tree.notPainted, n, i, o) || (this.children.remove(e),
                !1)
            },
            addChild: function(e, t, n, i) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                this.closed && this.toggleClosed();
                var o = tree.uncommitedId
                  , s = new ChangeList;
                if (s.changes.push(new InsertChange({
                    idea_id: this.id,
                    new_data: {
                        id: o,
                        parent: this.id,
                        title: tree.default_title,
                        style: null,
                        pos: e || null,
                        rank: null !== t ? t : this.children.length,
                        closed: !1
                    }
                })),
                i && s.changes.push(new IdeaPropertiesChange({
                    idea_id: o,
                    type: "IdeaProperties",
                    new_data: {
                        floating: !0
                    }
                })),
                n && s.changes.push(new TextStyleChange({
                    idea_id: o,
                    type: "TextStyle",
                    new_data: {
                        style: n.toJSON()
                    }
                })),
                s.execute()) {
                    var a = this.getChild(o);
                    return mapView.hasMapFeature("graphics") && App.config.editable && App.config.currentlyEditable && a._listener.dcontent.toEditing(null, null !== t ? "insert-sibling" : "insert"),
                    a
                }
                return null
            },
            addChildren: function(e) {
                this.closed && this.toggleClosed();
                for (var t = [], n = 0; n < e.length; n++) {
                    var i = this.escapeTitle(e[n].title);
                    if (e[n].id)
                        t.push(new RenameChange({
                            idea_id: e[n].id,
                            type: "Title",
                            new_data: {
                                title: i
                            }
                        }));
                    else {
                        var o = --tree.uncommitedId
                          , s = {
                            id: o,
                            parent: this.id,
                            title: i,
                            style: null
                        };
                        e[n].link && Object.extend(s, {
                            link: e[n].link
                        }),
                        e[n].note && Object.extend(s, {
                            note: e[n].note
                        }),
                        e[n].video && Object.extend(s, {
                            video: e[n].video
                        });
                        var a = new InsertChange({
                            idea_id: o,
                            type: "Insert",
                            new_data: s
                        });
                        t.push(a)
                    }
                }
                ChangeList.layoutAlteringChangeset(t)
            },
            __onRemoveChild: function(e, t, n) {
                n = n || "definitive",
                this.children.remove(e),
                "definitive" === n && (mapView.hasMapFeature("graphics") && e.__onRemoveAllConnections(),
                tree.nodes[e.id] = null),
                e.hidden || (this._listener.__onRemoveChild(e._listener, t, n),
                e.hidden = !0,
                e.parent = null,
                mapView.hasMapFeature("graphics") && App.config.layout.elasticLayout && ChangeList.elasticLayoutChangeset(rectangleLayouter.remove(e)))
            },
            __onShowChild: function(e) {
                return !(!e.hidden || !this.isInMapStructure()) && (e.hidden = !1,
                this._listener.__onAddChild(e._listener, this.rank(e), null),
                rectangleLayouter.update(this),
                !0)
            },
            __onHideChild: function(e, t) {
                return t = t || "definitive",
                !(e.hidden || !this.children.include(e)) && (e.hidden = !0,
                this._listener.__onRemoveChild(e._listener, null, t),
                !mapView.hasMapFeature("graphics") || ("temporary" != t && App.config.layout.elasticLayout && ChangeList.elasticLayoutChangeset(rectangleLayouter.remove(e)),
                rectangleLayouter.update(this),
                !0))
            },
            removeChild: function(e) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                var t = new RemoveChange({
                    idea_id: e.id,
                    type: "Delete"
                });
                t.executeLocally(),
                ServerConnection.doChange(t)
            },
            toggleAllClosed: function(e) {
                for (var t = this; t.parent; )
                    t = t.parent,
                    t.closed && t.toggleClosed(e)
            },
            toggleClosed: function(e) {
                this.isRoot() || (this.closed = !this.closed,
                this._listener.__onToggleClosed(),
                App.config.persistent && !e && users.selfUser && ServerConnection.toggleClosed({
                    ids: [this.id]
                }))
            },
            toggleClosedDetail: function(e) {
                var t = []
                  , n = this.depth();
                this.eachChild(function(i) {
                    var o = i.depth() - n;
                    (i.closed && e > o || !i.closed && e == o && i.hasChildren()) && (t.push(i.id),
                    i.closed = !i.closed,
                    i._listener.__onToggleClosed(),
                    rectangleLayouter.update(i))
                }, !1),
                App.config.persistent && ServerConnection.toggleClosed({
                    ids: t
                })
            },
            __onReposition: function(e, t, n) {
                return n || this.touch(t),
                this.pos = e,
                this._listener.__onReposition(t),
                !0
            },
            __onMove: function(e, t, n, i, o) {
                if (this.touch(n),
                n)
                    var s = {
                        moveClone: this.cloneWithPosition(this._listener.dcontainer.el)
                    };
                return this.parent.__onRemoveChild(this, null, o ? "temporary" : "move"),
                i && (this.pos = i),
                e.__onAddChild(this, t, n, s || [], !0),
                e.isRoot() ? (n || rectangleLayouter.update(this),
                mapView.hasMapFeature("graphics") && this._listener.rc.paint()) : n || rectangleLayouter.update(e),
                !0
            },
            __onRename: function(e, t) {
                return this.touch(t),
                this.title = e,
                this._listener.__onRename(t),
                !0
            },
            rename: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (!e.match(/^\s*$/) && e !== this.title) {
                    var n = new ChangeList;
                    if (this.isRootC() && t && App.config.layout.elasticLayout) {
                        var i = new RepositionChange({
                            idea_id: this.id,
                            type: "Reposition",
                            old_data: {
                                pos: this.pos
                            },
                            new_data: {
                                pos: Math.offset(this.pos, t)
                            }
                        });
                        i.execute(),
                        n.changes.push(i)
                    }
                    e = this.escapeTitle(e),
                    n.changes.push(new RenameChange({
                        idea_id: this.id,
                        type: "Title",
                        old_data: {
                            title: this.getRawTitle()
                        },
                        new_data: {
                            id: this.id,
                            title: e
                        }
                    })),
                    this.__onRename(e),
                    App.config.layout.elasticLayout && n.doNodeLayoutingChanges(this),
                    ServerConnection.doChanges(n),
                    this.isRoot() && App.trigger(CustomEvents.ROOT_RENAMED)
                }
            },
            insertRename: function(e, t, n, i) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                e = this.escapeTitle(e),
                this.__onRename(e),
                this.pos && t && App.config.layout.elasticLayout && this.__onReposition([this.pos[0] + t[0], this.pos[1] + t[1]]);
                var o = new ChangeList;
                o.changes.push(new InsertChange({
                    idea_id: this.id,
                    type: "Insert",
                    new_data: {
                        id: this.id,
                        parent: this.parent.id,
                        title: e,
                        style: null,
                        pos: this.pos,
                        closed: this.closed,
                        rank: this.parent.rank(this)
                    }
                })),
                n && o.changes.push(new IdeaPropertiesChange({
                    idea_id: this.id,
                    type: "IdeaProperties",
                    new_data: {
                        floating: !0
                    }
                })),
                this.style && o.changes.push(new TextStyleChange({
                    idea_id: this.id,
                    type: "TextStyle",
                    new_data: {
                        style: this.style.toJSON()
                    }
                })),
                App.config.layout.elasticLayout && o.doNodeLayoutingChanges(o.changes.first().node()),
                ServerConnection.doChanges(o),
                App.trigger(CustomEvents.TOPIC_INSERTED),
                i && App.trigger(CustomEvents.SIBLING_ADDED)
            },
            generateThumb: function(e) {
                var t = this
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (n.onError || (n.onError = function() {
                    return !0
                }
                ),
                n.onSuccess || (n.onError = function() {
                    return !0
                }
                ),
                !(this.link || this.idea_image || this.idea_video)) {
                    this._listener.setLoadingOnDrop();
                    var i = new Image;
                    i.src = "/images/download_url?url=" + o()(e),
                    i.onload = function() {
                        t.generateImageThumb(e, {
                            onError: n.onError,
                            onSuccess: n.onSuccess
                        })
                    }
                    ,
                    i.onerror = function() {
                        new Ajax.Request("/maps/expand_link/",{
                            parameters: {
                                link: e
                            },
                            onSuccess: function(i) {
                                var o = i.responseJSON;
                                if (o.url) {
                                    var s = Object(p.checkLink)(o.url);
                                    s.video && s.source ? (t.generateVideoThumb(s, e, o),
                                    n.onSuccess()) : (t.generateWebsiteThumb(e, o),
                                    n.onSuccess())
                                } else
                                    t._listener.removeLoadingFromDrop()
                            },
                            onFailure: function() {
                                n.onError(),
                                t._listener.removeLoadingFromDrop()
                            }
                        })
                    }
                }
            },
            generateVideoThumb: function(e, t, n) {
                var i = []
                  , o = n.title
                  , s = n.url
                  , a = new c.default({
                    url: p.embeddedURLs[e.source] + e.video,
                    source: e.source,
                    size: {
                        width: 480,
                        height: 272
                    }
                });
                i.push(new RenameChange({
                    idea_id: this.id,
                    type: "Title",
                    old_data: {
                        title: this.title
                    },
                    new_data: {
                        title: this.title.replace(t, o)
                    }
                })),
                i.push(new AddVideoChange({
                    idea_id: this.id,
                    type: "AddVideo",
                    new_data: a.toJSON()
                })),
                i.push(new LinkChange({
                    idea_id: this.id,
                    type: "Link",
                    old_data: {
                        link: this.link
                    },
                    new_data: {
                        link: s
                    }
                })),
                ChangeList.layoutAlteringChangeset(i),
                this._listener.removeLoadingFromDrop()
            },
            generateImageThumb: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                t.onError || (t.onError = function() {
                    return !0
                }
                ),
                t.onSuccess || (t.onError = function() {
                    return !0
                }
                );
                var n = {
                    def_image_id: "",
                    idea_image_url: e
                };
                MM.utils.File.uploadImage([this], n, {
                    successCallback: function(e, n) {
                        Tree.utils.setImage(new l.default(e), n),
                        t.onSuccess()
                    },
                    errorCallback: function() {
                        t.onError(),
                        this._listener.removeLoadingFromDrop()
                    }
                })
            },
            generateWebsiteThumb: function(e, t) {
                var n = this
                  , i = t.title
                  , o = t.url
                  , s = [];
                if (i.length > 0 && s.push(new RenameChange({
                    idea_id: this.id,
                    type: "Title",
                    old_data: {
                        title: this.title
                    },
                    new_data: {
                        title: this.title.replace(e, i)
                    }
                })),
                s.push(new LinkChange({
                    idea_id: this.id,
                    type: "Link",
                    old_data: {
                        link: this.link
                    },
                    new_data: {
                        link: o
                    }
                })),
                !t.images[0])
                    return ChangeList.layoutAlteringChangeset(s),
                    void this._listener.removeLoadingFromDrop();
                MM.utils.File.uploadImage([this], {
                    idea_image_url: t.images[0].src
                }, {
                    successCallback: function(e) {
                        var t = new l.default(e);
                        s.push(new AddImageChange({
                            idea_id: n.id,
                            type: "AddImage",
                            new_data: {
                                idea_image_id: t.id,
                                details: {
                                    url: t.download_link,
                                    size: [500, 300]
                                }
                            },
                            old_data: {
                                idea_image_id: n.idea_image ? n.idea_image.id : null
                            }
                        })),
                        ChangeList.layoutAlteringChangeset(s)
                    },
                    errorCallback: function() {
                        ChangeList.layoutAlteringChangeset(s),
                        Message.show(I18n.t("your_request_was_not_done"), Message.ERROR)
                    }
                })
            },
            commitEdit: function(e, t, n, i) {
                var o = this
                  , s = function() {
                    "insert" === n || "insert-sibling" === n ? o.insertRename(e, t, i, "insert-sibling" === n) : o.rename(e, t)
                };
                ServerConnection.canQueueDoRequests() ? s() : ServerConnection.registerPendingCode(s)
            },
            __onSetIcon: function(e, t) {
                if (e || (e = []),
                this.touch(t),
                e && "string" == typeof e) {
                    var n = [];
                    e.split(",").each(function(e) {
                        var t = Icon.fromFullName(e);
                        t && n.push(t)
                    }
                    .bind(this)),
                    this.icons = Icon.compactAndOrder(n)
                } else
                    this.icons = [];
                return this.updateTaskFromIcons(this.icons),
                this._listener.__onSetIcon(!1, t),
                mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            __onSetStyle: function(e, t) {
                return this.touch(t),
                this.style = e,
                this._listener.__onSetStyle(tree.notPainted, t),
                mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            __onSetProperty: function(e, t, n) {
                switch (this.touch(n),
                this[e] = t,
                e) {
                case "task":
                    this.getTaskObject(t),
                    this._listener.__onSetProperty("task", tree.notPainted, n),
                    this._listener.__onSetProperty("externalTask", tree.notPainted, n);
                    break;
                case "link":
                    this.link = this.link ? this.link.escapeHTML() : "",
                    this._listener.__onSetProperty("link", tree.notPainted, n);
                    break;
                default:
                    this._listener.__onSetProperty(e, tree.notPainted, n)
                }
                return mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            __onSetIdeaProperty: function(e, t) {
                return this.touch(t),
                this.ideaProperty = e,
                this._listener.__onSetIdeaProperty(tree.notPainted, t),
                mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            __onAddAttachment: function(e, t) {
                this.touch(t),
                this.attachments.push(e),
                1 == this.attachments.length && this._listener.__onSetProperty("attachments", tree.notPainted, t),
                mapView.hasMapFeature("graphics") && rectangleLayouter.update(this)
            },
            addAttachment: function(e) {
                ChangeList.layoutAlteringChangeset([new AddAttachmentChange({
                    idea_id: this.id,
                    type: "AddAttachment",
                    new_data: {
                        attachment_id: e.id
                    }
                })])
            },
            __onRemoveAttachment: function(e, t) {
                this.touch(t),
                this.attachments.remove(e),
                this._listener.__onSetProperty("attachments", !1, t),
                0 == this.attachments.length && mapView.hasMapFeature("graphics") && rectangleLayouter.update(this)
            },
            removeAttachment: function(e) {
                ChangeList.layoutAlteringChangeset([new RemoveAttachmentChange({
                    idea_id: this.id,
                    type: "RemoveAttachment",
                    old_data: {
                        attachment_id: e.id
                    }
                })])
            },
            __onAddComment: function(e, t) {
                this.touch(t),
                this.comments.push(e),
                this._listener.__onSetProperty("comments", tree.notPainted, t),
                mapView.hasMapFeature("graphics") && rectangleLayouter.update(this)
            },
            __onRemoveComment: function(e, t) {
                this.touch(t),
                this.comments.remove(e),
                this._listener.__onSetProperty("comments", !1, t),
                0 === this.comments.length && mapView.hasMapFeature("graphics") && rectangleLayouter.update(this)
            },
            removeComment: function(e) {
                ChangeList.layoutAlteringChangeset([new RemoveCommentChange({
                    idea_id: this.id,
                    type: "RemoveComment",
                    old_data: {
                        idea_comment_id: e.id
                    }
                })])
            },
            __onAddVote: function(e, t) {
                return this.touch(t),
                this.votes.push(e),
                -1 === IdeaVote.nodesWithVotes.indexOf(this) && IdeaVote.nodesWithVotes.push(this),
                IdeaVote.updateAll(this),
                this._listener.__onSetProperty("votes", tree.notPainted, t),
                !tree.notPainted && mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            __onEditVote: function(e, t) {
                return this._listener.__onSetProperty("votes", !1, t),
                !tree.notPainted && mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            __onRemoveVote: function(e, t) {
                return this.touch(t),
                e && this.votes.remove(e),
                0 === this.votes.length ? IdeaVote.nodesWithVotes.remove(this) : IdeaVote.updateAll(this),
                this._listener.__onSetProperty("votes", !1, t),
                mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            __onAddVideo: function(e, t) {
                return this.touch(t),
                this.idea_video = e,
                this._listener.__onSetProperty("video", tree.notPainted, t),
                !tree.notPainted && mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            __onRemoveVideo: function(e) {
                return this.touch(e),
                this.idea_video = null,
                this._listener.__onSetProperty("video", tree.notPainted, e),
                mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            __onAddImage: function(e) {
                return this.touch(e),
                this._listener.__onSetProperty("image", tree.notPainted, e),
                !tree.notPainted && mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            removeImage: function() {
                ChangeList.layoutAlteringChangeset([new RemoveImageChange({
                    idea_id: this.id,
                    type: "RemoveImage",
                    old_data: {
                        idea_image_id: this.idea_image.id
                    }
                })])
            },
            __onRemoveImage: function(e, t) {
                return this.touch(t),
                this.idea_image = null,
                this._listener.__onSetProperty("image", tree.notPainted, t),
                mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0
            },
            addBoundary: function(e) {
                ChangeList.layoutAlteringChangeset([new AddBoundaryChange({
                    idea_id: this.id,
                    type: "AddBoundary",
                    new_data: e
                })])
            },
            __onAddBoundary: function() {
                this.boundary && this._listener.__onAddBoundary()
            },
            removeBoundary: function() {
                this.boundary && ChangeList.layoutAlteringChangeset([new RemoveBoundaryChange({
                    idea_id: this.id,
                    type: "RemoveBoundary",
                    old_data: this.boundary.toJSON()
                })])
            },
            __onRemoveBoundary: function() {
                this.boundary && this.boundary.destroy(),
                this.boundary = null,
                this._listener.__onRemoveBoundary()
            },
            editBoundary: function(e) {
                this.boundary ? ChangeList.layoutAlteringChangeset([new EditBoundaryChange({
                    idea_id: this.id,
                    type: "EditBoundary",
                    new_data: e,
                    old_data: this.boundary.toJSON()
                })]) : this.addBoundary(e)
            },
            resizeImage: function(e, t, n) {
                ChangeList.layoutAlteringChangeset([new ResizeImageChange({
                    idea_id: this.id,
                    type: "ResizeImage",
                    new_data: {
                        idea_image_id: e.id,
                        width: t,
                        height: n
                    },
                    old_data: {
                        idea_image_id: e.id,
                        width: this.idea_image.width(),
                        height: this.idea_image.height()
                    }
                })])
            },
            __onResizeImage: function(e, t) {
                return this.touch(t),
                this.idea_image.equals(e) ? (this._listener.__onResizeImage(t),
                this._listener.image.onSelect(),
                mapView.hasMapFeature("graphics") && rectangleLayouter.update(this),
                !0) : Message.show(I18n.t("js.image_does_not_match"), Message.ERROR, 5)
            },
            __onAddConnection: function(e, t) {
                return this.touch(t),
                this.connections.push(e),
                this.outgoing_connections.push(e),
                e.to.connections.push(e),
                this._listener.__onAddConnection(e),
                !0
            },
            __onRemoveConnection: function(e, t) {
                return this.touch(t),
                this._listener.__onRemoveConnection(e),
                !!e && (e.destroy(),
                !0)
            },
            __onRemoveAllConnections: function() {
                for (var e = this.connections.length - 1; e >= 0; e--)
                    this.__onRemoveConnection(this.connections[e]);
                for (e = 0; e < this.children.length; e++)
                    this.children[e].__onRemoveAllConnections()
            },
            connectTo: function(e) {
                var t = new ChangeList
                  , n = h.default.get(e.id, this.id);
                n && t.changes.push(new RemoveConnectionChange({
                    idea_id: e.id,
                    type: "RemoveConnection",
                    old_data: {
                        from_id: e.id,
                        to_id: this.id,
                        color: n.color || a.DEFAULT_COLOR
                    }
                })),
                t.changes.push(new AddConnectionChange({
                    idea_id: this.id,
                    type: "AddConnection",
                    new_data: {
                        from_id: this.id,
                        to_id: e.id,
                        color: a.DEFAULT_COLOR
                    }
                })),
                t.execute(),
                ServerConnection.doChanges(t)
            },
            disconnectFrom: function(e) {
                var t = new ChangeList
                  , n = h.default.get(this.id, e.id);
                t.changes.push(new RemoveConnectionChange({
                    idea_id: this.id,
                    type: "RemoveConnection",
                    old_data: {
                        from_id: this.id,
                        to_id: e.id,
                        color: n.color || a.DEFAULT_COLOR
                    }
                })),
                t.execute(),
                ServerConnection.doChanges(t)
            },
            getLinkObj: function() {
                var e = this.link.match(/^([^:]+):[\/]*(.*)$/);
                if (e) {
                    var t;
                    switch (e[1]) {
                    case "mailto":
                        t = "email";
                        break;
                    case "topic":
                        t = "topic";
                        break;
                    default:
                        t = "url"
                    }
                    return {
                        protocol: e[1],
                        link: e[2],
                        type: t
                    }
                }
                return {
                    type: "url"
                }
            },
            getLinkRel: function(e) {
                var t = e.link;
                return /(mindmeister|meistertask).com/i.test(void 0 === t ? "" : t) ? "noopener" : "nofollow noopener"
            },
            touch: function(e) {
                e ? (this.modifiedBy = e,
                this.modifiedAt = new Date) : "undefined" != typeof RevisionBrowser && RevisionBrowser.on || (this.modifiedBy = users && users.selfUser ? users.selfUser[0] : null,
                this.modifiedAt = new Date),
                this._listener.dcontent && this._listener.dcontent.setHoverTitle()
            },
            changeId: function(e) {
                this._listener.__onChangeId(this.id, e),
                tree.nodes[e] = tree.nodes[this.id],
                tree.nodes[this.id] = null,
                this.id = e
            },
            changeImageId: function(e) {
                if (this.idea_image) {
                    if (!l.default.get(e)) {
                        var t = Object.clone(this.idea_image);
                        t.id = e,
                        l.default.all[e] = t,
                        this.idea_image = t,
                        this.__onAddImage()
                    }
                }
            },
            normalizeWhitespaces: function(e) {
                return e.replace(new RegExp(String.fromCharCode(160),"g"), " ")
            },
            replaceLineBreaksWithHTML: function(e) {
                return e.replace(/\n/gi, "<br/>").replace(/\r/gi, '<br class="js-automatic-break ">')
            },
            getTitle: function(e) {
                var t = this.normalizeWhitespaces(this.title);
                return e || (t = this.replaceLineBreaksWithHTML(t)),
                t
            },
            getTitleWithLinks: function(e) {
                return this.getTitle(e).toLink()
            },
            getRawTitle: function() {
                return this.title.safeUnescapeHTML()
            },
            escapeTitle: function(e) {
                return (e.match(/^\s*$/) ? "" : e).escapeHTML()
            },
            getSingleLineTitle: function() {
                return this.getRawTitle().replace(/[\n\r]/gi, " ")
            },
            getTaskObject: function(e, t) {
                e ? (this.task = new d.default(e),
                this.task.empty() && (this.task = null)) : (this.task = null,
                this.externalTask = null),
                t || this.updateTaskFromIcons(this.icons)
            },
            updateTaskFromIcons: function(e) {
                this.task || (this.task = new d.default({}));
                var t = e.detect(function(e) {
                    return "priority" === e.group()
                });
                this.task.priority = t ? u.TASK.priority.indexOf(t.id) : -1;
                var n = e.detect(function(e) {
                    return "task" === e.group()
                });
                this.task.complete = n ? u.TASK.complete.indexOf(n.id) : -1,
                this.task.empty() && (this.task = null)
            },
            setTaskNotify: function(e) {
                ServerConnection.setTaskNotify(this.id, e)
            },
            hasChildren: function() {
                return this.children.any(function(e) {
                    return !e.hidden
                })
            },
            numChildren: function() {
                return this.children.count(function(e) {
                    return !e.hidden
                })
            },
            countTotalChildren: function() {
                for (var e = 0, t = 0; t < this.children.length; t++)
                    e += this.children[t].countTotalChildren();
                return 1 + e
            },
            isChild: function(e) {
                return !!this.parent && (this.parent == e || this.parent.isChild(e))
            },
            isChildOrSelf: function(e) {
                return e == this || !!this.parent && this.parent.isChildOrSelf(e)
            },
            isRoot: function() {
                return null == this.parent
            },
            isRootC: function() {
                return this.parent && this.parent.isRoot()
            },
            getRootC: function() {
                return this.isRoot() ? null : this.ancestor(this.depth() - 1)
            },
            rank: function(e) {
                return this.indexOf(e)
            },
            indexOf: function(e) {
                return this.children.indexOf(e)
            },
            depth: function() {
                return this.parent ? 1 + this.parent.depth() : 0
            },
            ancestor: function(e) {
                return 0 == e ? this : this.parent ? this.parent.ancestor(e - 1) : null
            },
            getAncestors: function() {
                var e = [];
                return this.parent && (e = this.parent.getAncestors(),
                e.push(this.parent)),
                e
            },
            equals: function(e) {
                return this.id == e.id
            },
            getChildRecursive: function(e) {
                if (e === this.id)
                    return this;
                for (var t = 0; t < this.children.length; t++) {
                    var n = this.children[t].getChild(e);
                    if (n)
                        return n
                }
                return null
            },
            getChild: function(e) {
                var t = tree.nodes[e];
                return t || (tree.nodes[e] = this.getChildRecursive(e))
            },
            isVisible: function() {
                return !this.hidden && this.getAncestors().all(function(e) {
                    return !e.hidden && !e.closed
                })
            },
            isFloating: function() {
                return this.ideaProperty && this.ideaProperty.floating
            },
            getVisibleChild: function(e) {
                var t = this.getChild(e);
                return t && t.isVisible() ? t : null
            },
            isInMapStructure: function() {
                return this === tree.root || this.getAncestors().include(tree.root)
            },
            getVisibleParent: function() {
                return this.isVisible() ? this : this.parent.getVisibleParent()
            },
            getVisibleChildren: function() {
                for (var e = [], t = 0; t < this.children.length; t++)
                    this.children[t].isVisible() && e.push(this.children[t]);
                return e
            },
            getChildByTitle: function(e) {
                if (e === this.title)
                    return this;
                for (var t = 0; t < this.children.length; t++) {
                    var n = this.children[t].getChildByTitle(e);
                    if (n)
                        return n
                }
                return null
            },
            getMiddleChild: function() {
                if (this.closed || !this.hasChildren())
                    return null;
                var e, t = this.getVisibleChildren();
                return e = t.length % 2 == 0 ? t.length / 2 - 1 : parseInt(t.length / 2),
                t[e]
            },
            getNextSibling: function() {
                if (this.isRootC())
                    return tree.root._listener.getNextSibling(this._listener);
                var e = this.parent ? this.parent.children.indexOf(this) : -1;
                if (-1 === e)
                    return null;
                for (; ++e < this.parent.children.length && this.parent.children[e].hidden; )
                    ;
                return e >= this.parent.children.length ? null : this.parent.children[e]
            },
            getPrevSibling: function() {
                if (this.isRootC())
                    return tree.root._listener.getPrevSibling(this._listener);
                var e = this.parent ? this.parent.children.indexOf(this) : -1;
                if (-1 === e)
                    return null;
                for (; --e >= 0 && this.parent.children[e].hidden; )
                    ;
                return e < 0 ? null : this.parent.children[e]
            },
            getNextSiblingExtended: function(e) {
                for (var t, n = 0, i = this.depth(), o = null, s = e ? e - i : 0; i - n > 0; ) {
                    if (o = this.ancestor(n),
                    t = o.getNextSibling())
                        return t.getTopChild(n + s);
                    n += 1
                }
                return null
            },
            getPrevSiblingExtended: function(e) {
                for (var t, n = 0, i = this.depth(), o = null, s = e ? e - i : 0; i - n > 0; ) {
                    if (o = this.ancestor(n),
                    t = o.getPrevSibling())
                        return t.getBottomChild(n + s);
                    n += 1
                }
                return null
            },
            getTopChild: function(e) {
                return this.children && this.children.length > 0 && e > 0 ? this.children.first().getTopChild(e - 1) : this
            },
            getBottomChild: function(e) {
                return this.children && this.children.length > 0 && e > 0 ? this.children.last().getBottomChild(e - 1) : this
            },
            doBreadthFirstTraversal: function(e) {
                for (var t = [this]; t.length > 0; ) {
                    var n = t.shift();
                    e(n),
                    n.children.each(function(e) {
                        t.push(e)
                    })
                }
            },
            cloneWithPosition: function(e) {
                for (var t = e.cloneNode(!0), n = this.getElementsByClassName(t, "tk_label"), i = 0, o = n.length; i < o; i++)
                    n[i].style.color = "#ccc";
                Position.absolutize(t);
                var s = e.cumulativeOffset();
                return t.style.left = s[0] + "px",
                t.style.top = s[1] - 35 + "px",
                t
            },
            getElementsByClassName: function(e, t) {
                for (var n = [], i = new RegExp("\\b" + t + "\\b"), o = e.getElementsByTagName("*"), s = 0, a = o.length; s < a; s++)
                    i.test(o[s].className) && n.push(o[s]);
                return n
            },
            eachChild: function(e, t) {
                for (var n = e(this, t), i = 0; i < this.children.length; i++)
                    this.children[i].eachChild(e, n)
            },
            detect: function(e) {
                var t;
                return this.eachChild(function(n) {
                    if (e(n))
                        throw t = n,
                        $break
                }),
                t
            },
            eachChildWithoutSelf: function(e, t) {
                for (var n = 0; n < this.children.length; n++)
                    this.children[n].eachChild(e, t)
            },
            destroy: function() {
                for (var e = 0, t = this.children.length; e < t; e++)
                    this.children[e].destroy();
                for (e = 0,
                t = this.connections.length; e < t; e++)
                    this.connections[e] && this.connections[e].destroy();
                this._listener = null,
                this.parent = null,
                this.children = null
            }
        });
        t.default = f
    },
    InUJ: function(e, t, n) {
        "use strict";
        (function(e) {
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function o(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function s(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var a = n("yiO2")
              , r = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , l = function(t) {
                function n(e) {
                    i(this, n);
                    var t = o(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
                    return t.handleNodeClick = t.handleNodeClick.bind(t),
                    t
                }
                return s(n, t),
                r(n, [{
                    key: "handleNodeClick",
                    value: function(e) {
                        this.props.onClick(e.props.name),
                        this.setActiveTab(e.props.name)
                    }
                }, {
                    key: "setActiveTab",
                    value: function(e) {
                        var t = this.refs[e]
                          , n = this.state.selectedNode;
                        n && n.setState({
                            selected: !1
                        }),
                        t.setState({
                            selected: !0
                        }),
                        this.setState({
                            selectedNode: t
                        })
                    }
                }, {
                    key: "shouldComponentUpdate",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "componentDidMount",
                    value: function() {
                        var e = this.props.libs[0]
                          , t = this.refs[e];
                        t.setState({
                            selected: !0
                        }),
                        this.setState({
                            selectedNode: t
                        })
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this;
                        return e.createElement("div", {
                            className: this.props.classes
                        }, this.props.libs.map(function(n, i) {
                            var o = "lib-" + n.replace(/_/g, "-");
                            return e.createElement(a.a, {
                                key: i,
                                name: n,
                                ref: n,
                                icon: o,
                                selected: !1,
                                selectedColor: "blue",
                                defaultColor: "grey-lighter",
                                iconSize: 16,
                                handleClick: t.handleNodeClick
                            })
                        }))
                    }
                }]),
                n
            }(e.Component);
            t.a = l
        }
        ).call(t, n("nakD"))
    },
    K2yx: function(e, t, n) {
        function i(e) {
            return null != e && s(e.length) && !o(e)
        }
        var o = n("xOlx")
          , s = n("mL1V");
        e.exports = i
    },
    Kh9o: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            url: null,
            source: null,
            title: null,
            size: null,
            frameOptions: {
                youtube: "&showinfo=1" + (MM.ua.isBrowser("Internet Explorer") ? "" : "&html5=1"),
                vimeo: "&title=0&byline=0&portrait=0",
                dailymotion: MM.ua.isBrowser("Internet Explorer") ? "" : "&html=1"
            },
            initialize: function(e) {
                e && (this.url = e.url,
                this.title = e.title || "",
                this.size = e.size ? [e.size.width, e.size.height] : [320, 200],
                this.updateSource())
            },
            toJSON: function() {
                return {
                    url: this.url,
                    source: this.source,
                    width: this.width(),
                    height: this.height(),
                    title: this.title
                }
            },
            updateSource: function() {
                this.source = this.url.split(".")[1]
            },
            width: function() {
                return this.size[0]
            },
            height: function() {
                return this.size[1]
            },
            getElement: function() {
                return this.el || (this.el = new Element("iframe",{
                    src: this.url + (this.url.indexOf("?") >= 0 ? "&" : "?") + "wmode=transparent" + (this.frameOptions[this.source] ? this.frameOptions[this.source] : ""),
                    width: this.width(),
                    height: this.height(),
                    frameborder: 0,
                    allowfullscreen: ""
                })),
                this.el
            }
        });
        t.default = i
    },
    "L/YL": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("A9ap")
          , o = n("ZfKP")
          , s = n("d407")
          , a = function(e) {
            var t = s.default.getPlainClipboardData(e);
            s.default.simulatePaste(t),
            Event.stop(e)
        }
          , r = function(e, t) {
            var n = e.gsub(/\\n/, "\n");
            return t ? n.escapeHTML() : n
        }
          , l = function(e, t) {
            var n = t ? e.escapeHTML() : e;
            return EmojiArea.getHTMLContent(n)
        }
          , c = function(e) {
            return e.isEdited() ? '<span class="ml-5" title="' + I18n.t("js.edited") + ": " + e.updatedAt.ago(!0) + '">' + MM.ui.icon({
                name: "pen",
                size: 8,
                color: "grey-light",
                clickable: !1
            }) + "<span>" : ""
        }
          , d = function(e, t) {
            var n = e.createdAt
              , i = e.id
              , o = e.text
              , s = e.user
              , a = new Element("div",{
                id: "comment_" + i,
                className: "comment_line mb-15" + (i < 0 ? " unsaved" : "")
            });
            return a.innerHTML = '<div row class="align-items-start">' + s.getAvatar("large mr-8") + '<div column grow><div row class="comment_date">' + n.ago(!0) + c(e) + '</div><p class="mb-5px">' + I18n.t("js.said", {
                v0: s.displayname
            }) + '</p><textarea id="edit_comment_' + i + '_textarea" style="display: none;">' + r(o, t) + '</textarea><div class="h-flex-row comment p-10 h-flex-start"><div id="edit_comment_' + i + '" class="h-flex-grow">' + l(o, t) + '</div><a id="edit_comment_opener_' + i + '" class="p-5 comment_edit"><div class="icon"></div></a></div><div class="icon_container hidden"><div row><div class="h-flex-grow"><a id="edit_comment_' + i + '_emoji" class="icon-svg h-iblock" data-icon="smiley-face" data-size="24" data-color="grey-lighter" href="#"></a></div><input id="edit_comment_' + i + '_cancel" type="button" class="button mh-10" value="' + I18n.t("js.cancel") + '" tabindex="-1" onclick="sideBar.comments.cancelEditing(event); return false;"/><input id="edit_comment_' + i + '_commit" type="button" class="button default" value="' + I18n.t("js.save") + '" tabindex="-1" onclick="sideBar.comments.onCommit(event); return false;"/></div></div></div></div>',
            a
        }
          , h = Class.create(i.default, {
            expandable: !0,
            animationShow: CSS.translate({
                x: "0",
                y: 0
            }),
            animationHide: CSS.translate({
                x: "100%",
                y: 0
            }),
            animationFunction: "ease",
            initialize: function($super, e, t) {
                $super("comments", e, t),
                this.commentEditors = [],
                ["new_comment", "new_comment_expanded"].each(function(e) {
                    var t = new EmojiArea(mm$(e + "_textarea"),{
                        editor: mm$(e)
                    });
                    t.editor.observe("focus", this.onFocus.bind(this)),
                    t.editor.observe("blur", this.onBlur.bind(this)),
                    t.editor.observe("paste", a),
                    this.commentEditors.push(t)
                }
                .bind(this)),
                Element.bindOnClick("expand_comments", this.expand.bind(this)),
                Element.bindOnClick("vote_count", this.expand.bind(this)),
                mm$("filter_votes_expanded").onchange = this.filter.bind(this);
                var n = MM.utils.KeyEvent;
                this.keymap = new MM.utils.KeyMap(document,"comments_keymap",[{
                    key: n.ESC,
                    stopEvent: !1,
                    handler: this.cancelEditing.bind(this),
                    withEvent: !0
                }, {
                    key: n.ENTER,
                    notShift: !0,
                    handler: this.onCommit.bind(this),
                    withEvent: !0
                }, {
                    key: n.TAB,
                    stopEvent: !0,
                    handler: function() {
                        return MM.utils.replaceSelection("\t")
                    }
                }]),
                this.keymap.disable(),
                this.popover = new Popover("commentsmenu",this.doEditActions.bind(this),{
                    offset: [14, 20]
                }),
                $$("div.vote.like").each(function(e) {
                    e.observe("click", this.onVote.bindAsEventListener(this, IdeaVote.UP))
                }
                .bind(this)),
                $$("div.vote.unlike").each(function(e) {
                    e.observe("click", this.onVote.bindAsEventListener(this, IdeaVote.DOWN))
                }
                .bind(this))
            },
            onVote: function(e, t) {
                e.preventDefault(),
                e.stopPropagation(),
                canvas.onSetVote(t)
            },
            getEditActionsElements: function(e) {
                var t = [];
                return e.user.id === users.selfUser.id && t.push(new Element("a",{
                    href: "#",
                    id: "comment_edit"
                }).update(I18n.t("js.edit"))),
                t.push(new Element("a",{
                    href: "#",
                    id: "comment_delete"
                }).update(I18n.t("js.delete"))),
                t
            },
            doEditActions: function(e) {
                var t = this.popover.opener
                  , n = parseInt(t.id.replace("edit_comment_opener_", ""));
                if (!n || "number" != typeof n)
                    return !1;
                switch (e) {
                case "comment_edit":
                    this.edit(n);
                    break;
                case "comment_delete":
                    var i = o.default.get(n);
                    canvas.selected.node.removeComment(i)
                }
                return !1
            },
            onSelectNode: function() {
                if (this.expanded) {
                    mm$("all_comments").innerHTML = "";
                    var e = canvas.selected.node.comments.concat(canvas.selected.node.votes);
                    e.sort(function(e, t) {
                        return (e instanceof o.default ? e.createdAt : e.voted_at) - (t instanceof o.default ? t.createdAt : t.voted_at)
                    }),
                    e.each(function(e) {
                        e instanceof o.default ? (e.read = !0,
                        this.addCommentLine(e)) : e instanceof IdeaVote && this.addVoteLine(e)
                    }
                    .bind(this))
                }
                canvas.selected.node._listener.__onSetProperty("comments", !0),
                this.updateCommentCount(),
                this.updateVotesBar()
            },
            onAddComment: function(e) {
                canvas.selected.node.comments.indexOf(e) < 0 || (this.addCommentLine(e, e.isUnsaved()),
                this.updateCommentCount())
            },
            onEditComment: function(e) {
                if (!(canvas.selected.node.comments.indexOf(e) < 0)) {
                    var t = mm$("comment_" + e.id);
                    if (t) {
                        var n = e.user.id === users.selfUser.id;
                        t.replace(d(e, n)),
                        n && addClassName(mm$("comment_" + e.id), "unsaved"),
                        this.bindCommentOpener(e)
                    } else
                        this.addCommentLine(e);
                    this.updateCommentCount()
                }
            },
            onRemoveComment: function(e) {
                var t = mm$("comment_" + e.id);
                t && new Effect.SlideUp("comment_" + e.id,{
                    duration: .5,
                    afterFinish: function() {
                        remove(t)
                    }
                }),
                this.updateCommentCount()
            },
            onFocus: function(e) {
                var t = this.affectedEditor(e);
                t && (canvas.removeFocus(),
                this.keymap.enable(),
                addClassName(t.editor, "active"))
            },
            onBlur: function(e) {
                canvas.addFocus(),
                this.keymap.disable(),
                MM.utils.clearSelection();
                var t = this.affectedEditor(e);
                t && removeClassName(t.editor, "active")
            },
            onCommit: function(e) {
                var t = this.affectedEditor(e);
                if (t) {
                    var n = t.editor
                      , i = t.textarea
                      , s = i.value.replace(/\s+$/, "");
                    if ("" !== s) {
                        var a = null;
                        n.id.match("edit_comment_") && (a = parseInt(n.id.replace("edit_comment_", ""))),
                        "number" != typeof a && (a = --o.default.uncommitedId);
                        var r = o.default.get(a);
                        n.blur();
                        var l = [];
                        r ? r.text !== s && (l.push(new EditCommentChange({
                            idea_id: canvas.selected.node.id,
                            type: "EditComment",
                            new_data: {
                                idea_comment_id: r.id,
                                text: s
                            },
                            old_data: {
                                idea_comment_id: r.id,
                                text: r.text
                            }
                        })),
                        this.commentEditors = this.commentEditors.without(t)) : (n.innerHTML = "",
                        i.value = "",
                        l.push(new AddCommentChange({
                            idea_id: canvas.selected.node.id,
                            type: "AddComment",
                            new_data: {
                                text: s,
                                user_id: users.selfUser.id,
                                idea_id: canvas.selected.node.id,
                                id: a
                            }
                        }))),
                        l.length > 0 && (addClassName(mm$("comment_" + a), "unsaved"),
                        ChangeList.layoutAlteringChangeset(l))
                    }
                }
            },
            edit: function(e) {
                var t = o.default.get(e);
                if (t && t.user.id === users.selfUser.id) {
                    this.removeUnsavedOverlay(t),
                    mm$("popover_edit_comment_" + e + "_emoji") || mm$("comments_expanded").insert(new Element("div",{
                        id: "popover_edit_comment_" + e + "_emoji",
                        className: "popover sections emoji_menu"
                    }));
                    var n = new EmojiArea(mm$("edit_comment_" + e + "_textarea"),{
                        editor: mm$("edit_comment_" + e),
                        menuOpener: mm$("comment_" + e + "_emoji")
                    });
                    n.editor.observe("focus", this.onFocus.bind(this)),
                    n.editor.observe("blur", this.onBlur.bind(this)),
                    n.editor.observe("paste", a),
                    this.commentEditors.push(n),
                    n.editor.focus(),
                    removeClassName(mm$("comment_" + t.id).select(".icon_container")[0], "hidden");
                    var i = document.createRange();
                    i.selectNodeContents(n.editor),
                    MM.utils.addSelection(i)
                }
            },
            cancelEditing: function(e) {
                var t = this.affectedEditor(e);
                if (t) {
                    var n = t.editor
                      , i = t.textarea
                      , s = t.menu;
                    n.blur();
                    var r = parseInt(n.id.replace("edit_comment_", ""))
                      , c = o.default.get(r);
                    if (c) {
                        this.removeUnsavedOverlay(c),
                        n.setAttribute("contenteditable", "false"),
                        n.innerHTML = l(c.text, !0).gsub(/\n/, "<br/>");
                        var d = $("comment_" + c.id);
                        d && addClassName(d.select(".icon_container")[0], "hidden"),
                        n.stopObserving("focus"),
                        n.stopObserving("blur"),
                        n.stopObserving("paste", a),
                        i.value = c.text,
                        removeClassName(n, "active"),
                        s.dispose(),
                        MM.utils.clearSelection(),
                        this.commentEditors = this.commentEditors.without(t)
                    }
                }
            },
            onCommentAdded: function(e, t) {
                var n = mm$("comment_" + t);
                n && (n.id = "comment_" + e.id,
                mm$("edit_comment_" + t).id = "edit_comment_" + e.id,
                mm$("edit_comment_" + e.id).innerHTML = l(e.text, !1),
                mm$("edit_comment_" + t + "_textarea").id = "edit_comment_" + e.id + "_textarea",
                mm$("edit_comment_opener_" + t).id = "edit_comment_opener_" + e.id,
                mm$("edit_comment_" + t + "_emoji").id = "edit_comment_" + e.id + "_emoji",
                mm$("edit_comment_" + t + "_commit").id = "edit_comment_" + e.id + "_commit",
                this.removeUnsavedOverlay(e))
            },
            onCommentEdited: function(e) {
                mm$("comment_" + e.id) && (mm$("edit_comment_" + e.id).innerHTML = l(e.text, !1),
                this.removeUnsavedOverlay(e))
            },
            updateCommentCount: function() {
                var e = canvas.selected.node.comments.length;
                0 === e ? (mm$("expand_comments").innerHTML = "",
                hide(mm$("expand_comments")),
                MM.ui.disableButton("expand_comments")) : (mm$("expand_comments").innerHTML = e > 1 ? I18n.t("js.comments", {
                    v0: e
                }) : I18n.t("js.comment", {
                    v0: e
                }),
                show(mm$("expand_comments")),
                MM.ui.enableButton("expand_comments"))
            },
            addCommentLine: function(e, t) {
                var n = mm$("all_comments");
                n.insertBefore(d(e, t), n.firstChild),
                this.bindCommentOpener(e)
            },
            bindCommentOpener: function(e) {
                var t = mm$("edit_comment_opener_" + e.id);
                t && (t.onclick = function() {
                    this.popover.opener = t,
                    this.popover.visible || (this.popover.removeElements(),
                    this.popover.addElements(this.getEditActionsElements(e))),
                    this.popover.togglePopover(),
                    this.popover.sizeAndPosition()
                }
                .bind(this))
            },
            onAddVote: function(e) {
                canvas.selected.node.votes.indexOf(e) < 0 || (this.addVoteLine(e, !0),
                this.updateVotesBar(!0))
            },
            onEditVote: function(e) {
                if (!(canvas.selected.node.votes.indexOf(e) < 0)) {
                    var t = mm$("vote_" + e.user.id + "_" + e.idea_id);
                    t ? t.replace(this.voteLine(e)) : this.addVoteLine(e),
                    this.updateVotesBar(!0)
                }
            },
            onRemoveVote: function(e) {
                var t = mm$("vote_" + e.user.id + "_" + e.idea_id);
                t && remove(t),
                this.updateVotesBar(!0)
            },
            updateVotesBar: function(e) {
                var t = canvas.selected.node.votes.length
                  , n = IdeaVote.getByVote(canvas.selected.node, IdeaVote.DOWN).length
                  , i = IdeaVote.get(canvas.selected.node, users.selfUser.id)
                  , o = t + (1 === t ? " " + I18n.t("js.vote") : " " + I18n.t("js.votes"));
                if ($$("#votes .vote, #votes_expanded .vote").each(function(e) {
                    removeClassName(e, "active")
                }),
                i && i.user.id === users.selfUser.id) {
                    (i.vote > 0 ? $$("#votes .vote.like, #votes_expanded .vote.like") : $$("#votes .vote.unlike, #votes_expanded .vote.unlike")).each(function(e) {
                        addClassName(e, "active")
                    })
                }
                IdeaVote.maxVotes > 0 && ($$(".vote_progress_bar.orange").each(function(t) {
                    this.redrawVotesBar(t, n, e)
                }
                .bind(this)),
                $$(".vote_progress_bar.green").each(function(n) {
                    this.redrawVotesBar(n, t, e)
                }
                .bind(this))),
                mm$("vote_count").innerHTML = o,
                mm$("vote_count_expanded").innerHTML = o,
                mm$("filter_votes_expanded").checked && this.updateFilterView()
            },
            redrawVotesBar: function(e, t, n) {
                n ? addClassName(e, "animated") : removeClassName(e, "animated"),
                e.style.width = t / IdeaVote.maxVotes * 100 + "%"
            },
            addVoteLine: function(e) {
                var t = mm$("all_comments");
                t.insertBefore(this.voteLine(e), t.firstChild)
            },
            voteLine: function(e) {
                var t = new Element("div",{
                    id: "vote_" + e.user.id + "_" + e.idea_id,
                    className: "votes_widget h-flex-row align-items-start mb-25"
                });
                return t.innerHTML = '<div class="w-40">' + e.user.getAvatar("large") + '</div><div column grow><span class="comment_date">' + e.voted_at.ago(!0) + "</span><span>" + I18n.t("js.voted", {
                    v0: e.user.displayname
                }) + "</span></div>" + MM.ui.icon({
                    name: "like",
                    size: 16,
                    consize: 28,
                    classes: "h-a-center",
                    parentClasses: "h-cd p-r vote active" + (e.vote === IdeaVote.UP ? " like" : " unlike")
                }),
                t
            },
            removeUnsavedOverlay: function(e) {
                removeClassName(mm$("comment_" + e.id), "unsaved")
            },
            filter: function() {
                mm$("filter_votes_expanded").checked ? this.updateFilterView() : this.removeFilterView()
            },
            updateFilterView: function() {
                var e = tree.root.defaultStyle().fontSize;
                tree.root.eachChild(function(t) {
                    if (t.votes.length > 0) {
                        var n = IdeaVote.getByVote(t, IdeaVote.UP).length
                          , i = t.votes.length - n
                          , o = e + (n > 0 ? e * (n / IdeaVote.maxVotes) : 0) - (i > 0 ? e * (i / IdeaVote.maxVotes) : 0);
                        t._listener.dcontent.el.style.fontSize = (o > 0 ? o : 50) + "%",
                        t._listener.dcontent.el.style.opacity < 1 && (t._listener.dcontent.el.style.opacity = 1)
                    } else
                        t._listener.dcontent.el.style.opacity = .5,
                        t._listener.dcontent.el.style.fontSize = e + "%";
                    t._listener.refreshLayout(),
                    t.isRootC() ? t._listener.rc.redrawRootLine() : t.isRoot() && canvas.root.reposition()
                }
                .bind(this))
            },
            removeFilterView: function() {
                tree.root.eachChild(function(e) {
                    e.style ? Style.applyToElement(e.style, e._listener.dcontent.el) : Style.removeFromElement(e._listener.dcontent.el),
                    e._listener.dcontent.el.style.opacity = 1,
                    e._listener.refreshLayout(),
                    e.isRootC() ? e._listener.rc.redrawRootLine() : e.isRoot() && canvas.root.reposition()
                }
                .bind(this))
            },
            affectedEditor: function(e) {
                if (e.target)
                    return this.commentEditors.detect(function(t) {
                        return e.target.id === t.editor.id || e.target.id === t.editor.id + "_commit" || e.target.id === t.editor.id + "_cancel"
                    })
            }
        });
        t.default = h
    },
    "L7X+": function(e, t, n) {
        function i(e) {
            return e = s(e),
            e && r.test(e) ? e.replace(a, o) : e
        }
        var o = n("rP4o")
          , s = n("GLmR")
          , a = /[&<>"']/g
          , r = RegExp(a.source);
        e.exports = i
    },
    MQVt: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("Z6lC")
          , o = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
            }
            return e
        }
          , s = Class.create(i.default, {
            initialize: function($super, e) {
                $super(o({
                    type: "images"
                }, e))
            },
            transformResults: function(e) {
                return e.map(function(e) {
                    return {
                        title: e.title,
                        description: e.description,
                        thumbnailUrl: e.thumbnail_url,
                        url: e.image_url
                    }
                })
            }
        });
        t.default = s
    },
    MbB6: function(e, t, n) {
        function i(e, t, n) {
            var i = !0
              , r = !0;
            if ("function" != typeof e)
                throw new TypeError(a);
            return s(n) && (i = "leading"in n ? !!n.leading : i,
            r = "trailing"in n ? !!n.trailing : r),
            o(e, t, {
                leading: i,
                maxWait: t,
                trailing: r
            })
        }
        var o = n("dnTF")
          , s = n("xwKO")
          , a = "Expected a function";
        e.exports = i
    },
    NCMo: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("Vw2l")
          , o = n("cQwG")
          , s = n("ePfb")
          , a = (n("3Ox4"),
        Class.create(i.default, {
            dcontainer: null,
            dchildren: null,
            dopener: null,
            rc: null,
            initialize: function(e) {
                this.node = e,
                this.icons = [],
                this.cache = {};
                var t = "tk_label";
                this.node.parent.isRoot() ? t += " root_child" : t += " node",
                this.node.isFloating() && (t += " floating"),
                this.dcontent = new o.default(t),
                this.dcontent.el.id = this.node.id,
                this.dcontent.el._listener = this,
                this.dcontent.setTitle(),
                App.config.editable && App.config.currentlyEditable || (this.dcontent.el.style.cursor = "default"),
                App.config.editable && App.config.currentlyEditable && this.initEditMode(),
                this.__onSetStyle(!0),
                this.node.icons.length > 0 && this.__onSetIcon(!0),
                this.node.note && this.__onSetProperty("note", !0),
                this.node.link && this.__onSetProperty("link", !0),
                this.node.attachments.length > 0 && this.__onSetProperty("attachments", !0),
                this.node.task && this.__onSetProperty("task", !0),
                this.node.comments.length > 0 && this.__onSetProperty("comments", !0),
                this.node.idea_image && this.__onSetProperty("image", !0),
                this.node.idea_video && this.__onSetProperty("video", !0),
                this.node.externalTask && this.__onSetProperty("externalTask", !0),
                this.dchildren = new o.default("tk_children"),
                this.dchildren.el.id = "tk_children_" + this.node.id,
                this.children = [],
                this._initOpener(),
                this.dcontainer = new o.default("tk_container"),
                this.dcontainer.el.id = "tk_container_" + this.node.id,
                this.node.boundary && addClassName(this.dcontainer.el, "with-boundary");
                var n = new o.default("tk_open_container");
                App.config.layout.orientation === App.Layouts.orientation.down ? (n.appendChild(this.dopener),
                n.appendChild(this.dcontent)) : (n.appendChild(this.dcontent),
                n.appendChild(this.dopener)),
                this.dcontainer.appendChild(n),
                Element.hide(this.dopener.el),
                this.dcontainer.appendChild(this.dchildren),
                Element.hide(this.dchildren.el)
            },
            initEditMode: function() {
                this.dcontent.enabled || (this.dcontent.makeSelectable(),
                this.dcontent.makeEditable(),
                this.dcontent.toInactive(),
                this.dcontent.makeResizable(),
                this.dcontent.enableResizing(),
                this.dcontent.makeDraggable(),
                this.dcontent.enableDragging(),
                this.dcontent.makeDroppable(),
                this.dcontent.enableDropping(),
                this.dcontent.el.observe("dblclick", Prototype.stopEvent),
                this.dcontent.el.style.cursor = "move",
                this.image && this.image.toEditMode())
            },
            initViewOnlyMode: function() {
                this.dcontent.toInactive && this.dcontent.toInactive(),
                this.dcontent.disableSelecting && this.dcontent.disableSelecting(),
                this.dcontent.disableResizing && this.dcontent.disableResizing(),
                this.dcontent.disableDragging && this.dcontent.disableDragging(),
                this.dcontent.disableDropping && this.dcontent.disableDropping(),
                this.dcontent.el.stopObserving("dblclick", Prototype.stopEvent),
                this.dcontent.el.style.cursor = "default",
                this.image && this.image.toViewMode()
            },
            setRc: function(e) {
                for (var t = 0, n = this.children.length; t < n; t++)
                    this.children[t].setRc(e);
                this.rc = e
            },
            refreshLayout: function() {
                this.rc.refreshLayout()
            },
            getSizesForLayouter: function(e, t) {
                var n, i, o, s = canvas.getCenter(), a = this.rc.vnode.dcontainer, r = a.size();
                if (e && (n = this.dcontent.parent.getPosition()[1],
                i = this.dchildren.size()[0],
                this.node.hasChildren() && (i += this.dopener.size()[0] + 6)),
                t) {
                    var l = new Point(this.dcontent.parent.size()[0] + this.dchildren.size()[0],this.dcontainer.size()[1]);
                    o = new Rectangle(new Point([0, 0]),l)
                }
                var c = Math.offset(canvas.getElementOffset(a.el), [-s[0], -s[1]])
                  , d = Math.offset(c, r);
                return c[0] -= 15,
                c[1] -= 15,
                d[0] += 15,
                d[1] += 15,
                {
                    rectangle: new Rectangle(new Point(c),new Point(d)),
                    offsets: [i, n],
                    childRectangle: o
                }
            },
            getContentOffset: function() {
                var e = this.dcontent.parent.getPosition();
                return this.rc.orientation === App.Layouts.orientation.left && this.node.hasChildren() && (e[0] += this.dopener.size()[0] + 6),
                e
            },
            __onChangeId: function($super, e, t) {
                $super(e, t),
                this.dchildren.el.id = "tk_children_" + t,
                this.dcontainer.el.id = "tk_container_" + t
            },
            __onAddChild: function(e, t, n, i, o, a) {
                return e.setRc(this.rc),
                e.parent = this,
                hasClassName(e.dcontent.el, "root_child") && (e.dcontainer.resetPosition(),
                removeClassName(e.dcontent.el, "root_child"),
                removeClassName(e.dcontainer.el, "left_pane")),
                addClassName(e.dcontent.el, "node"),
                this.dchildren.insertChild(e.dcontainer, t, i),
                this.children.insert(e, t),
                1 === this.children.length ? (Element.show(this.dopener.el),
                this.node.closed || Element.show(this.dchildren.el),
                addClassName(this.dchildren.el, "single_child")) : 2 === this.children.length && removeClassName(this.dchildren.el, "single_child"),
                !!n || (a && (e.isTemporarilyRemoved = !1),
                tree.notPainted || this.refreshLayout(),
                i && void 0 !== s.default && s.default && (o && o.moveClone ? s.default.highlightMovement(e, i, o.moveClone) : s.default.highlightNode(e, i)),
                tree.finishedInitialization && this.node.closed && this.node.toggleClosed(),
                !0)
            },
            __onRemoveChild: function(e, t, n) {
                if (canvas.isSelected(e) && "definitive" === n) {
                    (e.node.getPrevSibling() || e.node.getNextSibling() || this.node)._listener.select(null, null, !0, !0)
                }
                if (t) {
                    var i = function(e) {
                        return canvas.isSelected(e) ? (e.dcontent.toInactive(),
                        this.select(),
                        !0) : e.children.any(i)
                    }
                    .bind(this);
                    i(e)
                }
                this.dchildren.removeChild(e.dcontainer),
                this.children = this.children.reject(function(t) {
                    return t === e
                }),
                0 === this.children.length ? (this.node.closed && this.node.toggleClosed(),
                Element.hide(this.dopener.el)) : 1 === this.children.length && addClassName(this.dchildren.el, "single_child"),
                e.parent = null,
                e.isTemporarilyRemoved = "move" === n,
                tree.notPainted || "definitive" !== n && "move" !== n && "cancel" !== n || this.refreshLayout(),
                rectangleLayouter.update(this.node)
            },
            _childSelected: function() {
                for (var e = 0; e < this.children.length; e++) {
                    var t = this.children[e];
                    if (canvas.isSelected(t) || t.children[0] && t._childSelected())
                        return !0
                }
                return !1
            },
            _initOpener: function() {
                var e = new Element("div",{
                    className: "h-flex-row justify-center h-100%"
                }).insert(new Element("span",{
                    className: "tk_open_indicator s-6 rad-100%"
                }));
                this.dopener = new o.default("tk_open"),
                this.dopener.el.update(e),
                this._updateOpener(),
                this.dopener.el.observe("click", function() {
                    this.node.toggleClosed()
                }
                .bind(this)),
                this.dopener.el.observe("dblclick", Event.stop)
            },
            _updateOpener: function() {
                this.node.closed ? removeClassName(this.dopener.el, "open") : addClassName(this.dopener.el, "open")
            },
            __onToggleClosed: function() {
                var e = 0
                  , t = 0;
                if (mapView.hasMapFeature("graphics") && App.config.layout.autoAlign && !tree.notPainted && canvas.selected) {
                    var n = canvas.getNodeCanvasOffset(canvas.selected);
                    e = n[0] - canvas.getScrollLeft(),
                    t = n[1] - canvas.getScrollTop()
                }
                if (_Element.toggle(this.dchildren.el),
                this._updateOpener(),
                this.node.closed ? 1 === this.node.children.length ? this.dopener.el.title = I18n.t("js.one_child_idea") : this.dopener.el.title = I18n.t("js.more_child_ideas_d", {
                    v0: this.node.children.length
                }) : this.dopener.el.title = "",
                this.refreshLayout(),
                this.node.closed && this._childSelected() && App.config.editable && App.config.currentlyEditable && this.select(),
                this.node.closed ? this.node.eachChildWithoutSelf(function(e) {
                    for (var t = 0, n = e.connections.length; t < n; t++)
                        e.connections[t].view.clear()
                }) : this.node.eachChildWithoutSelf(function(e) {
                    for (var t = 0, n = e.connections.length; t < n; t++)
                        e.connections[t].view.redraw()
                }),
                void 0 !== App.ui.SlideShow && App.ui.SlideShow.initialized) {
                    var i = []
                      , o = [];
                    this.node.getRootC().eachChild(function(e) {
                        return o.push(e)
                    }),
                    App.ui.SlideShow.list.each(function(e) {
                        o.any(function(t) {
                            return e.nodes.indexOf(t) >= 0
                        }) && i.push(e)
                    }),
                    i.each(function(e) {
                        e.buildUI(),
                        e.updateLabel(App.ui.SlideShow.list.indexOf(e))
                    })
                }
                if (mapView.hasMapFeature("graphics") && (rectangleLayouter.update(this.node),
                ChangeList.autoLayoutChangeset()),
                mapView.hasMapFeature("graphics") && App.config.layout.autoAlign && !tree.notPainted && canvas.selected) {
                    var s = canvas.getNodeCanvasOffset(canvas.selected);
                    canvas.scrollTo([s[0] - e, s[1] - t], !1)
                }
            },
            __onAddBoundary: function() {
                addClassName(this.dcontainer.el, "with-boundary"),
                this.rc.redrawLines(),
                this.rc.refreshLayout()
            },
            __onRemoveBoundary: function() {
                removeClassName(this.dcontainer.el, "with-boundary"),
                this.rc.redrawLines(),
                this.rc.refreshLayout()
            },
            select: function(e, t, n, i, o) {
                App.config.editable && App.config.currentlyEditable && this.dcontent && ("number" == typeof t && (canvas._rememberedDepth = t),
                this.dcontent.toSelected(e, n, i, o))
            },
            openTemporarily: function() {
                this.node.closed && (this.node.toggleClosed(!0),
                canvas.tempOpen || (canvas.tempOpen = []),
                canvas.tempOpen.push(this.node))
            },
            makeVisible: function() {
                this.node.getAncestors().each(function(e) {
                    e.closed && e._listener.openTemporarily()
                })
            },
            __onReposition: function(e) {
                tree.notPainted || this.rc.reposition(e),
                rectangleLayouter.update(this.node)
            },
            showTask: function() {
                this.dcontent.el.setStyle({
                    opacity: 1
                })
            },
            hideTask: function() {
                this.dcontent.el.setStyle({
                    opacity: .2
                })
            },
            calculateLinePoints: function() {
                this._horizontalLine = this.horizontalLine(),
                this._verticalLine = this.verticalLine()
            },
            offsetLinePoints: function() {
                var e = this.getContentOffset();
                this._horizontalLine[0][0] += e[0],
                this._horizontalLine[1][0] += e[0],
                this._horizontalLine[0][1] += e[1],
                this._horizontalLine[1][1] += e[1],
                this._verticalLine && (this._verticalLine[0][0] += e[0],
                this._verticalLine[1][0] += e[0],
                this._verticalLine[0][1] += e[1],
                this._verticalLine[1][1] += e[1])
            },
            lineCoordinates: function(e) {
                if ("live" === e) {
                    var t = this.dcontent.getPosition()
                      , n = this.node.pos ? this.node.pos[0] : 0;
                    if (App.config.layout.orientation === App.Layouts.orientation.down || App.config.layout.orientation === App.Layouts.orientation.up || App.config.layout.orientation === App.Layouts.orientation.left || n + t[0] >= 0)
                        var i = (this._tempRc ? this._tempRc : this.rc).vnode._horizontalLine[0];
                    else {
                        var i = (this._tempRc ? this._tempRc : this.rc).vnode._horizontalLine[1];
                        i[0] -= (this._tempRc ? this._tempRc : this.rc).vnode.dopener.size()[0] + 6
                    }
                    return Math.offset(i, t)
                }
                return this.rc.orientation === App.Layouts.orientation.left ? this._horizontalLine[1] : this._horizontalLine[0]
            },
            horizontalLine: function() {
                var e = this.dcontent.size()
                  , t = 0
                  , n = e[0]
                  , i = e[1]
                  , o = this.dopener.size()[0] / 2;
                return this.rc.orientation === App.Layouts.orientation.left ? (t -= o,
                n += o,
                this.node.isRootC() && (n -= 2)) : App.config.layout.orientation === App.Layouts.orientation.down ? (t += o + 2,
                n += 2 * o,
                this.node.children.length > 0 && (n += o)) : n += o,
                [[t, i], [n, i]]
            },
            verticalLine: function() {
                if (this.node.closed || !this.node.hasChildren())
                    return null;
                var e = [0, 0]
                  , t = [0, 0];
                return e[1] = this.children.first()._horizontalLine[0][1],
                t[1] = this.children.last()._horizontalLine[0][1] + this.children.last().dcontainer.pos[1],
                this.rc.orientation === App.Layouts.orientation.left ? e[0] = t[0] = this.dchildren.size()[0] : e[0] = t[0] = 0,
                [e, t]
            },
            getContainerRCOffset: function() {
                if (this.node.isRootC())
                    return [0, 0];
                var e = Element.cumulativeOffset(this.rc.vnode.dcontainer.el)
                  , t = Element.cumulativeOffset(this.dcontainer.el);
                return [t[0] - e[0], t[1] - e[1]]
            },
            mark: function() {
                canvas.allSelected.indexOf(this) < 0 && addClassName(this.dcontent.el, "selected")
            },
            unmark: function() {
                canvas.allSelected.indexOf(this) < 0 && removeClassName(this.dcontent.el, "selected")
            },
            findAffected: function(e) {
                if (!this.dcontainer.contains(e))
                    return null;
                var t = Math.negativeOffset(e, this.dcontainer.getPosition());
                if (this.dcontent.parent.contains(t))
                    return this.dcontent.el;
                if (this.dchildren.contains(t)) {
                    for (var n = null, i = Math.negativeOffset(t, this.dchildren.getPosition()), o = 0, s = this.children.length; o < s && !(n = this.children[o].findAffected(i)); o++)
                        ;
                    return n || (Droppables.last_active ? Droppables.last_active.element : null)
                }
                return this.node.isRootC() && this.dcontainer.contains(t) || !this.node.isRootC() && this.dcontainer.contains(e) ? this.dcontent.el : null
            },
            getParallelNode: function(e) {
                var t = null;
                if (e)
                    for (var n = this.dcontent.el.cumulativeOffset(), i = $$("#tk_container_" + e._listener.dcontent.el.id + " .tk_label"), o = 0; null === t && o <= i.length - 1; ) {
                        var s = i[o].cumulativeOffset();
                        s.top > n.top - 20 && s.top < n.top + 20 && (t = i[o]._listener),
                        o++
                    }
                return t
            },
            getLeftCounterpart: function() {
                var e = this.rc.vnode.node.getPrevSibling();
                return this.getParallelNode(e)
            },
            getRightCounterpart: function() {
                var e = this.rc.vnode.node.getNextSibling();
                return this.getParallelNode(e)
            },
            destroy: function() {
                for (var e = 0, t = this.children.length; e < t; e++)
                    this.children[e].destroy(),
                    this.children[e] = null;
                this.dcontent.el._listener = null,
                this.dcontent.disableDragging && this.dcontent.disableDragging(),
                this.dcontent.disableDropping && this.dcontent.disableDropping(),
                this.dcontent.destroy(),
                this.dcontent = null,
                this.dopener.destroy(),
                this.dopener = null,
                this.dchildren.destroy(),
                this.dchildren = null,
                this.dcontainer.destroy(),
                this.dcontainer = null,
                this.node = null,
                this.rc = null,
                this.children = null,
                this.parent = null
            }
        }));
        a.naturalCompare = function(e, t) {
            return String.naturalCompare(e.node.getRawTitle().toLowerCase(), t.node.getRawTitle().toLowerCase())
        }
        ,
        t.default = a
    },
    Ne51: function(e, t, n) {
        function i(e, t, n, i) {
            var h = -1
              , u = s
              , p = !0
              , f = e.length
              , g = []
              , m = t.length;
            if (!f)
                return g;
            n && (t = r(t, l(n))),
            i ? (u = a,
            p = !1) : t.length >= d && (u = c,
            p = !1,
            t = new o(t));
            e: for (; ++h < f; ) {
                var v = e[h]
                  , _ = null == n ? v : n(v);
                if (v = i || 0 !== v ? v : 0,
                p && _ === _) {
                    for (var y = m; y--; )
                        if (t[y] === _)
                            continue e;
                    g.push(v)
                } else
                    u(t, _, i) || g.push(v)
            }
            return g
        }
        var o = n("2mhJ")
          , s = n("sfIr")
          , a = n("83D3")
          , r = n("eKAY")
          , l = n("+ASY")
          , c = n("3AGJ")
          , d = 200;
        e.exports = i
    },
    "ORg+": function(e, t, n) {
        function i(e, t, n) {
            return t = s(void 0 === t ? e.length - 1 : t, 0),
            function() {
                for (var i = arguments, a = -1, r = s(i.length - t, 0), l = Array(r); ++a < r; )
                    l[a] = i[t + a];
                a = -1;
                for (var c = Array(t + 1); ++a < t; )
                    c[a] = i[a];
                return c[t] = n(l),
                o(e, this, c)
            }
        }
        var o = n("W/Il")
          , s = Math.max;
        e.exports = i
    },
    PlM2: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e) {
            function n(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function i(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function o(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var s = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , a = function(t) {
                function a(e) {
                    n(this, a);
                    var t = i(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, e));
                    return t.state = {
                        selected: !1
                    },
                    t
                }
                return o(a, t),
                s(a, [{
                    key: "selectNode",
                    value: function(e, t) {
                        t.preventDefault(),
                        t.stopPropagation(),
                        this.props.onSelectIcon(e)
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this.props.icon
                          , n = "0 " + 24 * -this.props.index + "px"
                          , i = this.props.className + " item tooltip" + (this.state.selected ? " selected" : "");
                        return e.createElement("cell", null, e.createElement("a", {
                            href: "#",
                            className: i,
                            title: t.getTitle(),
                            onClick: this.selectNode.bind(this, t)
                        }, e.createElement("span", {
                            ref: t.fullName(),
                            style: {
                                backgroundPosition: n
                            }
                        })))
                    }
                }]),
                a
            }(e.Component);
            a.defaultProps = {
                className: ""
            },
            t.default = a
        }
        .call(t, n("nakD"))
    },
    QHRq: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            function o(e) {
                if (Array.isArray(e)) {
                    for (var t = 0, n = Array(e.length); t < e.length; t++)
                        n[t] = e[t];
                    return n
                }
                return Array.from(e)
            }
            var s = n("uwez")
              , a = n.n(s)
              , r = n("lqP1")
              , l = n.n(r)
              , c = n("iB8H")
              , d = n.n(c)
              , h = n("8yla")
              , u = n.n(h)
              , p = n("L7X+")
              , f = n.n(p)
              , g = n("YmTu")
              , m = n("ukVN")
              , v = n("worM")
              , _ = n("SZxL")
              , y = n("VkG4")
              , b = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var i in n)
                        Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
                }
                return e
            }
              , w = {
                all: "search",
                idea: "idea-caption",
                author: "user",
                task: "checkmark",
                icons: "lib-emoji-people"
            }
              , C = ["ja", "zh", "ko"]
              , x = C.indexOf(I18n.currentLocale()) >= 0 ? 1 : 3
              , S = function() {}
              , k = function(e) {
                var t = e.node
                  , n = e.searchType
                  , i = e.searchText
                  , o = !1;
                switch (n) {
                case "all":
                    var s = t.task
                      , a = t.note
                      , r = users ? users.findByID(t.modifiedBy, !0) : null;
                    o = t.getRawTitle().toLowerCase().indexOf(i) >= 0 || s && s.resource && s.resource.name.toLowerCase().indexOf(i) >= 0 || a && a.toLowerCase().indexOf(i) >= 0 || r && r.name && r.name.toLowerCase().indexOf(i) >= 0;
                    break;
                case "idea":
                    o = t.getRawTitle().toLowerCase().indexOf(i) >= 0;
                    break;
                case "author":
                    var l = users ? users.findByID(t.modifiedBy, !0) : null;
                    o = l && l.name && l.name.toLowerCase().indexOf(i) >= 0;
                    break;
                case "task":
                    var c = t.task;
                    o = c && c.resource && c.resource.name.toLowerCase().indexOf(i) >= 0
                }
                return o
            }
              , A = function(e) {
                var t = mm$("filtericon_" + e);
                t && addClassName(t.parentNode, "selected")
            }
              , M = function(e) {
                var t = mm$("filtericon_" + e);
                t && removeClassName(t.parentNode, "selected")
            }
              , E = {
                icons: [],
                selectableIcons: [],
                results: [],
                type: "all",
                init: function(t, n) {
                    var o = this;
                    this.toggledOpen = [],
                    this.openerMarked = [],
                    this.options = b({
                        onFocus: S,
                        onBlur: S
                    }, n),
                    this.popover = new _.c("filter"),
                    this._updatePopoverOpener("all"),
                    e.render(i.createElement(v.a, {
                        items: Object.keys(w).map(function(e) {
                            return {
                                icon: i.createElement(g.a, {
                                    opts: {
                                        name: w[e],
                                        size: 12,
                                        consize: 12,
                                        color: "grey-light",
                                        classes: "h-a-center",
                                        parentClasses: "p-r mr-8"
                                    }
                                }),
                                label: I18n.t("js.filter_" + e),
                                onClick: o.setPanelValue.bind(o, e)
                            }
                        })
                    }), this.popover.widgetContainer),
                    this.searchField = new y.a(t,{
                        onChange: this.doFilterText.bind(this),
                        onFocus: this.onFocus.bind(this),
                        onBlur: this.onBlur.bind(this),
                        onClear: this.clear.bind(this)
                    }),
                    this.keymap = new MM.utils.KeyMap(document,"fld_filter",[{
                        key: MM.utils.KeyEvent.ESC,
                        stopEvent: !1,
                        fn: function() {
                            o.clear(),
                            "icons" !== o.type && o.searchField.blur()
                        }
                    }]),
                    this.keymap.disable(),
                    Element.bindOnClick("btn_search_previous", this.goToResult.bind(this, -1)),
                    Element.bindOnClick("btn_search_next", this.goToResult.bind(this, 1)),
                    App.subscribe(CustomEvents.ICON_CHANGED, this.onNodeIconChange.bind(this))
                },
                onFocus: function() {
                    this.keymap.enable(),
                    this.options.onFocus()
                },
                onBlur: function() {
                    this.keymap.disable(),
                    this.options.onBlur()
                },
                isActive: function() {
                    return hasClassName(mm$("map_header"), "is-filtered")
                },
                setText: function(e) {
                    this.searchField.field.value = e,
                    this.searchField.update(),
                    this.doFilterText()
                },
                clear: function() {
                    this.icons.forEach(function(e) {
                        return M(e.fullName())
                    }),
                    this.icons = [],
                    this.renderPopover(),
                    this.clearText()
                },
                clearText: function(e) {
                    e && e.stop(),
                    this.searchField.clear(),
                    this.unmarkResults(),
                    this.clearResults(),
                    this.unblurMap(),
                    this.results = [],
                    canvas.scrollToNode(canvas.selected)
                },
                doFilter: function() {
                    var e = this;
                    this.unmarkResults(),
                    this.results = [],
                    this.currentIndex = 0;
                    var t = this.searchField.getValue();
                    if (0 === t.length && "icons" !== this.type)
                        return void this.updateResults();
                    this._treeNodes().forEach(function(n) {
                        var i = !0;
                        i = "icons" === e.type ? !!e._hasIcons() && 0 === d()(e.icons, n.icons).length : k({
                            node: n,
                            searchType: e.type,
                            searchText: t.toLowerCase()
                        }),
                        i ? (e.results.push(n.id),
                        n._listener.unBlur()) : n._listener.blur()
                    }),
                    this.blurMap(),
                    this.updateResults(),
                    this.markResults(),
                    0 === this.results.length ? canvas.scrollToNode(canvas.selected) : this.goToResult(0)
                },
                updateResults: function() {
                    var e = mm$("msg_filter");
                    this.results.length > 0 ? (e.innerHTML = 1 === this.results.length ? I18n.t("js.match") : I18n.t("js.matches", {
                        v0: this.results.length
                    }),
                    show(mm$("btn_search_previous")),
                    show(mm$("btn_search_next"))) : (e.innerHTML = I18n.t("js.no_matches_found"),
                    hide(mm$("btn_search_previous")),
                    hide(mm$("btn_search_next"))),
                    show(e),
                    addClassName(mm$("map_header"), "is-filtered"),
                    this.keymap.enable()
                },
                clearResults: function() {
                    var e = mm$("msg_filter");
                    e.innerHTML = "",
                    hide(e),
                    hide(mm$("btn_search_previous")),
                    hide(mm$("btn_search_next")),
                    removeClassName(mm$("map_header"), "is-filtered"),
                    this.keymap.disable()
                },
                goToResult: function(e) {
                    var t = this.toggledOpen;
                    if (0 !== this.results.length) {
                        this.currentIndex = this.currentIndex + e,
                        this.currentIndex >= this.results.length && (this.currentIndex = 0),
                        this.currentIndex < 0 && (this.currentIndex = this.results.length - 1);
                        for (var n = tree.getNodes()[this.results[this.currentIndex]], i = [], o = n.parent; o; )
                            i.push(o),
                            o = o.parent;
                        t = t.diff(i, function(e, t) {
                            return e == t
                        });
                        for (var s = 0, a = t.length; s < a; s++)
                            t[s].closed || t[s].toggleClosed(!0);
                        for (var s = 0, a = i.length; s < a; s++)
                            i[s].closed && (i[s].toggleClosed(!0),
                            this.toggledOpen.push(i[s]));
                        var r = n._listener.dcontent.el;
                        if (canvas.centerOnElement(r),
                        0 !== e) {
                            var l = n.currentStyle() && n.currentStyle().backgroundColor ? "#" + n.currentStyle().backgroundColor : "transparent";
                            new Effect.Highlight(r,{
                                restorecolor: l,
                                duration: 2
                            })
                        }
                    }
                },
                unmarkResults: function() {
                    this.toggledOpen.filter(function(e) {
                        return !e.closed
                    }).forEach(function(e) {
                        return e.toggleClosed(!0)
                    });
                    var e = tree.getNodes();
                    this.results.forEach(function(t) {
                        var n = e[t];
                        n && n._highlighted && this.unHighlightNode(n)
                    }
                    .bind(this)),
                    this.openerMarked.forEach(function(e) {
                        return removeClassName(e._listener.dopener.el, "highlighted")
                    })
                },
                blurMap: function() {
                    $("graphics_container").style.opacity = "0.1"
                },
                unblurMap: function() {
                    this._treeNodes().forEach(function(e) {
                        return e._listener.unBlur()
                    }),
                    $("graphics_container").style.opacity = "1"
                },
                markResults: function() {
                    this.openerMarked = [];
                    var e = tree.getNodes();
                    this.results.forEach(function(t) {
                        var n = e[t];
                        if (n) {
                            var i = n.getVisibleParent();
                            i !== n && (addClassName(i._listener.dopener.el, "highlighted"),
                            this.openerMarked.push(i)),
                            this.highlightNode(n)
                        }
                    }
                    .bind(this))
                },
                highlightNode: function(e) {
                    var t = this.searchField.getValue();
                    if ("" !== t) {
                        var n = e._listener.dcontent.title;
                        u()(n.childNodes, function(e) {
                            var i = MM.utils.highlightText(e.textContent, t);
                            i !== e.textContent && (i = f()(i).replace(/&lt;(\/?em)&gt;/g, "<$1>"),
                            e.nodeType === Node.TEXT_NODE ? (n.insertBefore(new Element("span").update(i), e),
                            n.removeChild(e)) : e.innerHTML = i)
                        }),
                        e._highlighted = !0
                    }
                },
                unHighlightNode: function(e) {
                    e._listener.dcontent.title.update(e.getTitleWithLinks()),
                    e._highlighted = null
                },
                getMapIcons: function() {
                    return a()(l()(this._treeNodes().map(function(e) {
                        return e.icons
                    })))
                },
                filterIcons: function() {
                    hasClassName(this.searchField.parent, "active") || addClassName(this.searchField.parent, "active"),
                    this.buildIcons(),
                    this.doFilter()
                },
                buildIcons: function() {
                    var e = this
                      , t = mm$("icons_filter");
                    if (t.innerHTML = "",
                    this.mapIcons = this.getMapIcons(),
                    this.selectableIcons.length < 5 && (this.selectableIcons = [].concat(o(this.icons.slice(0, Math.min(this.icons.length, 5)))),
                    this.icons.length < 5)) {
                        var n, i = d()(this.mapIcons, this.selectableIcons);
                        (n = this.selectableIcons).push.apply(n, o(i.slice(0, 5 - this.selectableIcons.length)))
                    }
                    this.selectableIcons.forEach(function(n) {
                        var i = new Element("a",{
                            href: "#",
                            className: "h-flex-row justify-center item " + (e._isIconSelected(n) ? "selected" : "")
                        })
                          , o = n.getElement();
                        o.id = "filtericon_" + n.fullName(),
                        o.className = "s-20px",
                        i.appendChild(o),
                        t.appendChild(i),
                        o.observe("click", e.onToggleIcon.bindAsEventListener(e, n))
                    }),
                    this.renderPopover()
                },
                renderPopover: function() {
                    var t = this
                      , n = d()(this.mapIcons, this.selectableIcons);
                    if (n.length > 0) {
                        var o = n.map(function(e) {
                            return {
                                name: e.fullName(),
                                className: "lib_" + Icon.sectionToString(e.library, e.section) + " " + (t._isIconSelected(e) ? "selected" : ""),
                                element: i.createElement("span", {
                                    style: {
                                        backgroundPosition: "0 " + 24 * -e.getSpritePosition() + "px"
                                    }
                                })
                            }
                        })
                          , s = GeneralPopover.get("filtericon") || new _.c("filtericon");
                        e.render(i.createElement(m.a, {
                            className: "icon-grid",
                            emojis: o,
                            elementsInRow: Math.min(8, o.length),
                            onSelect: function(e) {
                                return t.toggleIcon(Icon.get(e))
                            }
                        }), s.widgetContainer),
                        $("btn_filtericon").show()
                    } else
                        $("btn_filtericon").hide()
                },
                onToggleIcon: function(e, t) {
                    Event.stop(e),
                    this.toggleIcon(t)
                },
                toggleIcon: function(e) {
                    var t = this
                      , n = e.fullName();
                    this._isIconSelected(e) ? (this._removeIcon(e),
                    M(n),
                    this.selectableIcons = this.selectableIcons.filter(function(e) {
                        return t._isIconSelected(e)
                    }).slice(0, 5)) : (this._addIcon(e),
                    this.selectableIcons.include(e) || (this.selectableIcons = this.icons.reverse().slice(0, 5)),
                    A(n)),
                    this.filterIcons()
                },
                onNodeIconChange: function() {
                    if ("icons" === this.type) {
                        var e = d()(this.mapIcons, this.getMapIcons())[0];
                        e && (this._isIconSelected(e) && this._removeIcon(e),
                        this._isIconSelectable(e) && this._removeSelectableIcon(e)),
                        this.isActive() ? this.filterIcons() : this.buildIcons()
                    }
                },
                setPanelValue: function(e) {
                    var t = this
                      , n = this.type;
                    this.type = e,
                    this._updatePopoverOpener(e),
                    "icons" === e ? (hide(this.searchField.field),
                    show(mm$("grd_filter")),
                    this.unblurMap(),
                    this.filterIcons()) : ("icons" === n && (hide(mm$("grd_filter")),
                    show(this.searchField.field)),
                    this.doFilterText(),
                    setTimeout(function() {
                        return t.activate()
                    }, 0))
                },
                activate: function() {
                    this.searchField.field.select()
                },
                doFilterText: function() {
                    var e = this.searchField.getValue();
                    e.length >= x ? this.doFilter() : 0 === e.length && this.clearText()
                },
                _addIcon: function(e) {
                    this.icons.push(e)
                },
                _removeIcon: function(e) {
                    this.icons = this.icons.reject(function(t) {
                        return t.equals(e)
                    })
                },
                _removeSelectableIcon: function(e) {
                    this.selectableIcons = this.selectableIcons.reject(function(t) {
                        return t.equals(e)
                    })
                },
                _hasIcons: function() {
                    return this.icons.length > 0
                },
                _isIconSelected: function(e) {
                    return this.icons.include(e)
                },
                _isIconSelectable: function(e) {
                    return this.selectableIcons.include(e)
                },
                _updatePopoverOpener: function(e) {
                    var t = MM.ui.icon({
                        name: w[e],
                        size: 14,
                        color: "grey3"
                    })
                      , n = MM.ui.icon({
                        name: "triangle",
                        size: 9,
                        color: "grey3"
                    });
                    this.popover.opener.innerHTML = t + n
                },
                _treeNodes: function() {
                    return Object.values(tree.getNodes())
                }
            };
            t.default = E
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    Qy9x: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            vnode: null,
            idea_video: null,
            initialize: function(e, t) {
                this.vnode = e,
                this.idea_video = t,
                this.idea_video && (this.el = new Element("div",{
                    className: "tk_video_container"
                }),
                this.el.appendChild(this.idea_video.getElement()))
            },
            updateVideo: function(e) {
                this.idea_video = e,
                this.idea_video.el = null,
                this.el.update(this.idea_video.getElement())
            },
            remove: function() {
                this.vnode.dcontent.removeChild(this.dcontainer)
            },
            showPlaceholder: function() {
                if (mm$("video_placeholder" + this.vnode.node.id))
                    return void (this.placeholder = mm$("video_placeholder_" + this.vnode.node.id));
                this.el.setStyle({
                    opacity: 0,
                    visibility: "hidden"
                });
                var e = MM.ui.icon({
                    name: "play",
                    size: 16,
                    color: "grey-lighter",
                    clickable: !1,
                    parentClasses: "h-a-center"
                });
                this.placeholder = new Element("div",{
                    id: "video_placeholder_" + this.vnode.node.id,
                    className: "tk_video_placeholder video_border h-a-center"
                }).insert(e),
                this.el.parentNode.appendChild(this.placeholder)
            },
            removePlaceholder: function() {
                this.el.setStyle({
                    opacity: 1,
                    visibility: ""
                }),
                this.placeholder && this.el.parentNode.removeChild(this.placeholder)
            }
        });
        t.default = i
    },
    Qziv: function(e, t) {
        function n() {
            return !1
        }
        e.exports = n
    },
    Rftu: function(e, t, n) {
        t = e.exports = n("Vmy+")(!1),
        t.push([e.i, ".v-attachment-viewer {\n  z-index: 1010;\n  /* widget tag is on 1000 */ }\n\n.evernote-content {\n  border: none;\n  overflow: auto;\n  width: calc(60vw - 40px);\n  height: calc(70vh - 40px); }\n", ""])
    },
    "Rq/x": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("Wp5U")
          , o = n("QHRq")
          , s = n("wgYI")
          , a = Class.create({
            el: null,
            root: null,
            mode: null,
            NAV: !0,
            EDIT: !1,
            initialize: function() {
                Event.observe(this.container, "scroll", function() {
                    GeneralPopover.getLastOpened() && GeneralPopover.getLastOpened().sizeAndPosition()
                })
            },
            hasMapFeature: function(e) {
                return this.features.indexOf(e) >= 0
            },
            initEditMode: function() {
                this.navigationMode(),
                this._navigationKeyMap ? this._navigationKeyMap.enable() : this._navigationKeyMap = new MM.utils.KeyMap(document,"navigation_keymap",[]),
                this._editKeyMap ? this._editKeyMap.enable() : this._editKeyMap = new MM.utils.KeyMap(document,"edit_keymap",[])
            },
            initViewOnlyMode: function() {
                this.navigationMode(),
                this._viewOnlyKeyMap ? this._viewOnlyKeyMap.enable() : this._viewOnlyKeyMap = new MM.utils.KeyMap(document,"viewonly_keymap",[]),
                this._navigationKeyMap && this._navigationKeyMap.disable(),
                this._editKeyMap && this._editKeyMap.disable()
            },
            disableEditMode: function() {},
            disableViewOnlyMode: function() {},
            enableViewOnlyMode: function(e) {
                e.initViewOnlyMode(),
                e.children.each(function(e) {
                    this.enableViewOnlyMode(e)
                }
                .bind(this))
            },
            enableEditMode: function(e) {
                e.initEditMode(),
                e.children.each(function(e) {
                    this.enableEditMode(e)
                }
                .bind(this))
            },
            postLoad: function() {},
            buildFromModel: function() {
                this.root = new i.default(tree.root),
                tree.root._listener = this.root,
                this.root.buildFromModel()
            },
            destroy: function() {
                this.removeFocus(),
                this.root.destroy(),
                this.el.innerHTML = ""
            },
            __onStartEdit: function() {
                this.editMode()
            },
            __onStopEdit: function() {
                this.navigationMode()
            },
            editMode: function() {
                this.mode != this.EDIT && (this.mode = this.EDIT)
            },
            navigationMode: function() {
                this.mode != this.NAV && (this.mode = this.NAV)
            },
            addFocus: function() {
                Windows.focusedWindow || (App.config.editable && App.config.currentlyEditable ? this.mode == this.EDIT && this._editKeyMap ? (this._viewOnlyKeyMap && this._viewOnlyKeyMap.disable(),
                this._navigationKeyMap && this._navigationKeyMap.disable(),
                this._editKeyMap.enable()) : this._navigationKeyMap && (this._viewOnlyKeyMap && this._viewOnlyKeyMap.disable(),
                this._editKeyMap && this._editKeyMap.disable(),
                this._navigationKeyMap.enable()) : this._viewOnlyKeyMap && (this._navigationKeyMap && this._navigationKeyMap.disable(),
                this._editKeyMap && this._editKeyMap.disable(),
                this._viewOnlyKeyMap.enable()),
                App.ui.Footer && "slideshow" === App.ui.Footer.activeBar && App.ui.SlideShow && App.ui.SlideShow.keyMap && !Presentation.on && App.ui.SlideShow.keyMap.enable(),
                MM.ua.isBrowser("Internet Explorer") || this.el.focus(),
                void 0 !== o.default && o.default.searchField && o.default.searchField.field.blur && o.default.searchField.field.blur(),
                this.hasFocus = !0)
            },
            removeFocus: function() {
                this.mode = null,
                App.config.editable && App.config.currentlyEditable ? (this._editKeyMap && this._editKeyMap.disable(),
                this._navigationKeyMap && this._navigationKeyMap.disable()) : this._viewOnlyKeyMap && this._viewOnlyKeyMap.disable(),
                App.ui.Footer && "slideshow" === App.ui.Footer.activeBar && void 0 !== App.ui.SlideShow && App.ui.SlideShow.keyMap.disable(),
                this.hasFocus = !1
            },
            onToggleFullscreen: function() {
                s.a.toggle()
            },
            onShowDialog: function(e) {
                sideBar && sideBar[e].showDialog()
            },
            onUndo: function() {
                ServerConnection.isPending() || (App.config.shareMode === App.MULTI ? Message.show(I18n.t("js.undo_in_collaboration_mode"), Message.NOTICE, 8) : (MM.ui.enableButton("btn_redo"),
                ServerConnection.undo())),
                App.trigger(CustomEvents.UNDO)
            },
            onRedo: function() {
                App.config.shareMode == App.MULTI || ServerConnection.isPending() || (App.config.shareMode === App.MULTI ? Message.show(I18n.t("js.redo_in_collaboration_mode"), Message.NOTICE, 8) : (MM.ui.enableButton("btn_undo"),
                ServerConnection.redo()))
            },
            onToggleSidebar: function() {
                sideBar && sideBar.toggle(!0)
            },
            toEditMode: function() {
                if (this.root && this.enableEditMode(this.root),
                this.initEditMode(),
                this._viewOnlyKeyMap && this._viewOnlyKeyMap.disable(),
                this._editKeyMap && this._editKeyMap.disable(),
                this._navigationKeyMap && this._navigationKeyMap.enable(),
                "undefined" != typeof canvas && canvas) {
                    var e;
                    if (canvas.selected && document.body.contains(canvas.selected.dcontent.el))
                        e = canvas.selected;
                    else if (App.config.targetId) {
                        var t = tree.root.getChild(App.config.targetId);
                        e = t && t._listener ? t._listener : canvas.root
                    } else
                        e = canvas.root;
                    e && e.dcontent && e.select()
                }
            },
            toViewMode: function() {
                this.root && this.enableViewOnlyMode(this.root),
                this.disableEditMode(),
                this._navigationKeyMap && this._navigationKeyMap.disable(),
                this._editKeyMap && this._editKeyMap.disable(),
                this.initViewOnlyMode()
            }
        });
        t.default = a
    },
    TEdV: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("ePfb");
        App.Layout = {
            autoAlign: !0,
            elasticLayout: !0,
            rootChildrenPosition: !1,
            orientation: null,
            minOffset: [10, 0],
            initialize: function() {},
            getLineStyle: function() {
                return App.config.mapTheme.line.style
            },
            paintRoot: function() {
                canvas.el.appendChild(canvas.root.dcontent.el),
                canvas.root.reposition(),
                canvas.root.dcontent.doMove()
            },
            paintRootChild: function(e, t) {
                return canvas.el.appendChild(e.vnode.dcontainer.el),
                e.reposition(),
                !0
            },
            repositionRootChild: function(e, t) {
                if (e.vnode.node.pos) {
                    if (t)
                        var n = e.vnode.node.cloneWithPosition(e.vnode.dcontainer.el);
                    e.vnode.dcontainer.move(e.domCoords()),
                    e.orientation !== e.getOrientation() && (e.orientation = e.getOrientation(),
                    e.orientation === App.Layouts.orientation.left ? addClassName(e.vnode.dcontainer.el, "left_pane") : removeClassName(e.vnode.dcontainer.el, "left_pane")),
                    e.vnode.refreshLayout(),
                    canvas.root._refreshRootCAngles(),
                    t && void 0 !== i.default && i.default && i.default.highlightMovement(e.vnode, t, n)
                }
            },
            refreshRootChildLayout: function(e) {
                var t = e.vnode.getContentOffset()
                  , n = e.vnode.dcontent.pos;
                e.vnode.dcontainer.shift([n[0] - t[0], n[1] - t[1]]),
                e.vnode.dcontainer.doMove(),
                e.vnode.dcontent.move(t),
                e.redrawLines()
            },
            mapSize: function() {
                return rectangleLayouter.getTotalSize()
            },
            canvasBounds: function() {
                var e = 0
                  , t = 0;
                if (this.autoAlign) {
                    var n = this.mapSize()
                      , i = n.offset
                      , o = n.width + (i ? i[0] : 0)
                      , s = n.height + (i ? i[1] : 0);
                    this.orientation === App.Layouts.orientation.left || this.orientation === App.Layouts.orientation.right ? o *= 2 : this.orientation === App.Layouts.orientation.down && (s *= 2)
                } else
                    var a = rectangleLayouter.getTotalSize()
                      , r = a.centerOffset[0]
                      , l = a.width - a.centerOffset[0] + App.SIDEBAR_WIDTH
                      , c = a.centerOffset[1]
                      , d = a.height - a.centerOffset[1]
                      , o = Math.max(2 * r, 2 * l, a.width)
                      , s = Math.max(2 * c, 2 * d, a.height);
                return canvas.size[0] < o && (e = o - canvas.size[0]),
                canvas.size[1] < s && (t = s - canvas.size[1]),
                [e, t]
            },
            nextTopicPosition: function(e) {
                return null
            }
        },
        App.Layouts = {},
        App.Layouts.orientation = {
            left: 0,
            right: 1,
            up: 2,
            down: 4
        },
        App.Layouts.Default = Object.extend(Object.clone(App.Layout), {
            id: 0,
            name: "default",
            autoAlign: !1,
            rootChildrenPosition: !0
        }),
        App.Layouts.Aligned = Object.extend(Object.clone(App.Layout), {
            id: 1,
            name: "aligned",
            rootChildrenPosition: !0,
            paintRoot: function() {
                var e = document.createElement("div");
                canvas.root._leftContainer = document.createElement("div"),
                canvas.root._rightContainer = document.createElement("div"),
                canvas.root._rootContainer = document.createElement("div"),
                e.id = "tk_map",
                canvas.root._leftContainer.id = "tk_rootchildren_left",
                canvas.root._leftContainer.className = "tk_children",
                canvas.root._rightContainer.id = "tk_rootchildren_right",
                canvas.root._rightContainer.className = "tk_children",
                canvas.root._rootContainer.id = "tk_rootcontainer",
                canvas.el.appendChild(e),
                e.appendChild(canvas.root._leftContainer),
                e.appendChild(canvas.root._rootContainer),
                e.appendChild(canvas.root._rightContainer),
                canvas.root._rootContainer.appendChild(canvas.root.dcontent.el)
            },
            paintRootChild: function(e, t) {
                e.orientation = e.getOrientation();
                var n = e.orientation === App.Layouts.orientation.left ? canvas.root._leftContainer : canvas.root._rightContainer
                  , i = e
                  , o = canvas.root.children.filter(function(e) {
                    return e.rc.orientation === i.orientation && e.rc !== i
                });
                o.sort(function(e, t) {
                    return e.node.pos[1] - t.node.pos[1]
                });
                for (var s = 0; s < o.length && !(o[s].node.pos[1] >= e.vnode.node.pos[1]); s++)
                    ;
                return s < o.length ? n.insertBefore(e.vnode.dcontainer.el, o[s].dcontainer.el) : n.appendChild(e.vnode.dcontainer.el),
                canvas.root._refreshRootCAngles(),
                t || e.vnode.refreshLayout(),
                !0
            },
            repositionRootChild: function(e, t) {
                if (e.vnode.node.pos) {
                    var n = e.orientation !== e.getOrientation();
                    e.paint(),
                    n && canvas.root.children.each(function(e) {
                        e.rc.calculateLinePoints();
                        var t = e.rc.graphics.translateLines();
                        t && e.rc.translateBoundaries({
                            x: 0,
                            y: t
                        })
                    }),
                    rectangleLayouter.updateAll()
                }
            },
            refreshRootChildLayout: function(e) {
                canvas.root.reposition();
                for (var t = e, n = canvas.root.children.filter(function(e) {
                    return e.rc.orientation === t.orientation && e.rc !== t
                }), i = 0; i < n.length; i++) {
                    var o = n[i];
                    o.rc.calculateLinePoints();
                    var s = o.rc.graphics.translateLines();
                    s && o.rc.translateBoundaries({
                        x: 0,
                        y: s
                    })
                }
            },
            mapSize: function() {
                var e = canvas.root
                  , t = e._leftContainer
                  , n = e._rootContainer
                  , i = e._rightContainer
                  , o = {
                    width: t.clientWidth,
                    height: t.clientHeight
                }
                  , s = {
                    width: n.clientWidth + 100,
                    height: n.clientHeight
                }
                  , a = {
                    width: i.clientWidth,
                    height: i.clientHeight
                }
                  , r = t.cumulativeOffset();
                return {
                    width: o.width + s.width + a.width,
                    height: Math.max(o.height, s.height, a.height),
                    offset: r,
                    centerOffset: [o.width + s.width / 2, n.cumulativeOffset().top + s.height / 2 - Math.min(r.top, i.cumulativeOffset().top)]
                }
            },
            nextTopicPosition: function(e) {
                if (!e.isRoot())
                    return null;
                var t, n = [], i = [];
                if (e.children.each(function(e) {
                    e.pos[0] > 0 ? n.push(e) : i.push(e)
                }),
                n.length < 2 || n.length < i.length) {
                    var o = n.sort(function(e, t) {
                        return t.pos[1] - e.pos[1]
                    })[0];
                    t = [100, o ? o.pos[1] + 75 : 0]
                } else {
                    var o = i.sort(function(e, t) {
                        return t.pos[1] - e.pos[1]
                    })[0];
                    t = [-100, o ? o.pos[1] + 75 : 0]
                }
                return t
            }
        }),
        App.Layouts.AutoAlignedLayout = Object.extend(Object.clone(App.Layout), {
            elasticLayout: !1,
            repositionRootChild: function(e, t) {
                e.paint(),
                canvas.root._refreshRootCAngles()
            },
            refreshRootChildLayout: function(e) {
                canvas.root.reposition();
                for (var t = e, n = canvas.root.children.filter(function(e) {
                    return e.rc != t
                }), i = 0; i < n.length; i++) {
                    var o = n[i];
                    o.rc.calculateLinePoints();
                    var s = o.rc.graphics.translateLines();
                    s && o.rc.translateBoundaries({
                        x: 0,
                        y: s
                    })
                }
            }
        }),
        App.Layouts.OrgChart = Object.extend(Object.clone(App.Layouts.AutoAlignedLayout), {
            id: 2,
            name: "org_chart",
            orientation: App.Layouts.orientation.down,
            getLineStyle: function() {
                return MapTheme.lineStraightCorner
            },
            paintRoot: function() {
                var e = document.createElement("div");
                canvas.root._rootContainer = document.createElement("div"),
                canvas.root._rootChildrenContainer = document.createElement("div"),
                e.id = "tk_map",
                canvas.root._rootContainer.id = "tk_rootcontainer",
                canvas.root._rootChildrenContainer.id = "tk_rootchildrencontainer",
                canvas.el.appendChild(e),
                e.appendChild(canvas.root._rootContainer),
                e.appendChild(canvas.root._rootChildrenContainer),
                canvas.root._rootContainer.appendChild(canvas.root.dcontent.el)
            },
            paintRootChild: function(e, t) {
                e.vnode.node.pos || (e.vnode.node.pos = [0, 0]),
                e.orientation = App.Layouts.orientation.right;
                var n = canvas.root._rootChildrenContainer
                  , i = canvas.root.children;
                i.sort(function(e, t) {
                    return e.node.pos[0] === t.node.pos[0] ? e.node.pos[1] - t.node.pos[1] : e.node.pos[0] - t.node.pos[0]
                });
                var o = i.indexOf(e.vnode) + 1;
                return o < i.length && mm$(i[o].dcontainer.el.id) ? n.insertBefore(e.vnode.dcontainer.el, i[o].dcontainer.el) : n.appendChild(e.vnode.dcontainer.el),
                t || e.vnode.refreshLayout(),
                canvas.root._refreshRootCAngles(),
                !0
            },
            mapSize: function() {
                var e = mm$("tk_rootchildrencontainer")
                  , t = e.scrollWidth
                  , n = mm$("tk_rootcontainer").clientHeight + e.clientHeight + 40
                  , i = e.cumulativeOffset().left
                  , o = canvas.root.getSize();
                return o[1] += 40,
                {
                    width: t,
                    height: n,
                    offset: [i < this.minOffset[0] ? this.minOffset[0] : 0, 0],
                    centerOffset: [canvas.root.dcontent.el.cumulativeOffset().left + o[0] / 2 - i, o[1] / 2]
                }
            },
            nextTopicPosition: function(e) {
                if (!e.isRoot())
                    return null;
                var t = e.children.sort(function(e, t) {
                    return t.pos[0] - e.pos[0]
                })[0];
                return t ? [t.pos[0] + 75] : [100, 0]
            }
        }),
        App.Layouts.LeftAligned = Object.extend(Object.clone(App.Layouts.AutoAlignedLayout), {
            id: 3,
            name: "left_aligned",
            orientation: App.Layouts.orientation.left,
            paintRoot: function() {
                var e = document.createElement("div");
                canvas.root._leftContainer = document.createElement("div"),
                canvas.root._rootContainer = document.createElement("div"),
                e.id = "tk_map",
                canvas.root._leftContainer.id = "tk_rootchildren_left",
                canvas.root._leftContainer.className = "tk_children",
                canvas.root._rootContainer.id = "tk_rootcontainer",
                canvas.el.appendChild(e),
                e.appendChild(canvas.root._leftContainer),
                e.appendChild(canvas.root._rootContainer),
                canvas.root._rootContainer.appendChild(canvas.root.dcontent.el)
            },
            paintRootChild: function(e, t) {
                e.vnode.node.pos || (e.vnode.node.pos = [0, 0]),
                e.orientation = this.orientation;
                var n = canvas.root._leftContainer
                  , i = e
                  , o = canvas.root.children.filter(function(e) {
                    return e.rc != i
                });
                o.sort(function(e, t) {
                    return e.node.pos[1] - t.node.pos[1]
                });
                for (var s = 0; s < o.length && !(o[s].node.pos[1] >= e.vnode.node.pos[1]); s++)
                    ;
                return s < o.length && mm$(o[s].dcontainer.el.id) ? n.insertBefore(e.vnode.dcontainer.el, o[s].dcontainer.el) : n.appendChild(e.vnode.dcontainer.el),
                t || e.vnode.refreshLayout(),
                canvas.root._refreshRootCAngles(),
                !0
            },
            mapSize: function() {
                var e = mm$("tk_rootcontainer").clientWidth + mm$("tk_rootchildren_left").clientWidth
                  , t = mm$("tk_rootchildren_left").clientHeight;
                mm$("tk_rootcontainer").clientHeight > t && (t = mm$("tk_rootcontainer").clientHeight);
                var n = [mm$("tk_rootcontainer").clientWidth, mm$("tk_rootcontainer").clientHeight];
                return {
                    width: e,
                    height: t,
                    offset: [0, 0],
                    centerOffset: [mm$("tk_rootchildren_left").clientWidth + n[0] / 2, mm$("tk_rootcontainer").cumulativeOffset().top + n[1] / 2 - mm$("tk_rootchildren_left").cumulativeOffset().top]
                }
            },
            nextTopicPosition: function(e) {
                if (!e.isRoot())
                    return null;
                var t = e.children.sort(function(e, t) {
                    return t.pos[1] - e.pos[1]
                })[0];
                return t ? [t.pos[0], t.pos[1] + 75] : [-100, 0]
            }
        }),
        App.Layouts.RightAligned = Object.extend(Object.clone(App.Layouts.AutoAlignedLayout), {
            id: 4,
            name: "right_aligned",
            orientation: App.Layouts.orientation.right,
            paintRoot: function() {
                var e = document.createElement("div");
                canvas.root._rightContainer = document.createElement("div"),
                canvas.root._rootContainer = document.createElement("div"),
                e.id = "tk_map",
                canvas.root._rightContainer.id = "tk_rootchildren_right",
                canvas.root._rightContainer.className = "tk_children",
                canvas.root._rootContainer.id = "tk_rootcontainer",
                canvas.el.appendChild(e),
                e.appendChild(canvas.root._rootContainer),
                e.appendChild(canvas.root._rightContainer),
                canvas.root._rootContainer.appendChild(canvas.root.dcontent.el)
            },
            paintRootChild: function(e, t) {
                e.vnode.node.pos || (e.vnode.node.pos = [0, 0]),
                e.orientation = this.orientation;
                var n = canvas.root._rightContainer
                  , i = e
                  , o = canvas.root.children.filter(function(e) {
                    return e.rc !== i
                });
                o.sort(function(e, t) {
                    return e.node.pos[1] - t.node.pos[1]
                });
                for (var s = 0; s < o.length && !(o[s].node.pos[1] >= e.vnode.node.pos[1]); s++)
                    ;
                return s < o.length && mm$(o[s].dcontainer.el.id) ? n.insertBefore(e.vnode.dcontainer.el, o[s].dcontainer.el) : n.appendChild(e.vnode.dcontainer.el),
                t || e.vnode.refreshLayout(),
                canvas.root._refreshRootCAngles(),
                !0
            },
            mapSize: function() {
                var e = mm$("tk_rootcontainer").clientWidth + mm$("tk_rootchildren_right").clientWidth
                  , t = mm$("tk_rootchildren_right").clientHeight;
                mm$("tk_rootcontainer").clientHeight > t && (t = mm$("tk_rootcontainer").clientHeight);
                var n = [mm$("tk_rootcontainer").clientWidth, mm$("tk_rootcontainer").clientHeight];
                return {
                    width: e,
                    height: t,
                    offset: [0, 0],
                    centerOffset: [n[0] / 2, canvas.root.dcontent.el.cumulativeOffset().top + n[1] / 2 - mm$("tk_rootchildren_right").cumulativeOffset().top]
                }
            },
            nextTopicPosition: function(e) {
                if (!e.isRoot())
                    return null;
                var t = e.children.sort(function(e, t) {
                    return t.pos[1] - e.pos[1]
                })[0];
                return t ? [t.pos[0], t.pos[1] + 75] : [100, 0]
            }
        }),
        App.Layouts.get = function(e) {
            switch (e) {
            case 0:
                return App.Layouts.Default;
            case 1:
                return App.Layouts.Aligned;
            case 2:
                return App.Layouts.OrgChart;
            case 3:
                return App.Layouts.LeftAligned;
            case 4:
                return App.Layouts.RightAligned;
            default:
                return App.Layouts.Default
            }
        }
        ,
        App.Layouts.getAll = function() {
            return [App.Layouts.Default, App.Layouts.Aligned, App.Layouts.LeftAligned, App.Layouts.RightAligned, App.Layouts.OrgChart]
        }
    },
    TIa6: function(e, t, n) {
        function i(e, t, n) {
            for (var i = -1, r = t.length, l = {}; ++i < r; ) {
                var c = t[i]
                  , d = o(e, c);
                n(d, c) && s(l, a(c, e), d)
            }
            return l
        }
        var o = n("Vf/c")
          , s = n("ylcm")
          , a = n("Hnr2");
        e.exports = i
    },
    TKta: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("HqoD")
          , o = n("NCMo")
          , s = n("Wp5U")
          , a = n("qlsV")
          , r = n("j1ii")
          , l = n("ZfKP")
          , c = n("3Kh2")
          , d = n("Kh9o")
          , h = (n("xfYt"),
        n("/dW8"))
          , u = Class.create({
            change: null,
            initialize: function(e) {
                this.change = e,
                this.change.id = u.id++
            },
            node: function() {
                return tree.root.getChild(this.change.idea_id)
            },
            execute: function() {},
            executeLocally: function() {
                return this.execute()
            },
            undo: function() {
                return this.execute(!0)
            },
            redo: function() {
                return this.execute()
            },
            handleResponse: MM.utils.empty,
            toJSON: function() {
                return this.change
            },
            _undo: function(e) {
                return this.execute(!0, e)
            },
            _redo: function(e) {
                return this.execute(!1, e)
            }
        });
        u.id = 0;
        var p = Class.create(u, {
            undo: function(e) {
                var t = tree.root.getChild(this.change.new_data.id);
                return !!t && t.parent.__onHideChild(t, e)
            },
            _undo: function(e) {
                var t = tree.root.getChild(this.change.new_data.id);
                if (t)
                    t.parent.__onRemoveChild(t);
                else
                    for (var n = [this.change.new_data].flatten(), i = 0; i < n.size(); i++) {
                        var o = n[i];
                        new f({
                            idea_id: o.idea_id,
                            old_data: o.new_data
                        }).execute(!1, e)
                    }
            },
            redo: function() {
                var e = tree.root.getChild(this.change.new_data.id);
                return !!e && e.parent.__onShowChild(e)
            },
            _redo: function(e) {
                var t = tree.root.getChild(this.change.new_data.id);
                t ? t.parent.__onShowChild(t) : new p(this.change).execute(!1, e)
            },
            _executeSimple: function(e, t) {
                var n = this.change.new_data;
                n.closed = n.closed && n.closed.toBoolean ? n.closed.toBoolean() : n.closed || !1;
                var a = new i.default(n);
                if (n.id <= tree.uncommitedId && (tree.uncommitedId = n.id - 1),
                n.icon && mapView.hasMapFeature("icons"))
                    for (var l = n.icon.split(","), c = 0, d = l.length; c < d; c++)
                        Icon.fromFullName(l[c]);
                if (n.idea_image && mapView.hasMapFeature("images") && "undefined" != typeof IdeaImage) {
                    var h = IdeaImage.get(n.idea_image.id);
                    h || (h = new IdeaImage(n.idea_image)),
                    a.idea_image = h
                }
                if (n.attachments && mapView.hasMapFeature("attachments") && n.attachments.length > 0 && void 0 !== r.default)
                    for (var c = 0, d = n.attachments.length; c < d; c++) {
                        var u = new r.default(n.attachments[c]);
                        a.attachments.push(u)
                    }
                if (n.parent) {
                    var p = tree.root.getChild(n.parent);
                    if (p) {
                        if (a.parent = p,
                        (void 0 === a.pos || null === a.pos) && a.parent.isRoot()) {
                            var f = App.config.layout.nextTopicPosition(a.parent);
                            a.pos = f,
                            this.change.new_data.pos = f
                        }
                        a._listener = new o.default(a);
                        var g = t ? p.__onAddChild(a, n.rank) : p.__onAddChild(a, n.rank, n.modifiedBy);
                        return canvas.liveUpdateHighlight(a),
                        g
                    }
                    return !1
                }
                return tree.root = a,
                a._listener = new s.default(a),
                tree.root._listener.paint(),
                canvas.liveUpdateHighlight(a),
                !0
            },
            execute: function(e, t) {
                var n = this.change.new_data
                  , i = tree.root ? tree.root.getChild(n.parent) : null;
                if (i && i.isRoot())
                    return p.rootChild([this]);
                var o = this._executeSimple(e, t)
                  , s = tree.root ? tree.root.getChild(n.id) : null;
                return s && mapView.hasMapFeature("graphics") && rectangleLayouter.update(s),
                o
            },
            handleResponse: function(e) {
                if (!e.error) {
                    var t = tree.root.getChild(this.change.new_data.id);
                    t && t.changeId(e.id),
                    ServerConnection.fixQueuedChangesIds(this.change.new_data.id, e.id)
                }
            },
            executeLocally: MM.utils.empty
        });
        p.rootChild = function(e, t, n) {
            if (!(e.length <= 0)) {
                var i = !0;
                tree.finishedInitialization || (tree.notPainted = !0);
                for (var o = 0; o < e.length; o++)
                    i = i && e[o]._executeSimple(t, n);
                var s = tree.root.getChild(e[0].change.new_data.id);
                if (mapView.hasMapFeature("graphics")) {
                    if (App.config.layout.elasticLayout)
                        var a = rectangleLayouter.update(s);
                    s._listener.rc.paint(),
                    tree.notPainted = !1,
                    canvas.checkBounds(),
                    App.config.layout.elasticLayout && Q.elasticLayoutChangeset(a)
                }
                return i
            }
        }
        ,
        p.toChangeArray = function(e, t) {
            var n = []
              , i = e.new_data;
            if (t && (e.idea_id = e.new_data.id = t),
            i.attachments && i.attachments.length > 0) {
                for (var o = 0, s = i.attachments.length; o < s; o++) {
                    var a = i.attachments[o];
                    n.push(new E({
                        idea_id: e.idea_id,
                        type: "AddAttachment",
                        new_data: {
                            attachment_id: a.id,
                            details: a
                        }
                    }))
                }
                i.attachments = []
            }
            return i.idea_image && (n.push(new D({
                idea_id: e.idea_id,
                type: "AddImage",
                new_data: {
                    idea_image_id: i.idea_image.id,
                    details: i.idea_image
                }
            })),
            i.idea_image = null),
            i.boundary && (n.push(new W({
                idea_id: e.idea_id,
                type: "AddBoundary",
                new_data: i.boundary
            })),
            i.boundary = null),
            n.unshift(new p(e)),
            n
        }
        ;
        var f = Class.create(u, {
            undo: function() {
                var e = this.node();
                return !!e && e.parent.__onShowChild(e)
            },
            _undo: function(e) {
                for (var t = [], n = [], i = 0, o = this.change.old_data.length; i < o; i++) {
                    var s = this.change.old_data[i];
                    s.type.include("Connection") ? t.push(s) : n.push(s)
                }
                for (var a = n.concat(t), i = 0, o = a.length; i < o; i++) {
                    var s = a[i]
                      , r = new window[s.type + "Change"](s)
                      , l = r.change.new_data;
                    "Insert" === s.type && (l.modifiedAt = new Date(l.modifiedAt)),
                    r.execute(!1, e)
                }
            },
            redo: function() {
                var e = this.node();
                return !!e && e.parent.__onHideChild(e)
            },
            _redo: function() {
                var e = this.node();
                e && e.parent.__onRemoveChild(e)
            },
            execute: function(e, t) {
                var n = this.node();
                if (n) {
                    var i = t ? n.parent.__onRemoveChild(n) : n.parent.__onRemoveChild(n, this.change.user_id);
                    return canvas.selected && !canvas.selected.isVisible() && users.selfUser && this.change.user_id === users.selfUser.id && canvas.scrollToNode(canvas.selected),
                    i
                }
                return !1
            },
            executeLocally: function() {
                var e = this.node();
                e.parent.__onHideChild(e),
                canvas.selected && !canvas.selected.isVisible() && users.selfUser && this.change.user_id === users.selfUser.id && canvas.scrollToNode(canvas.selected)
            },
            handleResponse: function(e) {
                if (!e.error) {
                    var t = this.node();
                    t.parent.__onRemoveChild(t)
                }
            }
        })
          , g = f
          , m = Class.create(u, {
            execute: function(e, t) {
                var n = this.node()
                  , i = e ? this.change.old_data : this.change.new_data;
                if (!n)
                    return !1;
                var o = t ? n.__onRename(i.title) : n.__onRename(i.title, this.change.user_id);
                return canvas.liveUpdateHighlight(n),
                o
            }
        })
          , v = m
          , _ = Class.create(u, {
            execute: function(e, t) {
                var n = e ? this.change.old_data : this.change.new_data
                  , i = this.node()
                  , o = "NonPersistentReposition" === this.change.type;
                return !!i && (t ? i.__onReposition(n.pos, null, o) : i.__onReposition(n.pos, this.change.user_id, o))
            }
        })
          , y = _
          , b = Class.create(u, {
            execute: function(e, t, n) {
                var i = e ? this.change.old_data : this.change.new_data
                  , o = tree.root.getChild(i.parent)
                  , s = this.node();
                if (o && s && s.isInMapStructure()) {
                    if (t)
                        var a = s.__onMove(o, i.rank, null, i.pos, n);
                    else
                        var a = s.__onMove(o, i.rank, this.change.user_id, i.pos, n);
                    return canvas.liveUpdateHighlight(s),
                    a
                }
                return !1
            },
            undo: function(e) {
                return this.execute(!0, e)
            },
            redo: function(e) {
                return this.execute(!1, e)
            }
        })
          , w = Class.create(u, {
            execute: function(e, t) {
                var n = this.node();
                if (!n)
                    return !1;
                var i = e ? this.change.old_data.icon : this.change.new_data.icon
                  , o = t ? n.__onSetIcon(i) : n.__onSetIcon(i, this.change.user_id);
                return canvas.liveUpdateHighlight(n),
                o
            }
        })
          , C = Class.create(u, {
            execute: function(e, t) {
                var n = this.node();
                if (!n)
                    return !1;
                var i = e ? this.change.old_data.style : this.change.new_data.style;
                i && (i = new Style(i));
                var o = t ? n.__onSetStyle(i) : n.__onSetStyle(i, this.change.user_id);
                return canvas.liveUpdateHighlight(n),
                o
            }
        })
          , x = Class.create(u, {
            execute: function(e, t) {
                var n = this.node();
                if (!n)
                    return !1;
                var i = e ? !!this.change.old_data && this.change.old_data.floating : !!this.change.new_data && this.change.new_data.floating
                  , o = null;
                i && (o = new c.default({
                    floating: i
                }));
                var s = t ? n.__onSetIdeaProperty(o) : n.__onSetIdeaProperty(o, this.change.user_id);
                return canvas.liveUpdateHighlight(n),
                s
            }
        })
          , S = Class.create(u, {
            undo: function(e) {
                var t = this.change.old_data[e]
                  , n = this.node();
                return !!n && n.__onSetProperty(e, t)
            },
            execute: function(e, t, n) {
                var i = this.node();
                if (!i)
                    return !1;
                var o = t ? this.change.old_data[e] : this.change.new_data[e]
                  , s = n ? i.__onSetProperty(e, o) : i.__onSetProperty(e, o, this.change.user_id);
                return canvas.liveUpdateHighlight(i),
                s
            }
        })
          , k = Class.create(S, {
            undo: function($super) {
                return $super("note")
            },
            execute: function($super, e, t) {
                return $super("note", e, t)
            },
            handleResponse: function(e) {
                "undefined" != typeof sideBar && sideBar.onSelectNode()
            }
        })
          , A = Class.create(S, {
            undo: function($super) {
                return $super("link")
            },
            execute: function($super, e, t) {
                return $super("link", e, t)
            }
        })
          , M = Class.create(S, {
            undo: function($super) {
                return $super("task")
            },
            execute: function($super, e, t) {
                return $super("task", e, t)
            }
        })
          , E = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new I({
                        idea_id: this.change.idea_id,
                        old_data: this.change.new_data
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = r.default.get(this.change.new_data.attachment_id);
                if (!i) {
                    var o = this.change.new_data.details;
                    i = new r.default(o)
                }
                return t ? n.__onAddAttachment(i) : n.__onAddAttachment(i, this.change.user_id),
                "undefined" != typeof sideBar && sideBar && sideBar.attachments && ("undefined" == typeof RevisionBrowser || !RevisionBrowser.on && !RevisionBrowser.painted) && sideBar.attachments.onAddAttachment(i),
                canvas.liveUpdateHighlight(n),
                !0
            }
        })
          , I = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new E({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = r.default.get(this.change.old_data.attachment_id);
                return t ? n.__onRemoveAttachment(i) : n.__onRemoveAttachment(i, this.change.user_id),
                "undefined" != typeof sideBar && sideBar && sideBar.attachments && ("undefined" == typeof RevisionBrowser || !RevisionBrowser.on && !RevisionBrowser.painted) && sideBar.attachments.onRemoveAttachment(i),
                canvas.liveUpdateHighlight(n),
                !0
            }
        })
          , L = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new O({
                        idea_id: this.change.idea_id,
                        old_data: this.change.new_data
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = l.default.get(this.change.new_data.idea_comment_id);
                return i || (i = new l.default(this.change.new_data)),
                t ? n.__onAddComment(i) : n.__onAddComment(i, this.change.user_id),
                "undefined" != typeof sideBar && sideBar && sideBar.comments && ("undefined" == typeof RevisionBrowser || !RevisionBrowser.on && !RevisionBrowser.painted) && sideBar.comments.onAddComment(i),
                canvas.liveUpdateHighlight(n),
                !0
            },
            handleResponse: function(e) {
                if (!e.error) {
                    var t = l.default.get(this.change.new_data.id);
                    t && (t.id = e.idea_comment_id,
                    t.text = e.text,
                    t.createdAt = new Date(e.created_at),
                    t.updatedAt = new Date(e.created_at),
                    "undefined" != typeof sideBar && sideBar && sideBar.comments && sideBar.comments.expanded && sideBar.comments.onCommentAdded(t, this.change.new_data.id))
                }
            }
        })
          , T = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new T({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data,
                        old_data: this.change.new_data
                    }).execute();
                var n = l.default.get(this.change.new_data.idea_comment_id);
                return n && (n.update(this.change.new_data.text),
                "undefined" != typeof sideBar && sideBar && sideBar.comments && ("undefined" == typeof RevisionBrowser || !RevisionBrowser.on && !RevisionBrowser.painted) && sideBar.comments.onEditComment(n)),
                canvas.liveUpdateHighlight(this.node()),
                !0
            },
            handleResponse: function(e) {
                if (!e.error) {
                    var t = l.default.get(this.change.new_data.idea_comment_id);
                    t && (t.updatedAt = new Date(e.updated_at),
                    t.text = e.text,
                    "undefined" != typeof sideBar && sideBar && sideBar.comments && sideBar.comments.expanded && sideBar.comments.onCommentEdited(t))
                }
            }
        })
          , O = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new L({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = this.change.old_data.idea_comment_id || this.change.old_data.id
                  , o = l.default.get(i);
                return o && (t ? n.__onRemoveComment(o) : n.__onRemoveComment(o, this.change.user_id),
                "undefined" != typeof sideBar && sideBar && sideBar.comments && ("undefined" == typeof RevisionBrowser || !RevisionBrowser.on && !RevisionBrowser.painted) && sideBar.comments.onRemoveComment(o)),
                canvas.liveUpdateHighlight(n),
                !0
            }
        })
          , R = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new N({
                        idea_id: this.change.idea_id,
                        old_data: this.change.new_data,
                        user: this.change.user
                    }).execute();
                if (void 0 !== this.change.new_data && this.change.new_data) {
                    var n = this.node();
                    if (!n)
                        return !1;
                    var i = IdeaVote.getChangeUser(this.change.new_data, this.change.user)
                      , o = IdeaVote.get(tree.root.getChild(this.change.idea_id), i.id);
                    o || (o = new IdeaVote({
                        idea_id: this.change.new_data.idea_id,
                        user_id: i.id,
                        vote: this.change.new_data.vote,
                        voted_at: this.change.new_data.voted_at
                    }));
                    var s = t ? n.__onAddVote(o) : n.__onAddVote(o, this.change.user_id);
                    return "undefined" != typeof sideBar && sideBar && sideBar.comments && ("undefined" == typeof RevisionBrowser || !RevisionBrowser.on && !RevisionBrowser.painted) && sideBar.comments.onAddVote(o),
                    canvas.liveUpdateHighlight(n),
                    s
                }
            }
        })
          , P = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new P({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data,
                        old_data: this.change.new_data,
                        user: this.change.user
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = IdeaVote.getChangeUser(this.change.new_data, this.change.user)
                  , o = IdeaVote.get(tree.root.getChild(this.change.idea_id), i.id);
                if (o) {
                    o.vote = this.change.new_data.vote,
                    this.change.new_data.voted_at && (o.voted_at = new Date(this.change.new_data.voted_at));
                    var s = t ? n.__onEditVote(o) : n.__onEditVote(o, this.change.user_id);
                    "undefined" != typeof sideBar && sideBar && sideBar.comments && ("undefined" == typeof RevisionBrowser || !RevisionBrowser.on && !RevisionBrowser.painted) && sideBar.comments.onEditVote(o)
                }
                return canvas.liveUpdateHighlight(n),
                s
            }
        })
          , N = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new R({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data,
                        user: this.change.user
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = IdeaVote.getChangeUser(this.change.old_data, this.change.user)
                  , o = IdeaVote.get(tree.root.getChild(this.change.idea_id), i.id)
                  , s = t ? n.__onRemoveVote(o) : n.__onRemoveVote(o, this.change.user_id);
                return "undefined" != typeof sideBar && sideBar && sideBar.comments && ("undefined" == typeof RevisionBrowser || !RevisionBrowser.on && !RevisionBrowser.painted) && sideBar.comments.onRemoveVote(o),
                canvas.liveUpdateHighlight(n),
                s
            }
        })
          , D = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new D({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data,
                        old_data: this.change.new_data
                    }).execute();
                if (void 0 !== this.change.new_data && this.change.new_data) {
                    var n = IdeaImage.get(this.change.new_data.idea_image_id);
                    if (!n && this.change.new_data.details) {
                        var i = this.change.new_data.details;
                        n = new IdeaImage(i)
                    }
                    var o = this.node();
                    if (!o)
                        return !1;
                    o.idea_image = n;
                    var s = t ? o.__onAddImage() : o.__onAddImage(this.change.user_id);
                    return canvas.liveUpdateHighlight(o),
                    s
                }
            },
            handleResponse: function(e) {
                e.error || (e.idea_image && (this.node().idea_image = new IdeaImage(e.idea_image),
                this.node().__onAddImage(this.change.user_id)),
                tree.root.getChild(e.idea_id).changeImageId(e.idea_image_id))
            }
        })
          , j = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new D({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data,
                        old_data: {
                            idea_image_id: null
                        }
                    }).execute();
                var n = IdeaImage.get(this.change.old_data.idea_image_id)
                  , i = this.node();
                if (!i)
                    return !1;
                var o = t ? i.__onRemoveImage(n) : i.__onRemoveImage(n, this.change.user_id);
                return canvas.liveUpdateHighlight(i),
                o
            }
        })
          , B = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new B({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data,
                        old_data: this.change.new_data
                    }).execute();
                var n = IdeaImage.get(this.change.new_data.idea_image_id)
                  , i = this.node();
                if (!i)
                    return !1;
                n || (n = new IdeaImage(this.change.new_data.details),
                i.idea_image = n),
                n.size = [this.change.new_data.width, this.change.new_data.height];
                var o = t ? i.__onResizeImage(n) : i.__onResizeImage(n, this.change.user_id);
                return canvas.liveUpdateHighlight(i),
                o
            }
        })
          , z = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new F({
                        idea_id: this.change.idea_id,
                        old_data: this.change.new_data
                    }).execute();
                var n = new h.default(this.change.new_data);
                if (n.from && n.to) {
                    var i = t ? n.from.__onAddConnection(n) : n.from.__onAddConnection(n, this.change.user_id);
                    return canvas.liveUpdateHighlight(this.node()),
                    i
                }
                return !1
            }
        })
          , F = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new z({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data
                    }).execute();
                var n;
                n = this.change.old_data ? h.default.get(this.change.old_data.from_id, this.change.old_data.to_id) : h.default.get(this.change.new_data.from_id, this.change.new_data.to_id);
                var i = this.node();
                if (!i || !n)
                    return !1;
                var o = t ? i.__onRemoveConnection(n) : i.__onRemoveConnection(n, this.change.user_id);
                return canvas.liveUpdateHighlight(i),
                o
            }
        })
          , V = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new V({
                        idea_id: this.change.idea_id,
                        old_data: this.change.new_data,
                        new_data: this.change.old_data
                    }).execute();
                var n = h.default.get(this.change.new_data.from_id, this.change.new_data.to_id);
                return !!(n && n.from && n.to) && n.__onSetProperties(this.change.new_data, t ? void 0 : this.change.user_id)
            }
        })
          , $ = V
          , U = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new H({
                        idea_id: this.change.idea_id,
                        old_data: this.change.new_data
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = new d.default(Object.extend(this.change.new_data, {
                    idea_id: this.change.idea_id
                }))
                  , o = t ? n.__onAddVideo(i) : n.__onAddVideo(i, this.change.user_id);
                return canvas.liveUpdateHighlight(n),
                o
            }
        })
          , H = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new U({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = t ? n.__onRemoveVideo() : n.__onRemoveVideo(this.change.user_id);
                return canvas.liveUpdateHighlight(n),
                i
            }
        })
          , q = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new q({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data,
                        old_data: this.change.new_data
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = n.idea_video;
                i.url = this.change.new_data.url,
                i.title = this.change.new_data.title,
                i.updateSource();
                var o = t ? n.__onAddVideo(i) : n.__onAddVideo(i, this.change.user_id);
                return canvas.liveUpdateHighlight(n),
                o
            }
        })
          , W = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new G({
                        idea_id: this.change.idea_id,
                        old_data: this.change.new_data
                    }).execute();
                var n = this.node();
                return !!n && (n.boundary = new a.default(Object.extend(this.change.new_data, {
                    idea_id: this.change.idea_id
                })),
                n.__onAddBoundary(),
                canvas.liveUpdateHighlight(n),
                !0)
            }
        })
          , G = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new W({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data
                    }).execute();
                var n = this.node();
                return !!n && (n.__onRemoveBoundary(),
                canvas.liveUpdateHighlight(n),
                !0)
            }
        })
          , K = Class.create(u, {
            execute: function(e, t) {
                if (e)
                    return new K({
                        idea_id: this.change.idea_id,
                        new_data: this.change.old_data,
                        old_data: this.change.new_data
                    }).execute();
                var n = this.node();
                if (!n)
                    return !1;
                var i = n.boundary;
                return i && (i.view.destroy(),
                i.style.update(this.change.new_data),
                n.__onAddBoundary(),
                canvas.liveUpdateHighlight(n)),
                !0
            }
        })
          , Z = Class.create(u, {
            execute: function(e, t) {
                if (mapView.hasMapFeature("graphics")) {
                    if (e)
                        return new Z({
                            idea_id: this.change.idea_id,
                            new_data: this.change.old_data,
                            old_data: this.change.new_data
                        }).execute();
                    var n = MapTheme.get(this.change.new_data.id);
                    return n || (n = new MapTheme(this.change.new_data)),
                    MapTheme.closeActivity(),
                    n.id > 0 && n.root_style && n.root_children_style && n.nodes_style && (MapTheme.activity = new MM.ui.Activity(I18n.t("js.applying_theme"),{
                        progress: !0,
                        autoUpdate: !0,
                        duration: 2e4
                    }),
                    canvas.removeTheme(App.config.mapTheme),
                    canvas.applyTheme(n),
                    App.trigger(CustomEvents.THEME_CHANGED)),
                    !0
                }
            },
            handleResponse: function(e) {
                if (!e.error && e.theme && e.theme.id !== App.config.mapTheme.id) {
                    canvas.removeTheme(App.config.mapTheme);
                    var t = MapTheme.get(e.theme.id);
                    t || (t = new MapTheme(e.theme)),
                    canvas.applyTheme(t),
                    App.trigger(CustomEvents.THEME_CHANGED)
                }
            }
        })
          , Y = Class.create(u, {
            execute: function(e) {
                var t = e ? this.change.old_data : this.change.new_data;
                return canvas.__onSetMapProperties(t),
                !0
            }
        })
          , Q = Class.create({
            changes: null,
            initialize: function() {
                this.changes = []
            },
            hasPersistentChanges: function() {
                return this.changes.any(function(e) {
                    return "NonPersistentReposition" !== e.type
                })
            },
            getChange: function(e) {
                for (var t = this.changes.length; t > 0; ) {
                    var n = this.changes[--t];
                    if (n.change.id === e)
                        return n
                }
            },
            toJSON: function() {
                return this.changes.collect(function(e) {
                    return e.toJSON()
                })
            },
            toArray: function() {
                return this.changes
            },
            _do: function(e, t) {
                for (var n = !0, i = 0, o = this.changes.length; i < o; i++)
                    n = n && this.changes[i][e](t);
                return n
            },
            execute: function(e) {
                return this._do("execute", e)
            },
            executeLocally: function(e) {
                return this._do("executeLocally", e)
            },
            undo: function(e) {
                for (var t = !0, n = this.changes.length; n--; )
                    t = t && this.changes[n].undo(e)
            },
            redo: function(e) {
                return this._do("redo", e)
            },
            merge: function(e) {
                this.changes = this.changes.concat(e.changes)
            },
            _doLayoutingChanges: function(e, t) {
                if (0 !== e.length)
                    for (var n = 0, i = e.length; n < i; n++) {
                        var o, s = e[n], a = s[1], r = Math.offset(s[0].pos, a);
                        s[0].pos[0] === r[0] && s[0].pos[1] === r[1] || (t = t || "NonPersistentReposition",
                        o = new window[t + "Change"]({
                            idea_id: s[0].id,
                            type: t,
                            old_data: {
                                pos: s[0].pos
                            },
                            new_data: {
                                pos: r
                            }
                        }),
                        o.execute(),
                        this.changes.push(o))
                    }
            },
            doAutoLayoutingChanges: function() {
                this._doLayoutingChanges(rectangleLayouter.autoLayout())
            },
            doAutoCondenseChanges: function() {
                this._doLayoutingChanges(rectangleLayouter.autoCondense(), "Reposition")
            },
            doAutoAlignedChanges: function(e) {
                for (var t, n = canvas.root.children, i = canvas.getCenter(), o = 0; o < n.length; o++) {
                    t = Math.negativeOffset(canvas.getNodeCanvasOffset(n[o]), i),
                    e = e || "Reposition";
                    var s = new window[e + "Change"]({
                        idea_id: n[o].node.id,
                        type: e,
                        old_data: {
                            pos: n[o].node.pos
                        },
                        new_data: {
                            pos: t
                        }
                    });
                    tree.notPainted = !0,
                    s.execute(),
                    tree.notPainted = !1,
                    this.changes.push(s)
                }
            },
            doNodeLayoutingChanges: function(e) {
                App.config.layout.autoAlign || e.isRoot() || this._doLayoutingChanges(rectangleLayouter.changeRectangleTidy(rectangleLayouter.getRectangle(e.getRootC())))
            },
            handleResponse: function(e) {
                if (e.responses)
                    for (var t = 0, n = e.responses.length; t < n; t++) {
                        var i = e.responses[t];
                        i.client_id && this.getChange(i.client_id).handleResponse(i)
                    }
            }
        });
        Q.layoutAlteringChangeset = function(e) {
            if (0 !== e.length) {
                var t = new Q;
                t.changes = t.changes.concat(e),
                e.each(function(e) {
                    e.execute()
                }),
                App.config.layout.autoAlign || e.each(function(e) {
                    t.doNodeLayoutingChanges(e.node())
                }),
                ServerConnection.doChanges(t)
            }
        }
        ,
        Q.autoLayoutChangeset = function() {
            if (!App.config.layout.autoAlign) {
                var e = new Q;
                return e.doAutoLayoutingChanges(),
                e
            }
        }
        ,
        Q.elasticLayoutChangeset = function(e) {
            e && (Q.lastElasticChangeset || (Q.lastElasticChangeset = new Q),
            Q.lastElasticChangeset._doLayoutingChanges(e))
        }
        ,
        Q.executeChangesGrouped = function(e, t) {
            for (var n = [], i = {}, o = 0; o < e.length; o++) {
                var s = e[o];
                "Insert" === s.change.type ? tree.root && s.change.new_data.parent === tree.root.id ? (p.rootChild(n),
                n = [s],
                i[s.change.new_data.id] = s.change.new_data.id) : (n[0] && n[0].change.new_data.id === i[s.change.new_data.parent] ? n.push(s) : (n[0] && (p.rootChild(n),
                n = []),
                s.execute(!1, t)),
                i[s.change.new_data.id] = i[s.change.new_data.parent]) : (n.length > 0 && (p.rootChild(n),
                n = []),
                s.execute(!1, t))
            }
            n.length > 0 && p.rootChild(n)
        }
        ,
        Q.executeChanges = function(e) {
            for (var t = !1, n = 0, i = e.length; n < i; n++) {
                var o = e[n];
                e[n] = new window[o.type + "Change"](o),
                e[n].new_data && canvas.selected && e[n].new_data.idea_id === canvas.selected.node.id && (t = !0),
                "Insert" === o.type && (o.new_data.modifiedAt = new Date(o.new_data.modifiedAt))
            }
            Q.executeChangesGrouped(e, 0 === App.config.shareMode && App.config.liveUpdate);
            var s = e[0] ? e[0].change : null;
            if (App.config.liveUpdate && s && tree.finishedInitialization) {
                var a = null;
                if ("Insert" === s.type && s.new_data && s.new_data.id ? a = s.new_data.id : s.idea_id && (a = s.idea_id),
                a) {
                    var r = mm$(a.toString());
                    r && canvas.centerOnElement(r)
                }
            }
            "undefined" != typeof sideBar && sideBar && ("undefined" == typeof RevisionBrowser || !RevisionBrowser.on && !RevisionBrowser.painted) && t && sideBar.onSelectNode()
        }
        ,
        Q.executeServerChanges = function(e) {
            for (var t = [], n = [], i = 0, o = e.length; i < o; i++) {
                var s = e[i];
                s.type.include("Connection") ? t.push(s) : n.push(s)
            }
            tree.notPainted = !1,
            Q.executeChanges(n),
            Q.executeChanges(t),
            tree.notPainted || n.any(function(e) {
                return "MapProperties" === e.type
            }) && Q.autoLayoutChangeset()
        }
        ,
        window.InsertChange = p,
        window.RemoveChange = f,
        window.DeleteChange = g,
        window.RenameChange = m,
        window.TitleChange = v,
        window.RepositionChange = _,
        window.NonPersistentRepositionChange = y,
        window.MoveChange = b,
        window.IconChange = w,
        window.TextStyleChange = C,
        window.IdeaPropertiesChange = x,
        window.PropertyChange = S,
        window.NoteChange = k,
        window.LinkChange = A,
        window.TaskChange = M,
        window.AddAttachmentChange = E,
        window.RemoveAttachmentChange = I,
        window.AddCommentChange = L,
        window.EditCommentChange = T,
        window.RemoveCommentChange = O,
        window.AddVoteChange = R,
        window.EditVoteChange = P,
        window.RemoveVoteChange = N,
        window.AddImageChange = D,
        window.RemoveImageChange = j,
        window.ResizeImageChange = B,
        window.AddConnectionChange = z,
        window.RemoveConnectionChange = F,
        window.ConnectionPropertiesChange = V,
        window.ChangeConnectionColorChange = $,
        window.AddVideoChange = U,
        window.RemoveVideoChange = H,
        window.EditVideoChange = q,
        window.AddBoundaryChange = W,
        window.RemoveBoundaryChange = G,
        window.EditBoundaryChange = K,
        window.MapThemeChange = Z,
        window.ChangeList = Q,
        window.MapPropertiesChange = Y
    },
    U8js: function(e, t) {
        function n(e, t) {
            var n = typeof e;
            return !!(t = null == t ? i : t) && ("number" == n || "symbol" != n && o.test(e)) && e > -1 && e % 1 == 0 && e < t
        }
        var i = 9007199254740991
          , o = /^(?:0|[1-9]\d*)$/;
        e.exports = n
    },
    UWmw: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("A9ap")
              , s = n("+8/T")
              , a = n("SZxL")
              , r = n("AGfX")
              , l = n("67vC")
              , c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
              , d = Class.create(o.default, {
                effort_units: ["hours", "days", "weeks", "months"],
                initialize: function($super, e, t) {
                    $super("tasks", e, t),
                    this.buildPopovers(),
                    Element.bindOnClick("btn_removetask", this.removeTask.bind(this)),
                    Element.bindOnClick("btn_autotask", this.setAutoTask.bind(this)),
                    this.setupPromotion()
                },
                load: function($super) {
                    $super()
                },
                setupPromotion: function() {
                    MM.utils.getCookie("ignore_mt_task_promotion") && mm$("mt_task_promotion") && (mm$("tasks_content").removeClassName("h-hidden"),
                    mm$("mt_task_promotion").addClassName("h-hidden"))
                },
                buildPopovers: function() {
                    MM.utils.loadScript("tools/datepicker.js", this.buildDatePickers.bind(this), function() {
                        return "function" == typeof DatePicker
                    }),
                    this.priorityPopover && !this.advancedOn || (this.priorityPopover = this.buildPopover("priority")),
                    this.completePopover && !this.advancedOn || (this.completePopover = this.buildPopover("complete")),
                    this.resourcePopover && !this.advancedOn || (this.resourcePopover = this.buildPopover("resource"),
                    this.renderResourcePopover()),
                    this.advancedOn && (this.effortPopover = this.buildPopover("effort_units"))
                },
                renderResourcePopover: function() {
                    var t = this;
                    if (canvas.selected) {
                        var n = canvas.selected.node
                          , o = n.task ? n.task.resource : null;
                        e.render(i.createElement(s.a, {
                            users: users.allUsers,
                            assignee: o,
                            isExternalTask: !!n.externalTask,
                            setResource: function(e) {
                                return t.setPopoverValue("resource", e)
                            }
                        }), this.resourcePopover.widgetContainer)
                    }
                },
                buildPopover: function(t) {
                    var n = this;
                    if ("resource" === t)
                        return new a.c(t,{
                            onShow: this.renderResourcePopover.bind(this),
                            onHide: function() {
                                return e.unmountComponentAtNode(n.resourcePopover.widgetContainer)
                            }
                        });
                    var i;
                    switch (t) {
                    case "priority":
                        i = [-1, 1, 2, 3, 4, 5, 6, 7].collect(function(e) {
                            return "priority_0" + e
                        });
                        break;
                    case "complete":
                        i = [-1, 1, 2, 3, 4, 5].collect(function(e) {
                            return "task_" + e
                        });
                        break;
                    case "effort_units":
                        i = this.effort_units
                    }
                    var o = [];
                    i.each(function(e) {
                        o.push(this.getEntryForType(e, t))
                    }
                    .bind(this));
                    var s = new Popover(t,this.setPopoverValue.bind(this, t),{
                        offset: [0, 0]
                    });
                    return s.addElements(o),
                    s
                },
                _getIconElement: function(e) {
                    var t = null;
                    e && (t = Icon.fromFullName(e));
                    var n = new Element("a",{
                        class: "iconized library ellipsis" + (t ? "" : " empty"),
                        href: "#"
                    });
                    return t && (n.id = t.id,
                    n.title = t.getTitle()),
                    n.innerHTML = t ? t.getTitle() : I18n.t("js.none"),
                    n.style.backgroundImage = t ? 'url("' + t.url() + '")' : "none",
                    n
                },
                getEntryForType: function(e, t) {
                    switch (t) {
                    case "priority":
                    case "complete":
                        return this._getIconElement(e);
                    case "resource":
                        if ((e = this.getUserFromResource(e)) && "object" == (void 0 === e ? "undefined" : c(e))) {
                            var n = new Element("a",{
                                href: "#",
                                className: "h-flex-row"
                            });
                            n.insert(e.getAvatar("small mr-5")),
                            n.insert(new Element("span").update(e.name))
                        } else {
                            var n = new Element("a");
                            n.update(e ? e.escapeHTML() : I18n.t("js.not_assigned"))
                        }
                        return n;
                    case "effort_units":
                        e = e.replace("effort_", "");
                        var n = new Element("a",{
                            id: "effort_" + e,
                            href: "#"
                        });
                        return n.update(I18n.t("js.helper_" + e)),
                        n;
                    case "startdate":
                        var n = new Element("a");
                        return n.update(e || I18n.t("js.not_started")),
                        n;
                    case "duedate":
                    case "enddate":
                        var n = new Element("a");
                        return n.update(e || I18n.t("js.not_due")),
                        n
                    }
                },
                setPopoverValue: function(e, t) {
                    switch ("none" === t && (t = null),
                    e) {
                    case "priority":
                    case "complete":
                        if (this.advancedOn)
                            this[e + "_advanced_cache"] = t ? l.TASK[e].indexOf(t) : -1;
                        else if (t)
                            canvas.onSetIcon(Icon.get(t));
                        else {
                            var n = canvas.allSelected.map(function(e) {
                                return e.node
                            });
                            Tree.utils.removeIconGroup("complete" === e ? "task" : e, n)
                        }
                        break;
                    case "resource":
                        this.resourcePopover.close(),
                        this.setResource(t);
                        var i = canvas.selected.node.task;
                        i && i.resource && i.resource.id === t && (t = null);
                        break;
                    case "duedate":
                        t = this.getFormattedDate(this.getDateFromField("duedate"));
                        break;
                    case "enddate":
                    case "startdate":
                        var o = this.getDateFromField("startdate")
                          , s = this.getDateFromField("enddate")
                          , a = "enddate" === e ? s : o;
                        o && s && o > s ? MM.ui.dialogs.showError(I18n.t("js.start_date_is_set_after_due_date")) : a && -1 !== a.toString().indexOf("Invalid Date") ? (MM.ui.dialogs.showError(I18n.t("js.invalid_task_date")),
                        t = null) : MM.ui.dialogs.hideError(),
                        t = this.getFormattedDate(a);
                        break;
                    case "effort_units":
                        this.setEffort(t)
                    }
                    this.updateDropdown(t, e),
                    this.advancedOn || this.setFieldValue(e)
                },
                updatePopover: function(e) {
                    for (var t = 0; t < l.TASK[e].length; t++)
                        mm$(e + "_" + l.TASK[e][t]).className = canvas.selected.node["task_" + e] == t ? "selected" : ""
                },
                updateDropdown: function(e, t) {
                    if (mm$("btn_" + t)) {
                        $("btn_" + t).select("span")[0].update(this.getEntryForType(e, t))
                    }
                },
                getUserFromResource: function(e) {
                    if ("object" == (void 0 === e ? "undefined" : c(e)))
                        return e;
                    var t = e;
                    "string" == typeof t && (t = parseInt(t.substring(9)));
                    var n = users.findByID(t, !0);
                    return "object" == (void 0 === n ? "undefined" : c(n)) ? n : e
                },
                buildDatePickers: function() {
                    this.advancedOn ? (this.startdatepicker = new DatePicker({
                        relative: "fld_startdate",
                        opener: "btn_startdate",
                        parent: "popover_startdate",
                        language: I18n.locale,
                        keepFieldEmpty: !0,
                        ignore: ["fld_startdate"],
                        cellCallback: this.setPopoverValue.bind(this, "startdate")
                    }),
                    this.startdatepicker.load(),
                    this.duedatepicker = new DatePicker({
                        relative: "fld_enddate",
                        opener: "btn_enddate",
                        parent: "popover_enddate",
                        language: I18n.locale,
                        keepFieldEmpty: !0,
                        ignore: ["fld_enddate"],
                        cellCallback: this.setPopoverValue.bind(this, "enddate")
                    }),
                    this.duedatepicker.load()) : this.datepicker || (this.datepicker = new DatePicker({
                        relative: "fld_duedate",
                        opener: "btn_duedate",
                        parent: "popover_date",
                        language: I18n.locale,
                        keepFieldEmpty: !0,
                        ignore: ["fld_duedate"],
                        cellCallback: this.setPopoverValue.bind(this, "duedate")
                    }),
                    this.datepicker.load())
                },
                setResource: function(e) {
                    mm$("fld_resourceid").value = "",
                    mm$("fld_resource").value = e,
                    users.allUsers.each(function(t) {
                        t.id === e && (mm$("fld_resourceid").value = e,
                        mm$("fld_resource").value = t.name)
                    })
                },
                setEffort: function(e) {
                    mm$("fld_effort_units").value = I18n.t("js.helper_" + e.split("effort_")[1]),
                    this.task_effort_key = e.split("effort_")[1],
                    this.updateDropdown(e, "effort_units")
                },
                checkEffort: function() {
                    var e = parseInt(mm$("fld_effort").value);
                    return isNaN(e) ? "" : (e > 999 && (e = 999),
                    e.toString() + this.task_effort_key)
                },
                setFieldValue: function(e) {
                    if (!canvas.selected)
                        return void Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE);
                    switch (e) {
                    case "resource":
                        var t = "" != mm$("fld_resource").value ? mm$("fld_resource").value : null
                          , n = "" != mm$("fld_resourceid").value ? parseInt(mm$("fld_resourceid").value) : null;
                        break;
                    case "duedate":
                        var i = this.getDateFromField(e)
                    }
                    var o = [];
                    canvas.allSelected.each(function(s) {
                        var a = s.node.task
                          , l = -1
                          , c = -1
                          , d = t
                          , h = n
                          , u = i
                          , p = null;
                        a && (l = a.priority,
                        c = a.complete,
                        "duedate" !== e && (u = a.due),
                        "resource" === e ? a.resource && a.resource.id && a.resource.id === n && (h = null,
                        d = null) : d = a.resource),
                        (u || h || d || l > -1 || c > -1) && (p = new r.default({
                            due: u,
                            resource: d,
                            resource_id: h,
                            priority: l,
                            complete: c
                        })),
                        a && p && a.equals(p) || o.push({
                            node: s.node,
                            task: p
                        })
                    }
                    .bind(this)),
                    Tree.utils.setTask(o)
                },
                onSelectNode: function() {
                    canvas.selected.node.updateTaskFromIcons(canvas.selected.node.icons),
                    ["priority", "complete"].each(function(e) {
                        this.updateDropdown(canvas.selected.node.task ? l.TASK[e][canvas.selected.node.task[e]] : null, e)
                    }, this);
                    var e = null;
                    canvas.selected.node.task && canvas.selected.node.task.due ? (e = canvas.selected.node.task.due,
                    mm$("fld_duedate").value = e.toUIString(!0),
                    mm$("fld_duedate").setAttribute("date", this.datePickerDateFormat(e)),
                    mm$("fld_enddate") && (mm$("fld_enddate").value = e.toUIString(!0),
                    mm$("fld_enddate").setAttribute("date", this.datePickerDateFormat(e)))) : (mm$("fld_duedate").value = "",
                    mm$("fld_duedate").removeAttribute("date"),
                    mm$("fld_enddate") && (mm$("fld_enddate").value = "",
                    mm$("fld_enddate").removeAttribute("date"))),
                    this.updateDropdown(this.getFormattedDate(e), "duedate");
                    var t = null;
                    if (canvas.selected.node.task && canvas.selected.node.task.resource ? (t = mm$("fld_resource").value = canvas.selected.node.task.resource.name || "",
                    canvas.selected.node.task.resource.id ? (mm$("fld_resourceid").value = canvas.selected.node.task.resource.id,
                    users.findByID(canvas.selected.node.task.resource.id, !0) && (t = canvas.selected.node.task.resource.id)) : mm$("fld_resourceid").value = "") : (mm$("fld_resource").value = "",
                    mm$("fld_resourceid").value = ""),
                    this.updateDropdown(t, "resource"),
                    this.advancedOn) {
                        this.updateDropdown(this.getFormattedDate(e), "enddate");
                        var n = null;
                        if (canvas.selected.node.task && canvas.selected.node.task.from && (n = canvas.selected.node.task.from,
                        mm$("fld_startdate").value = n.toUIString(!0),
                        mm$("fld_startdate").setAttribute("date", this.datePickerDateFormat(n))),
                        this.updateDropdown(this.getFormattedDate(n), "startdate"),
                        canvas.selected.node.task && canvas.selected.node.task.effort) {
                            mm$("fld_effort").value = parseInt(canvas.selected.node.task.effort) || "";
                            var i = canvas.selected.node.task.effort.sub(parseInt(canvas.selected.node.task.effort).toString(), "");
                            mm$("fld_effort_units").value = i,
                            mm$("effort_" + i).parentNode.className += (mm$("effort_" + i).parentNode.className ? " " : "") + "selected",
                            this.setEffort("effort_" + i)
                        } else
                            mm$("fld_effort_units") && (mm$("fld_effort_units").value = I18n.t("js.helper_hours"),
                            this.setEffort("effort_hours"))
                    }
                },
                showDialog: function() {
                    canvas.selected ? (this.datepicker.disable(),
                    canvas.removeFocus(),
                    this.advancedOn = !0,
                    MM.ui.dialogs.show("task", {
                        height: 350,
                        width: 640,
                        action: "task_details_ajax/" + canvas.selected.node.id,
                        onClose: function() {
                            canvas.addFocus(),
                            this.advancedOn = !1,
                            this.buildPopovers()
                        }
                        .bind(this)
                    }),
                    this.task_notification = null,
                    this.priority_advanced_cache = canvas.selected.node.task ? canvas.selected.node.task.priority : -1,
                    this.complete_advanced_cache = canvas.selected.node.task ? canvas.selected.node.task.complete : -1) : Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
                },
                onSetNotification: function(e) {
                    this.task_notification = e
                },
                beforeSetTask: function() {
                    this.startdatepicker && this.duedatepicker && (this.startdatepicker.disable(),
                    this.duedatepicker.disable())
                },
                saveAdvancedTask: function(e) {
                    if (this.beforeSetTask(),
                    e) {
                        var t = new r.default({
                            from: this.getDateFromField("startdate"),
                            due: this.getDateFromField("enddate"),
                            resource: "" != mm$("fld_resource").value ? mm$("fld_resource").value : null,
                            resource_id: "" != mm$("fld_resourceid").value ? parseInt(mm$("fld_resourceid").value) : null,
                            effort: this.checkEffort(),
                            priority: this.priority_advanced_cache,
                            complete: this.complete_advanced_cache
                        })
                          , n = [];
                        canvas.allSelected.each(function(e) {
                            e.node.task && e.node.task.equals(t) || n.push({
                                node: e.node,
                                task: t
                            })
                        }
                        .bind(this)),
                        n.length > 0 && Tree.utils.setTask(n),
                        setTimeout(this.onSelectNode.bind(this), 500),
                        this.task_notification && canvas.selected.node.setTaskNotify(this.task_notification)
                    }
                },
                onCloseDialog: function(e) {
                    Windows.close("task"),
                    this.saveAdvancedTask(e),
                    this.datepicker.enable()
                },
                removeTask: function() {
                    canvas.selected ? (canvas.onRemoveTask(),
                    this.onSelectNode()) : Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
                },
                setAutoTask: function() {
                    if (!canvas.selected)
                        return void Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE);
                    var e = Math.floor(6 * Math.random())
                      , t = Math.floor(4 * Math.random())
                      , n = new Date;
                    if (n.setHours(12),
                    n.setMinutes(0),
                    n.setSeconds(0),
                    n.setDate(n.getDate() + 7),
                    n = Date.toUTC(n.getTime()),
                    void 0 === this.user_advanced_cache || this.user_advanced_cache === users.allUsers.length - 1 ? this.user_advanced_cache = 0 : this.user_advanced_cache++,
                    users.allUsers[this.user_advanced_cache])
                        var i = new r.default({
                            from: null,
                            due: n,
                            effort: null,
                            priority: e,
                            complete: t,
                            resource: users.allUsers[this.user_advanced_cache].name,
                            resource_id: users.allUsers[this.user_advanced_cache].id
                        });
                    else
                        var i = new r.default({
                            from: null,
                            due: n,
                            effort: null,
                            priority: e,
                            complete: t,
                            resource: null
                        });
                    var o = [];
                    canvas.allSelected.each(function(e) {
                        o.push({
                            node: e.node,
                            task: i
                        })
                    }),
                    Tree.utils.setTask(o),
                    this.onSelectNode(),
                    Amplitude.logEvent("wunder_task")
                },
                getFormattedDate: function(e) {
                    return e ? Date.fromUTC(e).toUIString(!0) : e
                },
                datePickerDateFormat: function(e) {
                    return e ? e.getMonth() + 1 + "/" + e.getDate() + "/" + e.getFullYear() : e
                },
                prepareDate: function(e) {
                    if (!e)
                        return e;
                    var t = new Date(e);
                    return t.setHours(12),
                    t.setMinutes(0),
                    t.setSeconds(0),
                    t.setTime(t.getTime() - 60 * t.getTimezoneOffset() * 1e3),
                    t = Date.toUTC(t.getTime())
                },
                getDateFromField: function(e) {
                    var t = this.prepareDate(mm$("fld_" + e).getAttribute("date"));
                    return t && -1 !== t.toString().indexOf("Invalid Date") ? null : t
                }
            });
            t.default = d
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    UeFO: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            vnode: null,
            icon: null,
            initialize: function(e, t) {
                if (this.icon = t,
                this.vnode = e,
                this.icon) {
                    this.el = new Element("div",{
                        className: "tk_icon_container"
                    }),
                    this.el.writeAttribute("icon-id", this.icon.id);
                    var n = this.icon.getElement({
                        className: "tk_icon i16"
                    });
                    this.el.appendChild(n),
                    this.listener = canvas.onSetGroupIcon.bindAsEventListener(canvas, e.node, t);
                    var i = e.node.icons.indexOf(this.icon);
                    (e.image || e.video) && i++,
                    e.dcontent.insertChild(this, i),
                    App.config.editable && App.config.currentlyEditable && this.enable()
                }
            },
            animate: function() {
                var e = childElements(this.el)[0];
                addClassName(e, "appear"),
                setTimeout(function() {
                    removeClassName(e, "appear")
                }, 300)
            },
            animateDeletion: function(e) {
                CSS.set(childElements(this.el)[0], {
                    transform: CSS.scale(.1),
                    transformOrigin: "50% 50%",
                    transitionDuration: "300ms"
                }),
                e.onFinish && setTimeout(function() {
                    e.onFinish(this)
                }
                .bind(this), 300)
            },
            disable: function() {
                addClassName(this.el, "disabled"),
                this.el.stopObserving("click", this.listener)
            },
            enable: function() {
                removeClassName(this.el, "disabled"),
                this.el.observe("click", this.listener)
            }
        });
        t.default = i
    },
    VQwZ: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("t8zp")
          , o = n("xAzy");
        t.default = Class.create({
            el: null,
            pos: null,
            arrindex: null,
            connection: null,
            initialize: function(e, t, n) {
                this.arrindex = t,
                this.connection = n,
                this.pos = e,
                this.uid = this.connection.raphael_id,
                this.el || (this.el = new Element("div",{
                    id: "connection_handler_" + this.uid + "_" + this.arrindex,
                    className: "connection_handle",
                    width: "20px",
                    height: "20px"
                })),
                canvas.el.appendChild(this.el),
                this.draggable = new Draggable(this.el,{
                    onStart: this._onStart.bind(this),
                    onDrag: this._onDrag.bind(this),
                    onEnd: this._onEnd.bind(this),
                    starteffect: !1,
                    endeffect: !1,
                    revert: this._onRevert.bind(this),
                    reverteffect: this._onRevertUpdate.bind(this)
                }),
                Event.observe(this.el, "mousedown", this._onMouseDown.bind(this)),
                this.move(e),
                this.hide(),
                this.mouseStartX = 0,
                this.mouseStartY = 0,
                this.dx = 0,
                this.dy = 0,
                this.revertPrevPos = e,
                this.firstdrag = !0,
                this.revertX = 0,
                this.revertY = 0
            },
            getElementAndRootPositions: function() {
                var e = parseInt(this.el.style.left) + parseInt(this.el.getAttribute("width")) / 2
                  , t = parseInt(this.el.style.top) + parseInt(this.el.getAttribute("height")) / 2
                  , n = {
                    x: e,
                    y: t
                }
                  , o = i.Graphics.connectionstack.get(this.uid)[0]
                  , s = o.attrs.path
                  , a = i.Graphics.connectionstack.get(this.uid)[1][4]
                  , r = a.attrs.path;
                return [n, {
                    x: s[0][1],
                    y: s[0][2]
                }, {
                    x: r[3][1],
                    y: r[3][2]
                }]
            },
            getElementRadius: function() {
                return parseInt(Math.sqrt(Math.pow(parseInt(this.el.getAttribute("width")) / 2, 2) + Math.pow(parseInt(this.el.getAttribute("height")) / 2, 2)))
            },
            getDistance: function(e, t) {
                var n = t.x - e.x
                  , i = t.y - e.y;
                return Math.sqrt(n * n + i * i)
            },
            RaphaelHandler: function(e, t) {
                i.Graphics.connectionstack.get(this.uid)[1][this.arrindex].update(e, t)
            },
            RaphaelHandlerAbsolute: function(e, t) {
                i.Graphics.connectionstack.get(this.uid)[1][this.arrindex].updateAbsolute(e, t)
            },
            saveControlPointPositions: function(e, t) {
                var n = i.Graphics.connectionstack.get(this.uid)[1]
                  , s = i.Graphics.connectionstack.get(this.uid)[0].attr("stroke")
                  , a = {
                    x: n[2].attrs.cx,
                    y: n[2].attrs.cy
                }
                  , r = {
                    x: n[3].attrs.cx,
                    y: n[3].attrs.cy
                };
                this.connection.setProperties({
                    cp_from_x: parseInt(a.x - e.x),
                    cp_from_y: parseInt(a.y - e.y),
                    cp_to_x: parseInt(r.x - t.x),
                    cp_to_y: parseInt(r.y - t.y),
                    cp_scale_x: parseInt(t.x - e.x),
                    cp_scale_y: parseInt(t.y - e.y),
                    color: s ? s.substr(1) : o.DEFAULT_COLOR
                })
            },
            _onMouseDown: function(e) {
                this.dragging = !0,
                App.connectionPopover && App.connectionPopover.close(),
                Event.observeOnce(document, "mouseup", this._onMouseUp.bind(this))
            },
            _onMouseUp: function() {
                this.dragging = !1
            },
            _onStart: function(e, t) {
                canvas.disableScrollByDrag(),
                this.mouseStartX = Event.pointerX(t),
                this.mouseStartY = Event.pointerY(t)
            },
            _onDrag: function(e, t) {
                var n, o = this.getElementAndRootPositions(), s = o[0], a = o[1], r = o[2], l = this.getElementRadius();
                2 == this.arrindex && (n = this.getDistance(s, a)),
                3 == this.arrindex && (n = this.getDistance(s, r)),
                n < i.Graphics.connectionstack.get(this.uid)[2][0].attrs.r + l ? (2 == this.arrindex && i.Graphics.connectionstack.get(this.uid)[2][0].show(),
                3 == this.arrindex && i.Graphics.connectionstack.get(this.uid)[2][1].show()) : (2 == this.arrindex && i.Graphics.connectionstack.get(this.uid)[2][0].hide(),
                3 == this.arrindex && i.Graphics.connectionstack.get(this.uid)[2][1].hide()),
                this.dx = Event.pointerX(t) - this.mouseStartX,
                this.dy = Event.pointerY(t) - this.mouseStartY,
                this.RaphaelHandlerAbsolute(s.x, s.y),
                this.mouseStartX += this.dx,
                this.mouseStartY += this.dy,
                this.firstdrag && (this.revertX += this.dx,
                this.revertY += this.dy)
            },
            _onEnd: function(e, t) {
                canvas.enableScrollByDrag();
                var n = this.getElementAndRootPositions()
                  , i = n[0];
                this.RaphaelHandlerAbsolute(i.x, i.y),
                this.mouseStartX = 0,
                this.mouseStartY = 0,
                this.dx = 0,
                this.dy = 0
            },
            _onRevert: function(e) {
                var t, n = this.getElementAndRootPositions(), o = n[0], s = n[1], a = n[2], r = this.getElementRadius();
                return 2 == this.arrindex && (t = this.getDistance(o, s)),
                3 == this.arrindex && (t = this.getDistance(o, a)),
                t > i.Graphics.connectionstack.get(this.uid)[2][0].attrs.r + r ? (this.revertPrevPos = o,
                this.firstdrag = !1,
                this.saveControlPointPositions(s, a),
                !1) : (i.Graphics.connectionstack.get(this.uid)[2][0].hide(),
                i.Graphics.connectionstack.get(this.uid)[2][1].hide(),
                !0)
            },
            _onRevertUpdate: function(e, t, n) {
                this.move(this.revertPrevPos),
                this.firstdrag ? (this.RaphaelHandler(-this.revertX, -this.revertY),
                this.revertX = 0,
                this.revertY = 0,
                this.firstdrag = !0) : (this.RaphaelHandler(-n, -t),
                this.firstdrag = !1)
            },
            move: function(e) {
                this.el.style.left = e.x - parseInt(this.el.getAttribute("width")) / 2 + "px",
                this.el.style.top = e.y - parseInt(this.el.getAttribute("height")) / 2 + "px"
            },
            hide: function() {
                this.el.addClassName("hidden")
            },
            show: function() {
                this.el.removeClassName("hidden")
            },
            destroy: function() {
                Element.discard(this.el),
                this.connection = this.pos = null
            }
        })
    },
    "Vf/c": function(e, t) {
        function n(e, t) {
            return null == e ? void 0 : e[t]
        }
        e.exports = n
    },
    Vw2l: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("HM34")
          , o = n("Qy9x")
          , s = n("NCMo")
          , a = n("UeFO")
          , r = n("ZfKP")
          , l = n("ePfb")
          , c = n("t8zp")
          , d = n("3Ox4")
          , h = Class.create({
            node: null,
            parent: null,
            children: null,
            image: null,
            icons: [],
            dcontent: null,
            refreshLayout: function() {},
            mark: function() {},
            unmark: function() {},
            __onRename: function(e) {
                if (e && App.config.editable && App.config.currentlyEditable && this.dcontent.isEditing())
                    var t = window.getSelection()
                      , n = t.getRangeAt(0)
                      , i = n.startOffset
                      , o = n.endOffset;
                if (this.dcontent.updateTitle(),
                n && this.dcontent.setCursor && this.dcontent.setCursor(i, o),
                this.image && (this.dcontent.childrenLength = null),
                tree.notPainted || (this.refreshLayout(),
                this.node.isRootC() && this.rc.redrawRootLine()),
                this.node.isRoot()) {
                    var s = this.node.getSingleLineTitle();
                    document.title = s + " -" + document.title.split("-")[1],
                    mm$("map-title") && (mm$("map-title").textContent = s),
                    canvas.root.reposition()
                }
                l.default && e && l.default.highlightNode(this, e),
                canvas.selected === this && sideBar && sideBar.onSelectNode()
            },
            __onSetIcon: function(e, t) {
                !(e = e || tree.notPainted) && this.image && (this.dcontent.children[1].el.style.marginLeft = "0");
                for (var n = this.icons.length, i = !1; n--; )
                    if (this.node.icons.indexOf(this.icons[n].icon) < 0) {
                        var o = this.icons[n];
                        !tree.finishedInitialization || o.icon.group() && this.node.icons.detect(function(e) {
                            return e.group() === this.group()
                        }
                        .bind(o.icon)) ? this.dcontent.removeChild(o) : (i = !0,
                        o.animateDeletion({
                            onFinish: function(e) {
                                this.dcontent.removeChild(e)
                            }
                            .bind(this)
                        })),
                        this.icons = this.icons.without(o)
                    }
                for (var n = 0, s = this.node.icons.length; n < s; n++) {
                    if (-1 === this.icons.collect(function(e) {
                        return e.icon
                    }).indexOf(this.node.icons[n])) {
                        var r = new a.default(this,this.node.icons[n]);
                        this.icons.push(r),
                        tree.finishedInitialization && r.animate()
                    }
                }
                App.config.inline_tasks && this.updateTaskLayer(),
                e || (i ? setTimeout(function() {
                    this.refreshLayout(),
                    this.node.isRootC() && this.rc.redrawRootLine()
                }
                .bind(this), 350) : (this.refreshLayout(),
                this.node.isRootC() && this.rc.redrawRootLine())),
                l.default && users && t && l.default.highlightNode(this, t)
            },
            __onSetStyle: function(e, t) {
                e = e || tree.notPainted,
                this.node.style ? Style.applyToElement(this.node.style, this.dcontent.el) : e || Style.removeFromElement(this.dcontent.el),
                e || (this.refreshLayout(),
                this.node.isRootC() ? this.rc.redrawRootLine() : this.node.isRoot() && canvas.root.reposition()),
                l.default && t && l.default.highlightNode(this, t),
                sideBar && canvas.selected == this && sideBar.format.onSelectNode()
            },
            __onSetIdeaProperty: function(e, t) {
                if (e = e || tree.notPainted,
                e || (this.refreshLayout(),
                this.node.isRootC() ? this.rc.redrawRootLine() : this.node.isRoot() && canvas.root.reposition()),
                (t && "undefined" != typeof users && users.selfUser && t === users.selfUser.id || void 0 === t) && this.node.ideaProperty && this.node.ideaProperty.floating && !MM.utils.getCookie("saw_floatingwarning"))
                    return Message.show(I18n.t("js.floating_nodes_warning", {
                        v0: '<a href="#" onclick="return MM.ui.openHelp(\'/218493487-Edit-your-map\')">',
                        v1: "</a>"
                    }), Message.INFO, 30),
                    MM.utils.setCookie("saw_floatingwarning", "1", 365),
                    !0;
                l.default && t && l.default.highlightNode(this, t)
            },
            openLink: function() {
                if (!this.node.link)
                    return !1;
                var e = this.node.getLinkObj();
                if ("topic" !== e.type)
                    return this.doOpenLink(this.node.link.unescapeHTML(), e.type),
                    !1;
                var t = mm$(e.link);
                if (t)
                    App.ui.Preview.clearTimer(this),
                    this.scrollToLinkTarget(t);
                else {
                    var n = this.doOpenLink("", e.type);
                    new Ajax.Request("/maps/get_topic_target/" + e.link,{
                        onSuccess: function(t) {
                            var i = "/" + e.link;
                            t.responseJSON && t.responseJSON.link && (i = t.responseJSON.link),
                            n.location.href = i
                        }
                        .bind(this)
                    })
                }
                return !1
            },
            _updateLink: function(e) {
                e.rel = this.node.getLinkRel({
                    link: this.node.link
                });
                var t = this.node.getLinkObj()
                  , n = t.type
                  , i = t.link;
                switch (n) {
                case "url":
                    e.href = this.node.link.unescapeHTML();
                    break;
                case "email":
                    e.href = "mailto:" + i;
                    break;
                default:
                    "phantomjs" === App.config.environment ? e.href = "https://mindmeister.com/" + i : (e.href = "#",
                    Element.bindOnClickNoBubble(e, this.openLink.bind(this)))
                }
            },
            scrollToLinkTarget: function(e) {
                var t = e._listener;
                if (!t.node.isVisible()) {
                    t.node.getVisibleParent().toggleClosed()
                }
                canvas.centerOnElement(e),
                t.select(null, null, null, !0)
            },
            doOpenLink: function(e, t) {
                if ("email" !== t)
                    return window.open(e);
                window.location.href = e
            },
            openExternalTask: function() {
                return !!this.node.externalTask && ("embedded" !== App.config.viewMode ? (App.trigger(CustomEvents.EXTERNAL_TASK_OPENED),
                window.open(ServerData.keys.mtDomain + "/app#task/" + this.node.externalTask.external_token),
                !1) : void window.open("https://www.mindmeister.com/mind-map-project-management"))
            },
            __onSetProperty: function(e, t, n) {
                t = t || tree.notPainted;
                var s = mm$(this.node.id + "_" + e);
                if ("image" === e)
                    this.node.idea_image ? (s && this.image && (this.dcontent.removeChild({
                        el: s
                    }),
                    i.default.removeImage(this.image),
                    t || this.dcontent.onImageRemoved()),
                    this.image = new i.default(this,this.node.idea_image),
                    this.image.show(),
                    this.dcontent.insertChild(this.image.dcontainer, 0),
                    this.dcontent.isSelected && this.isSelected() && this.image.dcontainer.toSelected()) : s && (this.dcontent.removeChild({
                        el: s
                    }),
                    this.image = null,
                    t || this.dcontent.onImageRemoved());
                else if ("video" === e)
                    this.node.idea_video ? (this.video ? this.video.updateVideo(this.node.idea_video) : this.video = new o.default(this,this.node.idea_video),
                    this.dcontent.insertChild(this.video, 0),
                    "phantomjs" === App.config.environment && this.video.showPlaceholder()) : (this.dcontent.removeChild(this.video),
                    this.video = null),
                    "undefined" != typeof sideBar && sideBar && canvas.selected === this && sideBar.onSelectNode();
                else if ("externalTask" === e)
                    s && this.dcontent.removeChild({
                        el: s
                    }),
                    this.node.externalTask && (s = new Element("div",{
                        id: this.node.id + "_" + e,
                        className: "tk_tail"
                    }),
                    "embedded" !== App.config.viewMode && (s.title = I18n.t("js.click_to_view_task_in_meistertask")),
                    Element.bindOnClickNoBubble(s, this.openExternalTask.bind(this)),
                    this._updatePropertyIcon(s, e),
                    this._appendPropertyIcon(s));
                else if ("attachments" === e && this.node.attachments.length > 0 || "task" === e && this.node.task && !this.node.task.iconsOnly() && !this.node.task.empty() || "comments" === e && this.node.comments.length > 0 || "votes" === e && this.node.votes.length > 0 || "attachments" !== e && "task" !== e && "comments" !== e && "votes" !== e && this.node[e])
                    if (s)
                        switch (e) {
                        case "comments":
                            this._updatePropertyIcon(s, e);
                            break;
                        case "task":
                            App.config.inline_tasks && this.updateTaskLayer();
                            break;
                        case "votes":
                            s.update(this.updateVotesLayer({
                                animate: !1
                            }));
                            break;
                        case "link":
                            this._updateLink(s)
                        }
                    else
                        "votes" === e ? (s = new Element("div",{
                            id: this.node.id + "_" + e,
                            class: "tk_tail",
                            style: "position: relative;"
                        }),
                        s.update(this.updateVotesLayer({
                            animate: tree.finishedInitialization
                        })),
                        this._appendPropertyIcon(s)) : "link" === e ? (s = new Element("a",{
                            id: this.node.id + "_" + e,
                            className: "tk_tail",
                            target: "_blank"
                        }),
                        this._updateLink(s),
                        this._updatePropertyIcon(s, e),
                        this._appendPropertyIcon(s)) : (s = new Element("div",{
                            id: this.node.id + "_" + e,
                            className: "tk_tail"
                        }),
                        this._updatePropertyIcon(s, e),
                        this._appendPropertyIcon(s),
                        "task" === e && App.config.inline_tasks && (this.dtasklayer = new Element("div",{
                            id: this.node.id + "_task_layer",
                            className: "h-flex-row justify-sb tk_task"
                        }),
                        this.updateTaskLayer(),
                        this.dcontent.appendChild({
                            el: this.dtasklayer
                        }))),
                        "link" !== e && Element.bindOnClickNoBubble(s, App.ui.Preview.show.bind(App.ui.Preview, this, e)),
                        Event.observe(s, "mouseover", App.ui.Preview.onHover.bind(App.ui.Preview, this, e)),
                        Event.observe(s, "mouseout", App.ui.Preview.clearTimer.bind(App.ui.Preview, this));
                else {
                    if (!s)
                        return;
                    this.dcontent.removeChild({
                        el: mm$(this.node.id + "_" + e)
                    }),
                    "task" == e && this.dtasklayer && App.config.inline_tasks && (this.dcontent.removeChild({
                        el: this.dtasklayer
                    }),
                    this.dtasklayer = null)
                }
                t || (this.refreshLayout(),
                this.node.isRootC() ? this.rc.redrawRootLine() : this.node.isRoot() && canvas.root.reposition()),
                App.ui.Users && n && App.ui.Users.highlightNode(this, n)
            },
            __onResizeImage: function(e) {
                this.image && this.image.dcontainer.setSize([this.node.idea_image.width(), this.node.idea_image.height()]),
                tree.notPainted || (this.node.isRoot() ? this.reposition() : this.refreshLayout()),
                l.default && e && l.default.highlightNode(this, e)
            },
            _updatePropertyIcon: function(e, t) {
                var n = {
                    attachments: "widget-attachment",
                    task: "checkmark-thin",
                    externalTask: "mt-checkmark",
                    comments: "widget-comment",
                    link: "link"
                }
                  , i = {
                    name: n[t] || "widget-" + t,
                    color: "grey-light",
                    size: 12,
                    consize: 16
                };
                "comments" === t && (r.default.getUnread(this.node.comments).length > 0 ? (addClassName(e, "bg-orange"),
                i.color = "white") : removeClassName(e, "bg-orange")),
                e.update(MM.ui.icon(i))
            },
            _appendPropertyIcon: function(e) {
                this.dtasklayer ? this.dcontent.el.insertBefore(e, this.dtasklayer) : this.dcontent.appendChild({
                    el: e
                })
            },
            updateTaskLayer: function() {
                if (this.dtasklayer && this.node.task) {
                    var e = ""
                      , t = {
                        size: this.node.isRoot() ? 14 : 10,
                        color: "grey-light"
                    };
                    if (this.node.task.due) {
                        e = '<div row class="rounded due' + (this.node.task.due <= new Date && this.node.task.complete < 4 ? ' overdue" title="' + I18n.t("js.overdue") + '">' : '">') + MM.ui.icon(Object.extend({
                            name: "date"
                        }, t)) + "<div>" + this.node.task.due.toUIString(!0) + "</div></div>"
                    }
                    if (this.node.task.resource) {
                        e += "<div row>";
                        var n = users.findByID(this.node.task.resource.id, !0);
                        e += n ? n.getAvatar(this.node.isRoot() ? "small" : "tiny") : MM.ui.icon(Object.extend({
                            name: "user"
                        }, t)),
                        e += "<div>" + this.node.task.resource.name.escapeHTML() + "</div></div>"
                    }
                    this.dtasklayer.innerHTML = e
                }
            },
            updateVotesLayer: function(e) {
                var t = this.node.votes.length
                  , n = IdeaVote.getByVote(this.node, IdeaVote.UP).length
                  , i = IdeaVote.maxVotes
                  , o = new Element("span",{
                    class: "h-14px w-14px lh-0 h-a-center"
                });
                return e = Object.extend(e, {
                    width: 14,
                    height: 14,
                    colors: ["#8ACC47", "#FF5319", "#e0e4e6"],
                    strokeWidth: 2.5
                }),
                c.Graphics.drawDonutChart(o, [n, t - n, i - t], i, e),
                o
            },
            __onAddConnection: function(e) {
                tree.readyForConnections && e.view.redraw()
            },
            __onRemoveConnection: function(e) {
                e && e.view.clear()
            },
            __onChangeId: function(e, t) {
                this.dcontent.el.id = t;
                for (var n = this.dcontent.children, i = n.length; i > 0; ) {
                    var o = n[--i].el;
                    -1 == o.className.indexOf("tk_tail") && -1 == o.className.indexOf("tk_image_container") || (o.id = o.id.gsub(e.toString(), t.toString()))
                }
            },
            buildFromModel: function() {
                for (var e = this.node.children, t = 0; t < e.length; t++) {
                    var n = new s.default(e[t]);
                    e[t]._listener = n,
                    this.__onAddChild(n, e[t].parent.rank(e[t]), !0),
                    n.buildFromModel()
                }
            },
            setLoadingOnDrop: function() {
                var e = this.node.id + "_loading";
                if (!mm$(e)) {
                    var t = new Element("div",{
                        id: e,
                        class: "tk_tail p-r"
                    });
                    t.appendChild(MM.ui.LoadingSpinner(12)),
                    this._appendPropertyIcon(t),
                    this.refreshLayout(),
                    this.node.isRootC() && this.rc.redrawRootLine()
                }
            },
            removeLoadingFromDrop: function() {
                var e = mm$(this.node.id + "_loading");
                e && (this.dcontent.removeChild({
                    el: e
                }),
                this.refreshLayout(),
                this.node.isRootC() && this.rc.redrawRootLine())
            },
            getTextPosition: function() {
                var e = canvas.getElementOffset(this.dcontent.el);
                return e[0] += this.node.icons.length * (Icon.default_width + 4),
                this.image && (e[1] += this.image.dcontainer.el.clientHeight),
                this.video && (e[1] += this.video.el.clientHeight),
                e
            },
            getGhostPosition: function(e, t, n) {
                var i, o, s = [0, 0], a = [Math.round(App.GHOST_SIZE[0]), Math.round(App.GHOST_SIZE[1])];
                if (this.node.hasChildren())
                    if (i = [0, 0],
                    t) {
                        var r = canvas.getCenter();
                        t[1] > 0 && (s[1] = -56),
                        n ? (i = Math.offset(t, canvas.getNodeCanvasOffset(n)),
                        i[0] > r[0] ? s[0] = -136 : i[0] += n.dcontent.size()[0] - a[0] - 21,
                        canvas._dropPosition = Math.offset(n.node.pos, t)) : (i = Math.offset(r, t),
                        t[0] > 0 ? s[0] = -136 : i[0] -= a[0] + 21,
                        canvas._dropPosition = t)
                    } else if (this.rc.orientation === App.Layouts.orientation.left ? i[0] = canvas.getElementOffset(this.dchildren.el)[0] + this.dchildren.size()[0] - a[0] - this.dopener.el.clientWidth : (s[0] = -136,
                    i[0] = canvas.getElementOffset(this.dchildren.el)[0],
                    "org_chart" !== App.config.layout.name && (i[0] -= this.dopener.el.clientWidth / 2)),
                    0 === e)
                        o = this.children[0],
                        i[1] = canvas.getNodeCanvasOffset(o)[1] - (o.dcontent.size()[1] + a[1] / 2) / 2;
                    else if (e == this.children.length) {
                        s[1] = -56,
                        o = this.children[this.children.length - 1];
                        var l = o.dcontainer.size()[1] + o.dcontent.size()[1] - o.dcontent.pos[1] - a[1];
                        "org_chart" !== App.config.layout.name && (l /= 2),
                        i[1] = canvas.getNodeCanvasOffset(o)[1] + l
                    } else {
                        s[1] = -28;
                        var c = this.children[e - 1]
                          , d = this.children[e]
                          , h = canvas.getNodeCanvasOffset(c)
                          , u = canvas.getNodeCanvasOffset(d);
                        i[1] = (h[1] + c.dcontent.size()[1] + u[1] - a[1]) / 2
                    }
                else {
                    var p = this.dcontent.size()
                      , f = this.dcontent.el.offsetWidth - p[0]
                      , g = this.dcontent.el.offsetHeight - p[1];
                    i = canvas.getNodeCanvasOffset(this),
                    this.rc.orientation == App.Layouts.orientation.left ? i[0] -= a[0] + 24 : (s[0] = -136,
                    i[0] += p[0]),
                    i[0] += f / 2,
                    i[1] += p[1] / 2 + g / 2 - a[1]
                }
                return {
                    pos: i,
                    offset: s
                }
            },
            getCentralPosition: function() {
                var e = this.dcontent.el.getBoundingClientRect();
                return {
                    left: e.left + e.width / 2,
                    top: e.top + e.height / 2
                }
            },
            isVisible: function() {
                var e = this.dcontent.el;
                if (!e)
                    return !1;
                var t = e.getBoundingClientRect()
                  , n = document.body.getBoundingClientRect()
                  , i = UI.Registry.viewportOffset;
                return t.left >= i.left && n.right - i.right >= t.right && t.top >= i.top && n.bottom - i.bottom >= t.bottom
            },
            isSelected: function() {
                return this.dcontent && this.dcontent.isSelected && this.dcontent.isSelected()
            },
            isPartiallySelected: function() {
                return this.dcontent && this.dcontent.isPartiallySelected && this.dcontent.isPartiallySelected()
            },
            isEditing: function() {
                return this.dcontent && this.dcontent.isEditing && this.dcontent.isEditing()
            },
            eachChild: function(e, t, n) {
                if (t || e(this),
                !n)
                    for (var i = 0, o = this.children.length; i < o; i++)
                        this.children[i].eachChild(e, t);
                t && e(this)
            },
            eachChildWithCounter: function(e, t, n, i) {
                n || e(this, t);
                for (var o = 0; o < this.children.length; o++)
                    i ? e(this.children[o], o + 1) : this.children[o].eachChildWithCounter(e, o + 1);
                n && e(this, t)
            },
            highlight: function(e, t) {
                if (e) {
                    var n = null;
                    this.node.style && this.node.style.backgroundColor && (n = "#" + this.node.style.backgroundColor),
                    new Effect.Highlight(this.dcontent.el,{
                        startcolor: "#ffffff",
                        endcolor: e || "#cccccc",
                        restorecolor: t ? e : n,
                        duration: .7,
                        afterFinish: function() {
                            !n && this.dcontent && removeStyle(this.dcontent.el, "background-color")
                        }
                        .bind(this)
                    })
                } else
                    this.node.style ? (e = this.node.style.backgroundColor,
                    e ? this.dcontent.el.style.backgroundColor = "#" + e : removeStyle(this.dcontent.el, "background")) : removeStyle(this.dcontent.el, "background")
            },
            blur: function() {
                addClassName(this.dcontent.el, "blured")
            },
            unBlur: function() {
                removeClassName(this.dcontent.el, "blured")
            },
            selectByUser: function(e, t) {
                var n = this
                  , i = e.color || "#cccccc"
                  , o = $("collaborators_for_" + this.node.id);
                o || (o = new Element("div",{
                    id: "collaborators_for_" + this.node.id,
                    className: "tk_author_name_container"
                }),
                this.dcontent.el.appendChild(o)),
                this.dcontent.el.addClassName("user_selected"),
                this.dcontent.el.style.borderColor = i;
                var s = $("node_" + this.node.id + "_selected_by_" + e.id);
                s ? show(s) : (s = new Element("div",{
                    id: "node_" + this.node.id + "_selected_by_" + e.id,
                    className: "tk_author_name",
                    style: "display: none; background-color: " + i
                }),
                o.appendChild(s),
                o.setStyle({
                    left: "0",
                    bottom: "100%"
                }),
                new Effect.Appear(s,{
                    duration: .7,
                    afterFinish: function() {
                        t && n.unSelectByUser(e)
                    }
                })),
                s.innerHTML !== e.displayname && (s.innerHTML = e.displayname)
            },
            unSelectByUser: function(e) {
                var t = mm$("node_" + this.node.id + "_selected_by_" + e.id);
                this.node.style && this.node.style.borderColor ? this.dcontent.el.style.borderColor = "#" + this.node.style.borderColor : (removeStyle(this.dcontent.el, "border-color"),
                this.dcontent.el.removeClassName("user_selected")),
                t && hide(t)
            },
            distanceFromCenter: function() {
                var e = canvas.root.getCenter()
                  , t = this.dcontent.el.cumulativeOffset()
                  , n = new Point(e[0],e[1])
                  , i = new Point(t[0],t[1]);
                return new d.Line(n,i).length()
            }
        });
        t.default = h
    },
    "W/Il": function(e, t) {
        function n(e, t, n) {
            switch (n.length) {
            case 0:
                return e.call(t);
            case 1:
                return e.call(t, n[0]);
            case 2:
                return e.call(t, n[0], n[1]);
            case 3:
                return e.call(t, n[0], n[1], n[2])
            }
            return e.apply(t, n)
        }
        e.exports = n
    },
    WGdr: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("BLbw")
              , s = n("jS0c")
              , a = n("SZxL")
              , r = n("QHRq")
              , l = {
                init: function() {
                    this.el = $("map_header"),
                    Element.bindOnClick("btn_add", function() {
                        canvas.onAdd()
                    }),
                    Element.bindOnClick("btn_remove", function() {
                        canvas.onRemove()
                    }),
                    Element.bindOnClick("btn_undo", function() {
                        canvas.onUndo()
                    }),
                    Element.bindOnClick("btn_redo", function() {
                        canvas.onRedo()
                    }),
                    Element.bindOnClick("btn_connect", function() {
                        canvas.onAddConnection()
                    }),
                    r.default.init("fld_filter", {
                        onBlur: canvas.addFocus.bind(canvas)
                    }),
                    MM.ui.ToolTips.touchSafe({
                        el: this.el
                    }),
                    this.viewportSpace = {
                        top: this.el.getHeight()
                    },
                    UI.Registry.add(this),
                    UI.Registry.notify(this, "show"),
                    this._renderMapPropertiesPopover(),
                    App.subscribe(CustomEvents.THEME_CHANGED, this._renderMapPropertiesPopover),
                    ServerData.isLoggedIn && document.body.clientWidth >= 680 && (App.mapsPopover = new a.c("maps",{
                        onShow: function() {
                            e.render(i.createElement(o.a, null), App.mapsPopover.widgetContainer)
                        },
                        onHide: function() {
                            e.unmountComponentAtNode(App.mapsPopover.widgetContainer)
                        }
                    }))
                },
                changeLayout: function(e) {
                    e !== App.config.layout && (App.showMapLoading(),
                    setTimeout(function() {
                        tree.changeLayout(e),
                        App.hideMapLoading(),
                        this._renderMapPropertiesPopover()
                    }
                    .bind(this), 100))
                },
                _renderMapPropertiesPopover: function() {
                    e.render(i.createElement(s.a, {
                        user: users.selfUser,
                        mapId: App.config.map_id,
                        viewMode: App.config.viewMode,
                        viewOnly: !App.config.editable,
                        isExternal: App.config.is_external,
                        layouts: App.Layouts.getAll(),
                        currentLayout: App.config.layout,
                        teamTemplates: MapTheme.team(),
                        templates: MapTheme.templates
                    }), mm$("properties-container"))
                },
                show: function(e) {
                    CSS.set(this.el, {
                        top: "0px",
                        transitionDuration: e ? "500ms" : "0ms"
                    }),
                    UI.Registry.notify(this, "show")
                },
                hide: function(e) {
                    CSS.set(this.el, {
                        top: -this.el.offsetHeight + "px",
                        transitionDuration: e ? "500ms" : "0ms"
                    }),
                    UI.Registry.notify(this, "hide")
                },
                toEditMode: function() {
                    MM.ui.enableButton("btn_add", "btn_remove", "btn_connect"),
                    App.config.shareMode != App.MULTI && MM.ui.enableButton("btn_undo", "btn_redo")
                },
                toViewMode: function() {
                    MM.ui.disableButton("btn_add", "btn_remove", "btn_connect", "btn_undo", "btn_redo"),
                    MM.ui.disableButton("btn_undo", "btn_redo")
                }
            };
            t.default = l
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    Wp5U: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("Vw2l")
          , o = n("cQwG")
          , s = n("rX76")
          , a = n("/dW8")
          , r = Class.create(i.default, {
            pcenter: null,
            initialize: function(e) {
                this.children = [],
                this.node = e,
                this.icons = [],
                mapView.root = this,
                this.dcontent = new o.default("tk_label root"),
                this.dcontent.el.id = e.id,
                this.dcontent.el._listener = this,
                this.dcontent.setTitle(),
                App.config.editable && App.config.currentlyEditable && this.initEditMode(),
                this.__onSetStyle(!0),
                this.node.icons.length > 0 && this.__onSetIcon(!0),
                this.node.note && this.__onSetProperty("note", !0),
                this.node.link && this.__onSetProperty("link", !0),
                this.node.attachments.length > 0 && this.__onSetProperty("attachments", !0),
                this.node.task && this.__onSetProperty("task", !0),
                this.node.comments.length > 0 && this.__onSetProperty("comments", !0),
                this.node.idea_image && this.__onSetProperty("image", !0),
                this.node.idea_video && this.__onSetProperty("video", !0)
            },
            initEditMode: function() {
                this.dcontent.enabled || (this.dcontent.makeSelectable(),
                this.dcontent.makeEditable(),
                this.dcontent.toInactive(),
                this.dcontent.makeResizable(),
                this.dcontent.enableResizing())
            },
            initViewOnlyMode: function() {
                this.dcontent.toInactive && this.dcontent.toInactive(),
                this.dcontent.disableSelecting && this.dcontent.disableSelecting(),
                this.dcontent.disableResizing && this.dcontent.disableResizing(),
                this.dcontent.el.style.cursor = "default"
            },
            refreshLayout: function() {
                if (App.config.layout.autoAlign)
                    for (var e = 0, t = canvas.root.children.length; e < t; e++) {
                        var n = canvas.root.children[e];
                        n.rc.redrawRootLine(),
                        n.rc.redrawLines()
                    }
            },
            translateChildNodes: function(e, t) {
                if (App.config.layout.autoAlign)
                    for (var n = 0, i = canvas.root.children.length; n < i; n++) {
                        var o = canvas.root.children[n];
                        o.rc.redrawRootLine(),
                        o.rc.orientation !== t && t || (o.rc.translateBoundaries({
                            x: e.x,
                            y: e.y
                        }),
                        o.rc.graphics.childrenPath.translate(e.x, e.y))
                    }
            },
            findAffected: function(e) {
                if (this.dcontent.contains(e))
                    return this.dcontent.el;
                for (var t = null, n = 0, i = this.children.length; n < i; n++) {
                    var o = e;
                    if (App.config.layout.autoAlign && (o = Math.negativeOffset(e, canvas.getElementOffset(this.children[n].dcontainer.el.parentNode))),
                    t = this.children[n].findAffected(o))
                        break
                }
                return t
            },
            select: function(e, t, n, i, o) {
                App.config.editable && App.config.currentlyEditable && this.dcontent && (canvas._rememberedDepth = t,
                this.dcontent.toSelected(e, n, i, o))
            },
            reposition: function(e) {
                var t = this.dcontent
                  , n = App.config.layout;
                if (n.autoAlign) {
                    var i = App.Layouts.get(n.id)
                      , o = $("tk_map")
                      , s = canvas.getCenter()
                      , a = $("tk_rootcontainer")
                      , r = [a.offsetLeft + a.clientWidth / 2, a.offsetTop + a.clientHeight / 2]
                      , l = Math.max(s[0] - r[0], 0);
                    i === App.Layouts.LeftAligned && "phantomjs" !== App.config.environment ? o.style.right = "calc(100% - " + (o.getWidth() + l) + "px)" : o.style.left = l + "px",
                    o.style.top = s[1] - r[1] + "px",
                    this.pcenter = s,
                    tree.notPainted || e || this.children.each(function(e) {
                        e.rc.redrawLines()
                    })
                } else
                    t.move([parseInt(canvas.size[0] / 2 - t.el.offsetWidth / 2), parseInt(canvas.size[1] / 2 - t.el.offsetHeight / 2)]),
                    t.doMove(),
                    this.pcenter = [parseInt(t.pos[0] + t.size()[0] / 2), parseInt(t.pos[1] + t.size()[1] / 2)];
                this.redrawBoundaries()
            },
            getCenter: function() {
                var e = this.dcontent.el
                  , t = canvas.getNodeCanvasOffset(this);
                return [t[0] + parseInt(e.clientWidth / 2), t[1] + parseInt(e.clientHeight / 2)]
            },
            paint: function() {
                App.config.layout.paintRoot();
                var e = this.children.clone();
                e.sort(function(e, t) {
                    return e.node.pos && t.node.pos ? e.node.pos[1] - t.node.pos[1] : 0
                });
                for (var t = 0, n = e.length; t < n; t++)
                    e[t].rc.paint(!0);
                if (App.config.layout.autoAlign) {
                    this.reposition(!0);
                    for (var t = 0, n = e.length; t < n; t++)
                        e[t].rc.redrawLines()
                }
            },
            makeVisible: function() {
                return !0
            },
            redrawBoundaries: function() {
                this.__onAddBoundary()
            },
            __onAddBoundary: function() {
                this.node.boundary && this.node.boundary.view.redraw()
            },
            __onRemoveBoundary: function() {
                this.node.boundary && this.node.boundary.view.destroy()
            },
            __onAddChild: function(e, t, n, i, o, a) {
                var r = new s.default(e);
                return e.setRc(r),
                this.children.push(e),
                e.parent = this,
                removeClassName(e.dcontent.el, "node"),
                addClassName(e.dcontent.el, "root_child"),
                !!n || (a && (e.isTemporarilyRemoved = !1),
                !!r.paint() && (i && void 0 !== App.ui.Users && App.ui.Users && (o && o.moveClone ? App.ui.Users.highlightMovement(e, i, o.moveClone) : App.ui.Users.highlightNode(e, i)),
                !0))
            },
            __onRemoveChild: function(e, t, n) {
                if (canvas.isSelected(e) && "definitive" === n) {
                    (e.node.getPrevSibling() || e.node.getNextSibling() || this.node)._listener.select(null, null, !0, !0)
                }
                e.dcontainer.el.parentNode && (e.dcontainer.el.parentNode.removeChild(e.dcontainer.el),
                App.config.layout.autoAlign && canvas.root.reposition()),
                e.rc.destroyLines();
                for (var i = 0, o = e.node.connections.length; i < o; i++)
                    e.__onRemoveConnection(e.node.connections[i]);
                this.children = this.children.reject(function(t) {
                    return t === e
                }),
                rectangleLayouter.update(this.node)
            },
            _refreshRootCAngles: function() {
                for (var e = 0, t = this.children.length; e < t; e++) {
                    var n = this.children[e];
                    if (!n.rc.vnode.node.pos)
                        return;
                    n.rc.angle = Math.slopeAngle(n.rc.vnode.node.pos)
                }
                this.children.sort(function(e, t) {
                    return e.node.pos[1] - t.node.pos[1]
                })
            },
            _childCloserToAngle: function(e, t, n, i) {
                return Math.abs(e.rc.angle - n) < (i ? Math.abs(t.rc.angle - i) : Math.abs(t.rc.angle - n)) ? e : t
            },
            getChildAtAngle: function(e) {
                var t = null;
                if (0 == this.children.length)
                    return null;
                var n = this.children.sortBy(function(e) {
                    return e.rc.angle
                });
                if (e < n.first().rc.angle)
                    return this._childCloserToAngle(n.first(), n.last(), e, e + 360);
                if (e > n.last().rc.angle)
                    return this._childCloserToAngle(n.first(), n.last(), e + 360, e);
                for (var i = 0, o = n.length; i < o; i++)
                    if (e < n[i].rc.angle) {
                        var s = n[i - 1];
                        t = this._childCloserToAngle(n[i], s, e);
                        break
                    }
                return t
            },
            getLeftChildren: function() {
                return this.children.filter(function(e) {
                    return e.rc.orientation == App.Layouts.orientation.left
                })
            },
            getRightChildren: function() {
                return this.children.filter(function(e) {
                    return e.rc.orientation == App.Layouts.orientation.right
                })
            },
            getNextSibling: function(e) {
                if (null === e.node.pos)
                    return null;
                if (App.config.layout.rootChildrenPosition) {
                    var t = this.children.filter(function(t) {
                        return t.rc.orientation === e.rc.orientation && t !== e && t.node.pos[1] > e.node.pos[1]
                    });
                    return t.sort(function(t, n) {
                        return t.node.pos[1] - e.node.pos[1] - (n.node.pos[1] - e.node.pos[1])
                    }),
                    t.length > 0 ? t[0].node : null
                }
                var n = e.rc.vnode.dcontainer.el.nextSibling;
                return n ? tree.root.getChild(parseInt(n.id.replace("tk_container_", ""))) : null
            },
            getPrevSibling: function(e) {
                if (null === e.node.pos)
                    return null;
                if (App.config.layout.rootChildrenPosition) {
                    var t = this.children.filter(function(t) {
                        return t.rc.orientation === e.rc.orientation && t !== e && t.node.pos[1] < e.node.pos[1]
                    });
                    return t.sort(function(t, n) {
                        return e.node.pos[1] - t.node.pos[1] - (e.node.pos[1] - n.node.pos[1])
                    }),
                    t.length > 0 ? t[0].node : null
                }
                var n = e.rc.vnode.dcontainer.el.previousSibling;
                return n ? tree.root.getChild(parseInt(n.id.replace("tk_container_", ""))) : null
            },
            getSize: function() {
                return this.dcontent.size()
            },
            destroy: function() {
                if (this.children) {
                    for (var e = 0, t = this.children.length; e < t; e++)
                        this.children[e].rc.destroy(),
                        this.children[e].destroy(),
                        this.children[e] = null;
                    this.children = null,
                    this.dcontent.destroy(),
                    this.dcontent = null,
                    this.node = null,
                    a.default.all.each(function(e) {
                        e.view.destroy()
                    })
                }
            }
        });
        t.default = r
    },
    Xxf7: function(e, t) {
        function n(e) {
            return function(t) {
                return null == e ? void 0 : e[t]
            }
        }
        e.exports = n
    },
    "YQ4/": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("A9ap")
          , o = Class.create(i.default, {
            initialize: function($super, e, t) {
                $super("styles", e, t),
                Element.bindOnClick("btn_remove_style", this.setValue.bind(this)),
                Element.bindOnClick("btn_customize_style", this.showDialog)
            },
            load: function($super) {
                this.list = this.el.select("grid")[0],
                this.list.innerHTML = "",
                this.styles = [],
                App.config.mapTheme.styles.concat(Style.teamStyles).each(function(e) {
                    this.addStyle(e)
                }
                .bind(this)),
                $super()
            },
            addStyle: function(e) {
                this.styles.push(e);
                var t = new Element("span",{
                    href: "#",
                    className: "tk_label"
                }).update("Abc");
                Style.applyToElement(e, t);
                var n = new Element("a",{
                    id: "style_" + e.id,
                    href: "#",
                    className: "tooltip item"
                }).setStyle({
                    backgroundColor: "#" + App.config.mapTheme.background.color
                }).insert(t);
                n.observe("click", this.setValue.bindAsEventListener(this, e)),
                e.name && (n.title = e.name),
                this.list.insert(new Element("cell",{
                    className: "topic-preview"
                }).insert(n))
            },
            setValue: function(e, t) {
                if (Event.stop(e),
                t) {
                    var n = canvas.allSelected
                      , i = n.filter(function(e) {
                        var n = e.node;
                        return n.style && n.style.equals(t)
                    });
                    n.length === i.length && (t = null)
                }
                canvas.onSetFullStyle(t),
                this._setSelected(t)
            },
            _setSelected: function(e) {
                if (this.list.select(".selected").invoke("removeClassName", "selected"),
                e) {
                    var t = mm$("style_" + e.id);
                    t && addClassName(t, "selected")
                }
            },
            showDialog: function() {
                MM.ui.dialogs.dialogCustomizeTopic({
                    themeId: App.config.mapTheme.id
                })
            },
            onSelectNode: function() {
                if (this.list.select(".selected").invoke("removeClassName", "selected"),
                canvas.selected && canvas.selected.node.style) {
                    var e = this.styles.find(function(e) {
                        return e.equals(canvas.selected.node.style)
                    });
                    e && mm$("style_" + e.id) && addClassName(mm$("style_" + e.id), "selected")
                }
            }
        });
        t.default = o
    },
    Z6lC: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            initialize: function(e) {
                this.options = e || {}
            },
            query: function(e, t) {
                this.callback = t.onComplete,
                this.queryText = e,
                this.queryGroup = t.hasOwnProperty("group_id") ? t.group_id : this.queryGroup,
                this.doSearch(t)
            },
            nextPage: function(e) {
                this.doSearch({
                    page: e
                })
            },
            doSearch: function(e) {
                this.queryGroup && (e = Object.extend({
                    group_id: this.queryGroup
                }, e)),
                this.queryText.empty() ? this.doSearchAll(e) : this.doTextSearch(e)
            },
            doTextSearch: function(e) {
                e = Object.extend({
                    query: this.queryText
                }, e),
                new Ajax.Request("/skoletube/" + (this.queryGroup ? "group" : "user") + "_" + this.options.type + "_search",{
                    method: "GET",
                    asynchronous: !0,
                    parameters: e,
                    onSuccess: this.onSearchComplete.bind(this),
                    onFailure: this.onSearchError.bind(this),
                    onException: this.onSearchError.bind(this),
                    onTimeout: this.onSearchError.bind(this)
                })
            },
            doSearchAll: function(e) {
                new Ajax.Request("/skoletube/" + (this.queryGroup ? "group" : "user") + "_" + this.options.type,{
                    method: "GET",
                    asynchronous: !0,
                    parameters: e,
                    onSuccess: this.onSearchComplete.bind(this),
                    onFailure: this.onSearchError.bind(this),
                    onException: this.onSearchError.bind(this),
                    onTimeout: this.onSearchError.bind(this)
                })
            },
            onSearchComplete: function(e) {
                var t = e.responseJSON;
                if (t.error)
                    "Authentication required" === t.error ? MM.ui.dialogs.dialogSkoletubeLogin(this.options.type) : this.onSearchError();
                else if (this.callback) {
                    if (t.media)
                        var n = this.transformResults ? this.transformResults(t.media) : t.media;
                    else
                        var n = [];
                    this.callback(n, t.total_pages, t.current_page)
                }
            },
            onSearchError: function() {
                MM.ui.dialogs.showError(I18n.t("js.s_could_not_be_contacted", {
                    v0: "Skoletube"
                }))
            }
        });
        t.default = i
    },
    ZfKP: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            id: null,
            user: null,
            text: null,
            createdAt: null,
            updatedAt: null,
            initialize: function(e) {
                e && (this.id = e.id || e.idea_comment_id,
                this.user = users.findByID(e.user_id, !0),
                this.text = e.text,
                this.createdAt = e.created_at ? new Date(e.created_at) : new Date,
                this.updatedAt = e.updated_at ? new Date(e.updated_at) : new Date,
                this.read = App.config.previousVisit > this.createdAt,
                i.all.push(this))
            },
            update: function(e) {
                this.text = e,
                this.updatedAt = new Date
            },
            equals: function(e) {
                return this.id === e.id
            },
            isUnsaved: function() {
                return this.id <= 0
            },
            isEdited: function() {
                return this.updatedAt - this.createdAt > 0
            },
            toJSON: function() {
                return {
                    id: this.id,
                    user_id: this.user.id,
                    text: this.text,
                    createdAt: this.createdAt,
                    updatedAt: this.updatedAt
                }
            },
            getElement: function() {
                return this.el || (this.el = new Element("div",{
                    class: "comment"
                }).update(this.text)),
                this.el
            }
        });
        i.all = [],
        i.get = function(e) {
            for (var t = i.all.length; t > 0; )
                if (i.all[--t].id === e)
                    return i.all[t];
            return null
        }
        ,
        i.sort = function(e) {
            return e.sort(function(e, t) {
                return e.createdAt - t.createdAt
            })
        }
        ,
        i.getUnread = function(e) {
            if (!users.selfUser)
                return [];
            for (var t = e.length, n = []; t > 0; ) {
                var i = e[--t];
                i.user.id === users.selfUser.id || i.read || n.push(i)
            }
            return n
        }
        ,
        i.uncommitedId = 0,
        t.default = i
    },
    "ZjT+": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("MAG5")
              , s = n.n(o)
              , a = n("A9ap")
              , r = n("worM")
              , l = n("aVfQ")
              , c = n("+ptD")
              , d = n("FN6h")
              , h = n("h7V/")
              , u = n("SZxL")
              , p = Class.create(a.default, {
                recentImages: [],
                searchers: ["url", "google", "iconfinder"],
                initialize: function($super, e, t) {
                    $super("images", e, t)
                },
                load: function($super) {
                    Element.bindOnClick("btn_remove_image", this.removeImage.bindAsEventListener(this)),
                    Element.bindOnClick("btn_auto_image", this.setAutoImage.bind(this)),
                    $("btn_add_image").update(I18n.t("js.add_image")),
                    this.recentImages = MM.utils.getCookie("recentImages") ? MM.utils.getCookie("recentImages").split(",").concat(this.recentImages).slice(0, 6) : [],
                    0 == IdeaImage.default_images.length && IdeaImage.initDefault(),
                    this.defaultImages = c.default.getElements(IdeaImage.default_images, {
                        idPrefix: "image_",
                        containerClassName: "item recent",
                        width: 28,
                        height: 28
                    }),
                    this.recentImages.length <= 0 && (this.recentImages = this.defaultImages.slice(0, 6)),
                    ServerData.isLoggedIn && ServerData.user.unilogin && this.searchers.push("skoletube"),
                    this.buildRecentImages(),
                    this.buildPopover(),
                    this.uploadBtn = mm$("btn_upload_local_img"),
                    this.uploadBtn.observe("change", this.onLocalFileChosen.bind(this)),
                    $super()
                },
                buildRecentImages: function() {
                    this.list = mm$("recent_images"),
                    this.list.select(".recent").each(function(e) {
                        e.remove()
                    }),
                    this.recentImages.each(function(e) {
                        var t = new Element("cell");
                        t.insert(e),
                        t.observe("click", this.setDefaultImage.bindAsEventListener(this, e.id)),
                        this.list.insert(t)
                    }
                    .bind(this))
                },
                save: function(e, t) {},
                buildPopover: function() {
                    this.imagePopover = new u.c("add_image",{
                        offset: [0, -5]
                    });
                    var t = [{
                        label: I18n.t("js.upload_new_image"),
                        onClick: this.dialogUploadImage.bind(this)
                    }, {
                        label: I18n.t("js.use_an_image_from_the_web"),
                        onClick: this.dialogWebImage.bind(this)
                    }, {
                        label: I18n.t("js.draw_image"),
                        onClick: this.dialogDrawImage.bind(this)
                    }];
                    App.config.anonymousUser || t.push({
                        label: I18n.t("js.browse_image_library"),
                        onClick: this.dialogImageLibrary.bind(this)
                    }),
                    e.render(i.createElement(r.a, {
                        items: t
                    }), this.imagePopover.widgetContainer)
                },
                setDefaultImage: function(e, t) {
                    if (e.stop(),
                    !canvas.selected)
                        return void Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE);
                    var n = parseInt(t.split("_")[1])
                      , i = IdeaImage.get(n);
                    if (!i)
                        return void Message.show(I18n.t("js.image_could_not_be_found"), Message.NOTICE);
                    this.uploadImage(i)
                },
                onLocalFileChosen: function(e) {
                    e.stop();
                    var t = this.uploadBtn.files[0];
                    t && (MM.utils.File.uploadImageFile(this._getSelectedTopics(), t, {
                        onProgress: this.onImageUpload.bind(this),
                        successCallback: function(e, t) {
                            Tree.utils.setImage(new IdeaImage(e), t)
                        }
                    }),
                    mm$("frm_upload_local_img") && mm$("frm_upload_local_img").reset())
                },
                dialogUploadImage: function() {
                    if (!App.hasFeature("attachments"))
                        return void MM.ui.dialogs.dialogUpgrade("map_attachments");
                    this.uploadBtn.click()
                },
                dialogWebImage: function() {
                    if (!canvas.selected)
                        return void Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE);
                    canvas.removeFocus(),
                    this.selectedImage = null,
                    this.googleSearch = null,
                    this.iconFinderSearch = null,
                    ServerData.isLoggedIn && ServerData.user.unilogin && (this.skoletubeSearch = null),
                    MM.ui.dialogs.show("image_web", {
                        dlg_name: "image_web",
                        action: "image_web_ajax/" + App.config.map_id,
                        param: "idea_id=" + canvas.selected.node.id,
                        width: 710,
                        keymap: new MM.utils.KeyMap(document,"image_web_keymap",[]),
                        onComplete: this.onDialogWebImageShow.bind(this),
                        onClose: function() {
                            this.selectedImage = null,
                            this.linkImageUrl = null,
                            ServerData.isLoggedIn && ServerData.user.unilogin && MM.external.Skoletube.Groups && MM.external.Skoletube.Groups.destroy()
                        }
                        .bind(this)
                    })
                },
                dialogDrawImage: function(e) {
                    var t = this;
                    return App.hasFeature("attachments") ? canvas.selected ? (canvas.removeFocus(),
                    void MM.ui.dialogs.show("image_draw", {
                        dlg_name: "image_draw",
                        width: 550,
                        noHelp: !0,
                        onComplete: function() {
                            n.e(151).then(n.bind(null, "rg7Z")).then(function(n) {
                                t.doodling = n.default,
                                t.doodling.init(300, 300, "000000", e ? canvas.selected.node.idea_image : null)
                            })
                        },
                        onClose: function() {
                            t.doodling && (t.doodling.destroy(),
                            t.doodling = null)
                        }
                    })) : void Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE) : void MM.ui.dialogs.dialogUpgrade("map_attachments")
                },
                dialogImageLibrary: function() {
                    canvas.removeFocus(),
                    IdeaImage.user_images = [],
                    MM.ui.dialogs.show("image_library", {
                        dlg_name: "image_library",
                        height: 380,
                        width: 676
                    })
                },
                onDialogWebImageShow: function() {
                    var e = this;
                    h.a.get("image_searcher", function(t) {
                        var n = t && e.searchers.indexOf(t.value) >= 0 ? t.value : null;
                        e._renderSourceDropdown(n),
                        mm$("idea_image_url").onkeyup = e.previewImage.bind(e),
                        mm$("set_image_button").onclick = function() {
                            return e.addImage(),
                            !1
                        }
                    })
                },
                _renderSourceDropdown: function(t) {
                    e.render(i.createElement(d.a, {
                        sources: this.searchers,
                        selectedSource: t || "google",
                        onChange: this.setImageType.bind(this)
                    }), mm$("btn-source-container"))
                },
                onSkoletubeLogin: function() {
                    MM.external.Skoletube.Groups && MM.external.Skoletube.Groups.load("images", this.searchSkoletube.bind(this))
                },
                onCancelSkoletubeLogin: function() {
                    MM.ui.dialogs.close("skoletubelogin"),
                    this._renderSourceDropdown("iconfinder")
                },
                setImageType: function(e) {
                    var t = this
                      , i = e.value;
                    if (!canvas.selected)
                        return void this.showInvalidImage(I18n.t("js.please_select_an_idea_first"));
                    if (hide(mm$("img_copyright")),
                    this.searchers.indexOf(i) > -1) {
                        switch (this.searchers.without(i).each(function(e) {
                            hide(mm$(e + "_search")),
                            hide(mm$(e + "_imgs"))
                        }),
                        show(mm$(i + "_search")),
                        show(mm$(i + "_imgs")),
                        this.selectedImage = null,
                        MM.ui.dialogs.hideError(),
                        i) {
                        case "google":
                            this.searchGoogle();
                            break;
                        case "iconfinder":
                            this.searchIconFinder();
                            break;
                        case "skoletube":
                            n.e(52).then(n.bind(null, "TMGa")).then(function() {
                                return MM.external.Skoletube.Groups.load("images", t.searchSkoletube.bind(t))
                            });
                            break;
                        case "url":
                            $("preview_image").select("img")[0] && (this.selectedImage = IdeaImage.createDummy($("preview_image").select("img")[0].src))
                        }
                        h.a.save({
                            name: "image_searcher",
                            value: i
                        })
                    }
                },
                previewImage: function() {
                    var e = mm$("idea_image_url").value;
                    if (e !== this.linkImageUrl) {
                        this.linkImageUrl = e;
                        var t = mm$("preview_image")
                          , n = t.select(".preview")[0]
                          , i = t.select(".loading-spinner-48")[0]
                          , o = t.select("img")[0];
                        o || (o = new Element("img",{
                            class: "maxw-225px h-a-center",
                            alt: I18n.t("js.image_unavailable")
                        }),
                        t.appendChild(o)),
                        hide(n),
                        hide(o),
                        i || (i = MM.ui.LoadingSpinner(48),
                        t.appendChild(i)),
                        o.onload = function() {
                            i.remove(),
                            show(o),
                            this.selectedImage = IdeaImage.createDummy(this.linkImageUrl)
                        }
                        .bind(this),
                        o.onerror = function() {
                            i.remove(),
                            this.selectedImage = null,
                            hide(o),
                            show(n),
                            n.select("cell")[0].innerHTML = I18n.t("js.image_unavailable")
                        }
                        .bind(this),
                        o.src = "/images/download_url?url=" + s()(this.linkImageUrl)
                    }
                },
                initGoogleSearch: function(e) {
                    if (!this.googleSearch) {
                        if (!App.hasFeature("google_cse"))
                            var t = {
                                limitRequests: !0
                            };
                        this.googleSearch = new l.default({
                            element: mm$("gsc_field"),
                            searcher: "google",
                            searcherOpts: t,
                            onSearch: function() {
                                this.selectedImage = null
                            }
                            .bind(this)
                        }),
                        e || (this.googleSearch.options.element.value = canvas.selected.node.getSingleLineTitle())
                    }
                },
                searchGoogle: function() {
                    this.initGoogleSearch(),
                    this.googleSearch.search.options.disablePages = !1,
                    this.googleSearch.ui = !0,
                    this.googleSearch.query(this.googleSearch.options.element.value)
                },
                autoSearchGoogle: function(e) {
                    this.initGoogleSearch(!0),
                    this.googleSearch.search.options.disablePages = !0,
                    this.googleSearch.ui = !1;
                    var t = this.doSetAutoImage.bind(this, e);
                    this.googleSearch.query(e.getSingleLineTitle(), {
                        onComplete: t,
                        onError: t
                    })
                },
                searchIconFinder: function() {
                    this.iconFinderSearch || (this.iconFinderSearch = new l.default({
                        element: mm$("icf_field"),
                        searcher: "iconfinder",
                        onSearch: function() {
                            this.selectedImage = null
                        }
                        .bind(this)
                    }),
                    this.iconFinderSearch.options.element.value = canvas.selected.node.getSingleLineTitle()),
                    this.iconFinderSearch.query(this.iconFinderSearch.options.element.value)
                },
                searchSkoletube: function(e) {
                    this.skoletubeSearch || (this.skoletubeSearch = new l.default({
                        element: mm$("skoletube_field"),
                        searcher: "skoletube",
                        caching: !1,
                        onSearch: function() {
                            this.selectedImage = null
                        }
                        .bind(this)
                    }),
                    this.skoletubeSearch.options.element.value = canvas.selected.node.getSingleLineTitle()),
                    this.skoletubeSearch.query(this.skoletubeSearch.options.element.value, {
                        group_id: e.toString()
                    })
                },
                onSelectLibEl: function(e) {
                    for (var t = e.select("img")[0], n = getDataSet(t, "url") || t.src, i = $$(".imgpanel .grid .selected"), o = 0, s = i.length; o < s; o++)
                        removeClassName(i[o], "selected");
                    return addClassName(e, "selected"),
                    n
                },
                onSelectImage: function(e, t, n) {
                    e.stop();
                    var i = parseInt(t.id.split("_")[1])
                      , o = this.onSelectLibEl(t);
                    n ? (IdeaImage.useSecureLink() && o.include("download_url?url=") && (o = o.split("download_url?url=")[1]),
                    this.selectedImage = IdeaImage.createDummy(o)) : this.selectedImage = IdeaImage.get(i),
                    c.default.checkLicense(t)
                },
                onDblClickImage: function(e, t, n) {
                    e.stop(),
                    this.googleSearch && (this.googleSearch.search.options.disablePages = !0);
                    var i = parseInt(t.id.split("_")[1])
                      , o = this.onSelectLibEl(t);
                    n ? (IdeaImage.useSecureLink() && o.include("download_url?url=") && (o = o.split("download_url?url=")[1]),
                    this.selectedImage = IdeaImage.createDummy(o)) : this.selectedImage = IdeaImage.get(i),
                    this.addImage()
                },
                imageLibraryTab: function(e, t) {
                    for (var n = mm$(t + "_container"), i = 0, o = e.length; i < o; i++) {
                        var s = e[i];
                        s = IdeaImage.get(s.id) || new IdeaImage(s);
                        var a = new Element("cell")
                          , r = c.default.getElements([s], {
                            idPrefix: "libimage_",
                            containerClassName: "item rad-3"
                        })[0];
                        r.observe("click", this.onSelectImage.bindAsEventListener(this, r)),
                        r.observe("dblclick", this.onDblClickImage.bindAsEventListener(this, r)),
                        a.appendChild(r),
                        n.appendChild(a)
                    }
                    mm$(t + "_counter").innerHTML = I18n.t("js.images_s", {
                        v0: e.length
                    })
                },
                setImageLibraryContent: function() {
                    this.selectedImage = null,
                    this.imageLibraryTab(IdeaImage.default_images, "default")
                },
                setUserImagesLibrary: function() {
                    this.imageLibraryTab(IdeaImage.user_images, "personal")
                },
                getUserImages: function(e) {
                    var t = {
                        map_id: App.config.map_id
                    };
                    new Ajax.Request("/dialog/user_images",{
                        parameters: t,
                        asynchronous: !0,
                        onSuccess: function(t) {
                            IdeaImage.user_images = t.responseText.evalJSON(),
                            sideBar.images.setUserImagesLibrary(),
                            e && e()
                        }
                    })
                },
                uploadImage: function(e, t) {
                    var n = {};
                    e.id > 0 ? (n.def_image_id = e.id,
                    n.idea_image_url = "") : (n.def_image_id = "",
                    n.idea_image_url = e.download_link);
                    var t = this._getSelectedTopics(t);
                    t.each(function(e) {
                        e._listener.setLoadingOnDrop()
                    }),
                    MM.utils.File.uploadImage(t, n, {
                        successCallback: function(e, t) {
                            Tree.utils.setImage(new IdeaImage(e), t)
                        },
                        errorCallback: this.showInvalidImage.bind(this)
                    })
                },
                onImageUpload: function(e) {
                    this.progressActivity || (this.progressActivity = new MM.ui.Activity(I18n.t("js.uploading"),{
                        progress: !0,
                        autoUpdate: !1
                    })),
                    e > this.progressActivity.progress && (this.progressActivity.update(e),
                    100 === e && setTimeout(function() {
                        this.progressActivity.close(),
                        this.progressActivity = null,
                        canvas.addFocus()
                    }
                    .bind(this), 500))
                },
                addImage: function() {
                    if (!canvas.selected || !this.selectedImage)
                        return void this.showInvalidImage(this.selectedImage ? I18n.t("js.please_select_an_idea_first") : I18n.t("js.no_image_selected"));
                    this.uploadImage(this.selectedImage),
                    Windows.closeAll(),
                    App.trigger(CustomEvents.WEB_IMAGE_ADDED)
                },
                showInvalidImage: function(e) {
                    if (Windows.getWindow("image_library") || Windows.getWindow("image_web")) {
                        var t = mm$("img_copyright");
                        t && hide(t),
                        mm$("library_message").innerHTML = e,
                        new Effect.Appear("library_message",{
                            duration: 2
                        }),
                        setTimeout(function() {
                            mm$("library_message") && Effect.Fade("library_message", {
                                duration: 1
                            })
                        }, 4e3),
                        setTimeout(function() {
                            t && show(t)
                        }, 5e3)
                    } else
                        Message.show(e, Message.ERROR, 5)
                },
                setAutoImage: function() {
                    if (!canvas.selected)
                        return void Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE);
                    Element.addClassName("btn_auto_image", "fx-wiggle fx-infinite fx-none"),
                    App.trigger(CustomEvents.WUNDERBILD_ADDED),
                    this._getSelectedTopics().each(function(e) {
                        var t = p.autoImages[e.id];
                        if (t && 0 !== t.photos.length && t.title === e.getSingleLineTitle()) {
                            for (var n = t.photos, i = n[0], o = 0, s = n.length - 1; o < s; o++)
                                n[o] = n[o + 1];
                            n[n.length - 1] = i,
                            this.doSetAutoImage(e, t.photos)
                        } else
                            this.autoSearchGoogle(e)
                    }
                    .bind(this)),
                    Amplitude.logEvent("wunder_image")
                },
                doSetAutoImage: function(e, t) {
                    if (p.autoImages[e.id] = {
                        title: e.getSingleLineTitle(),
                        photos: t
                    },
                    $("btn_auto_image").removeClassName("fx-wiggle fx-infinite").removeClassName("fx-none"),
                    0 === t.length)
                        return void Message.show(I18n.t("js.no_auto_image_was_found", {
                            v0: e.title
                        }), Message.NOTICE);
                    this.uploadImage(IdeaImage.createDummy(t[0].url), e)
                },
                onSelectNode: function() {},
                editImage: function() {
                    this.dialogDrawImage(!0)
                },
                removeImage: function(e, t) {
                    if (e && e.stop(),
                    t = this._getSelectedTopics(t),
                    0 === t.length)
                        return void Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE);
                    Tree.utils.removeImage(t)
                },
                _getSelectedTopics: function(e) {
                    return e ? Array.isArray(e) ? e : [e] : canvas.getSelectedNodes()
                }
            });
            p.autoImages = {},
            t.default = p
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    aVfQ: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("vLs6")
          , o = n("+ptD")
          , s = n("wvK4")
          , a = n("MQVt")
          , r = Class.create(i.GoogleSearch, {
            initialize: function($super, e) {
                $super(Object.extend({
                    type: "ImageSearch"
                }, e))
            },
            query: function($super, e, t) {
                var n = encodeURIComponent("queries,items") + "(" + encodeURIComponent("link,image") + "(" + encodeURIComponent("contextLink,width,height,thumbnailHeight,thumbnailLink,thumbnailWidth") + "))";
                this.queryText = e,
                $super(e, n, t)
            },
            queryMore: function(e) {
                e = Object.extend({
                    index: this.index
                }, e),
                this.query(this.queryText, e)
            },
            searchComplete: function($super, e, t) {
                e = e.collect(function(e) {
                    return {
                        url: e.link,
                        contextUrl: e.image.contextLink,
                        thumbnailUrl: e.image.thumbnailLink,
                        width: e.image.width,
                        height: e.image.height
                    }
                }),
                $super(e, t)
            }
        })
          , l = Class.create({
            api_key: "645bbd974574d9fb4092f88e4bd5531f",
            initialize: function(e) {
                this.options = e || {}
            },
            query: function(e, t) {
                var n = mm$("iconfinder_script");
                n && document.body.removeChild(n),
                n = document.createElement("script"),
                n.id = "iconfinder_script",
                n.src = document.location.protocol + "//www.iconfinder.com/json/search/?q=" + e + "&c=30&p=0&min=48&max=128&api_key=" + this.api_key + "&callback=sideBar.images.iconFinderSearch.search.searchComplete",
                document.body.appendChild(n),
                this.queryText = e,
                this.callback = t.onComplete
            },
            searchComplete: function(e) {
                var t = e.searchresults.icons;
                this.callback && (e = t ? t.collect(function(e) {
                    return {
                        url: e.image,
                        width: e.size,
                        height: e.size
                    }
                }) : [],
                this.callback(e))
            }
        })
          , c = Class.create(s.default, {
            initialize: function($super, e) {
                switch ($super(e),
                this.options = Object.extend({
                    type: "imgs"
                }, this.options),
                this.options.searcher) {
                case "google":
                    this.search = new r(this.options.searcherOpts);
                    break;
                case "iconfinder":
                    this.search = new l(this.options.searcherOpts);
                    break;
                case "skoletube":
                    this.search = new a.default(this.options.searcherOpts)
                }
            },
            onSearchStarted: function($super) {
                $super();
                var e = this.options.searcher + "_" + this.options.type;
                $(e).select(".no_elements")[0] && ($(e).select(".no_elements")[0].innerHTML = ""),
                mm$(e + "_show_more") && hide(mm$(e + "_show_more"))
            },
            updateItemListInfo: function() {
                var e = this.options.searcher + "_" + this.options.type;
                if (this.ui) {
                    $(e).select(".no_elements")[0] && $(e).select(".no_elements")[0].update(I18n.t("js.images_d", {
                        v0: this.items.length
                    }));
                    var t = $(e + "_show_more");
                    if (t) {
                        var n = t.select(".loading-spinner-12")[0];
                        n && n.remove(),
                        this.items.length < this.search.options.maxResults ? t.onclick = function(e) {
                            e.stop(),
                            this.queryMore(t)
                        }
                        .bind(this) : (t.onclick = null,
                        t.href = "https://www.google.com/images?q=" + this.search.queryText),
                        show(t)
                    }
                }
            },
            insertListElement: function(e, t) {
                o.default.insertIntoLibrary(this.options.searcher, e, t)
            },
            onNoResultsFound: function() {
                if (this.options.handler)
                    this.options.handler([]);
                else if (this.ui) {
                    var e = this.options.searcher + "_" + this.options.type;
                    $(e).select(".no_elements")[0] && $(e).select(".no_elements")[0].update(I18n.t("js.no_images")),
                    addClassName(mm$(e + "_container"), "empty"),
                    mm$(e + "_container").update('<div class="w-100% fs-14">' + I18n.t("js.no_image_was_found") + "</div>")
                }
            }
        });
        t.default = c
    },
    aaAh: function(e, t, n) {
        function i(e, t, n) {
            var i = -1
              , h = s
              , u = e.length
              , p = !0
              , f = []
              , g = f;
            if (n)
                p = !1,
                h = a;
            else if (u >= d) {
                var m = t ? null : l(e);
                if (m)
                    return c(m);
                p = !1,
                h = r,
                g = new o
            } else
                g = t ? [] : f;
            e: for (; ++i < u; ) {
                var v = e[i]
                  , _ = t ? t(v) : v;
                if (v = n || 0 !== v ? v : 0,
                p && _ === _) {
                    for (var y = g.length; y--; )
                        if (g[y] === _)
                            continue e;
                    t && g.push(_),
                    f.push(v)
                } else
                    h(g, _, n) || (g !== f && g.push(_),
                    f.push(v))
            }
            return f
        }
        var o = n("2mhJ")
          , s = n("sfIr")
          , a = n("83D3")
          , r = n("3AGJ")
          , l = n("izUU")
          , c = n("4XN+")
          , d = 200;
        e.exports = i
    },
    ahzF: function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
            value: !0
        });
        var Poller = {
            initialize: function(e) {
                Modernizr.websockets && e ? (console.log("Poller#initialize - trying websockets"),
                MM.utils.loadScript("http://" + document.location.hostname + ":9000/faye/client.js", this.initializeSocket.bind(this)),
                console.log("Poller#initialize - after loadScriptN")) : (this.resetInterval(),
                this.pollHandler = this.poll.bind(this),
                this.schedulePoll())
            },
            initializeSocket: function initializeSocket() {
                console.log("Poller#initialize - Enabling websockets, disabling polling"),
                this.socket = new Faye.Client("http://" + document.location.hostname + ":9000/faye"),
                console.log("Poller#initialize - Subscribing");
                var subscription = this.socket.subscribe("/map/" + tree.root.id, function(message) {
                    eval(message)
                });
                subscription.callback(function() {
                    console.log("Subscription is now active")
                })
            },
            schedulePoll: function() {
                App.config.shareMode === App.MULTI || App.config.linkShare ? this.resetInterval() : "undefined" == typeof Presentation || Presentation.on || this.interval < 20 && (this.interval = 1.1 * this.interval),
                setTimeout(this.pollHandler, 1e3 * this.interval)
            },
            poll: function() {
                ServerConnection.poll(),
                this.socket || this.schedulePoll()
            },
            resetInterval: function() {
                this.interval = App.config.POLL_INTERVAL
            }
        };
        __webpack_exports__.default = Poller
    },
    atk5: function(e, t) {
        function n(e) {
            return e
        }
        e.exports = n
    },
    cQwG: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("2UzH")
          , o = n("2J63")
          , s = n("tCwE")
          , a = n("wQol")
          , r = Class.create({
            el: null,
            pos: null,
            children: null,
            childrenSize: null,
            childrenLength: null,
            initialize: function(e, t) {
                this.el = document.createElement(t || "div"),
                this.el = $(this.el),
                this.el.className = e,
                this.pos = [0, 0],
                this.children = [],
                this.childrenSize = null,
                this.childrenLength = null
            },
            size: function() {
                return [this.el.offsetWidth, this.el.offsetHeight]
            },
            setSize: function(e) {
                this.el.width = e[0],
                this.el.height = e[1]
            },
            contains: function(e) {
                var t = this.size()
                  , n = this.getPosition();
                return n[0] <= e[0] && n[1] <= e[1] && n[0] + t[0] >= e[0] && n[1] + t[1] >= e[1]
            },
            getPosition: function() {
                return this.el.offsetParent !== this.el.parentNode ? [this.el.offsetLeft - this.el.parentNode.offsetLeft, this.el.offsetTop - this.el.parentNode.offsetTop] : [this.el.offsetLeft, this.el.offsetTop]
            },
            move: function(e) {
                this.pos = e.slice()
            },
            shift: function(e) {
                this.pos[0] += e[0],
                this.pos[1] += e[1]
            },
            doMove: function() {
                this.el.style.position = "absolute",
                this.el.style.top = this.pos[1] + "px",
                hasClassName(this.el, "left_pane") && "phantomjs" !== App.config.environment ? (this.el.style.left = "auto",
                this.el.style.right = "calc(100% - " + (this.pos[0] + this.el.getWidth()) + "px)") : (this.el.style.right = "auto",
                this.el.style.left = this.pos[0] + "px")
            },
            resetPosition: function() {
                this.el.style.position = "",
                this.el.style.left = "",
                this.el.style.top = "",
                this.el.style.width = "",
                this.el.style.height = ""
            },
            onImageRemoved: function() {
                this.el.childNodes[0].style.marginLeft = "0"
            },
            setTitle: function() {
                var e = new Element("div",{
                    className: "h-iblock va-middle"
                });
                this.title = new Element("div",{
                    className: "tk_title",
                    dir: "auto"
                }).update(this.el._listener.node.getTitleWithLinks()),
                e.appendChild(this.title),
                this.insertChild({
                    el: e
                }, 0),
                this.setHoverTitle()
            },
            setHoverTitle: function() {
                if (App.config.editable) {
                    var e = this.el._listener.node
                      , t = users.findByID(e.modifiedBy, !0) || users.selfUser
                      , n = (new Date).getTime();
                    this.title.title = I18n.t("js.modified_by_s_s", {
                        v0: t.name,
                        v1: e.modifiedAt.toUIString(n - e.modifiedAt.getTime() > 864e5)
                    })
                }
            },
            updateTitle: function() {
                var e = this.el._listener.node
                  , t = e.getTitle(!0).safeUnescapeHTML().escapeHTML();
                this.title.innerHTML = e.replaceLineBreaksWithHTML(t).toLink()
            },
            applyStyles: function(e) {
                this.el._listener.node.style ? Style.applyToElement(this.el._listener.node.style, e) : Style.removeFromElement(e)
            },
            insertChild: function(e, t) {
                this.children.insert(e, t),
                e.parent = this,
                t >= this.children.length - 1 ? this.el.appendChild(e.el) : this.el.insertBefore(e.el, this.children[t + 1].el)
            },
            appendChild: function(e) {
                this.children[this.children.length] = e,
                e.parent = this,
                this.el.appendChild(e.el)
            },
            removeChild: function(e) {
                this.children = this.children.reject(function(t) {
                    return e.el == t.el
                }),
                this.el.removeChild(e.el)
            },
            destroy: function() {
                this.children.each(function(e) {
                    e.destroy && e.destroy()
                }),
                this.children.clear(),
                Element.discard(this.el)
            },
            makeSelectable: function() {
                Object.extend(this, s.default)
            },
            makeResizable: function() {
                Object.extend(this, o.default)
            },
            makeEditable: function() {
                Object.extend(this, i.default)
            },
            makeDraggable: function() {
                Object.extend(this, a._Draggable)
            },
            makeDroppable: function() {
                Object.extend(this, a._Droppable)
            }
        });
        t.default = r
    },
    cdGT: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("A9ap")
              , s = n("Kh9o")
              , a = n("HTWB")
              , r = n("FN6h")
              , l = n("vu0f")
              , c = n("h7V/")
              , d = Class.create(o.default, {
                sources: ["url", "youtube", "vimeo", "dailymotion"],
                resultCount: 10,
                initialize: function($super, e, t) {
                    var i = this;
                    $super("videos", e, t),
                    ServerData.isLoggedIn && ServerData.user.unilogin ? n.e(52).then(n.bind(null, "TMGa")).then(function() {
                        i.sources.push("skoletube"),
                        i.initSearchers()
                    }) : this.initSearchers()
                },
                initSearchers: function() {
                    this.sources.without("url").each(function(e) {
                        this[e + "Search"] = new a.default({
                            searcher: e,
                            onItemSelect: this.selectVideo.bind(this),
                            ui: !1,
                            onSearch: function() {
                                this.unselectVideo(this.selectedVideo),
                                MM.ui.disableButton("btn_set_video")
                            }
                            .bind(this),
                            caching: "skoletube" !== e
                        })
                    }
                    .bind(this))
                },
                load: function($super) {
                    Element.bindOnClick("btn_remove_video", this.removeVideo.bind(this)),
                    Element.bindOnClick("btn_auto_video", this.setAutoVideo.bind(this)),
                    Element.bindOnClick("btn_dlg_videolibrary", this.dialogVideoSearch.bind(this)),
                    mm$("btn_dlg_videolibrary").update(I18n.t("js.browse_videos")),
                    $super()
                },
                setAutoVideo: function() {
                    if (!canvas.selected)
                        return void Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE);
                    $("btn_auto_video").addClassName("fx-wiggle fx-infinite fx-none"),
                    canvas.allSelected.each(function(e) {
                        this.youtubeSearch.query(e.node.getSingleLineTitle(), {
                            per_page: 1,
                            onComplete: this.doSetAutoVideo.bind(this, e.node)
                        })
                    }
                    .bind(this)),
                    Amplitude.logEvent("wunder_video")
                },
                doSetAutoVideo: function(e, t) {
                    if (t.length > 0) {
                        var n = new s.default({
                            url: this.youtubeSearch.options.embedURL + t[0].url,
                            source: "youtube",
                            size: {
                                width: 320,
                                height: 200
                            },
                            title: t[0].title
                        });
                        canvas.onSetVideo(n, e)
                    } else
                        Message.show(I18n.t("js.no_auto_video_found_for_topic"), Message.NOTICE);
                    $("btn_auto_video").removeClassName("fx-wiggle fx-infinite").removeClassName("fx-none"),
                    this.youtubeSearch.search.queryText = null
                },
                removeVideo: function() {
                    canvas.selected ? canvas.onSetVideo() : Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
                },
                dialogVideoSearch: function() {
                    canvas.removeFocus(),
                    MM.ui.dialogs.show("video_search", {
                        dlg_name: "video_search",
                        width: 710,
                        keymap: new MM.utils.KeyMap(document,"video_search_keymap",[]),
                        onComplete: this.onDialogShow.bind(this)
                    })
                },
                onDialogShow: function() {
                    var e = this;
                    this.searchField = mm$("url_field"),
                    this.searchField.observe("keyup", this._onKeyUp.bind(this)),
                    this.sources.without("url").each(function(e) {
                        var t = this[e + "Search"];
                        t.ui = !0,
                        t.options.element = mm$(e + "_field"),
                        t.observeSearchField()
                    }
                    .bind(this)),
                    c.a.get("video_searcher", function(t) {
                        e._renderSourceDropdown(t ? t.value : "youtube")
                    })
                },
                _renderSourceDropdown: function(t) {
                    e.render(i.createElement(r.a, {
                        sources: this.sources,
                        selectedSource: t || "youtube",
                        onChange: this.setPopoverValue.bind(this)
                    }), mm$("btn-source-container"))
                },
                setPopoverValue: function(e) {
                    e && (c.a.save({
                        name: "video_searcher",
                        value: e.value
                    }),
                    this.updateVideoSource(e.value))
                },
                _onKeyUp: function() {
                    var e = mm$("url_videos")
                      , t = Object(l.checkLink)(this.searchField.value);
                    if (t.video && t.source) {
                        var n = this[t.source + "Search"].options.embedURL + t.video;
                        n !== this.videoURL && (MM.ui.disableButton("btn_set_video"),
                        this.pasteURL = this.searchField.value,
                        this.videoURL = n,
                        this.createVideoFromLink(t, function(t) {
                            this.selectedVideo = t,
                            MM.ui.enableButton("btn_set_video"),
                            removeClassName(e, "invalid"),
                            e.update(this.selectedVideo.getElement())
                        }
                        .bind(this)))
                    } else
                        MM.ui.disableButton("btn_set_video"),
                        this.videoURL = null,
                        this.selectedVideo = null,
                        e.update('<cell class="va-middle ta-center">' + (ServerData.isLoggedIn && ServerData.user.unilogin ? I18n.t("js.invalid_video_url_skoletube") : I18n.t("js.invalid_video_url")) + "</cell>"),
                        addClassName(e, "invalid")
                },
                updateVideoSource: function(e) {
                    var t = this.activeSource || e;
                    if (this.hideSearcher(t),
                    this.activeSource = e,
                    this.showSearcher(e),
                    "url" === e)
                        this.searchField.value = this.pasteURL || "";
                    else {
                        var n = this[t + "Search"]
                          , i = this[this.activeSource + "Search"].options.element;
                        n ? i.value = n.options.element.value || canvas.selected.node.getSingleLineTitle() : i.value || (i.value = canvas.selected.node.getSingleLineTitle()),
                        ServerData.isLoggedIn && ServerData.user.unilogin && "skoletube" === e && !MM.external.Skoletube.Groups.skoletubeGroups ? MM.external.Skoletube.Groups.load("videos", this.searchSkoletube.bind(this)) : this.search()
                    }
                },
                search: function(e) {
                    var t = this[this.activeSource + "Search"]
                      , n = t.options.element.value;
                    n || !t.options.caching ? t.query(n, Object.extend({
                        per_page: this.resultCount
                    }, e)) : this.showMessage(I18n.t("js.no_video_was_found"))
                },
                searchSkoletube: function(e) {
                    this.search({
                        group_id: e.toString()
                    })
                },
                selectVideo: function(e, t) {
                    t.stop(),
                    this.unselectVideo(this.selectedVideo),
                    this.selectedVideo = e,
                    addClassName(this.selectedVideo.el.parentNode, "selected"),
                    MM.ui.enableButton("btn_set_video")
                },
                unselectVideo: function(e) {
                    e && e.el.parentNode && removeClassName(e.el.parentNode, "selected"),
                    this.selectedVideo = null
                },
                showMessage: function(e) {
                    mm$("video_message").update(e),
                    Effect.Appear("video_message", {
                        duration: 2
                    }),
                    setTimeout(function() {
                        Effect.Fade("video_message", {
                            duration: 1
                        })
                    }, 4e3)
                },
                addVideo: function() {
                    if (!this.selectedVideo)
                        return void this.showMessage(I18n.t("js.no_video_selected"));
                    canvas.onSetVideo(this.selectedVideo),
                    this.clearResults(),
                    Windows.close("video_search")
                },
                clearResults: function() {
                    this.sources.without("url").each(function(e) {
                        this[e + "Search"].destroy()
                    }
                    .bind(this)),
                    this.pasteURL = null,
                    this.selectedVideo = null,
                    ServerData.isLoggedIn && ServerData.user.unilogin && MM.external.Skoletube.Groups.destroy(),
                    canvas.addFocus()
                },
                onSelectNode: function() {
                    var e = canvas.selected.node;
                    this.updateVideoContent(e.idea_video)
                },
                updateVideoContent: function(e) {
                    var t = mm$("video_source");
                    e ? (removeClassName(mm$("videos_content"), "o-30"),
                    t.innerHTML = MM.ui.icon({
                        name: "service-" + e.source,
                        size: 22,
                        clickable: !1,
                        parentClasses: "h-a-center rad-100%"
                    }),
                    mm$("title_video").textContent = e.title.truncate(50)) : (addClassName(mm$("videos_content"), "o-30"),
                    t.innerHTML = MM.ui.icon({
                        name: "play",
                        size: 16,
                        color: "grey-lighter",
                        parentClasses: "h-a-center js-add-image"
                    }),
                    mm$("title_video").textContent = I18n.t("js.no_video"),
                    Element.bindOnClick(t.select(".js-add-image")[0], this.dialogVideoSearch.bind(this)))
                },
                createVideoFromLink: function(e, t) {
                    var n = this[e.source + "Search"]
                      , i = new s.default({
                        url: n.options.embedURL + e.video,
                        source: e.source,
                        size: {
                            width: 480,
                            height: 272
                        }
                    })
                      , o = "skoletube" === e.source ? e.url : e.video.split(/[#?]/)[0];
                    n.search.queryVideoDetails(o, {
                        fields: ["title"],
                        onComplete: function(e) {
                            i.title = e.length > 0 ? e[0].title : I18n.t("js.unknown_video"),
                            t && t(i)
                        }
                        .bind(this)
                    })
                },
                showSearcher: function(e) {
                    show(mm$(e + "_search")),
                    show(mm$(e + "_videos"))
                },
                hideSearcher: function(e) {
                    hide(mm$(e + "_search")),
                    hide(mm$(e + "_videos"))
                },
                onSkoletubeLogin: function() {
                    this.updateVideoSource("skoletube"),
                    this.skoletubeSearch.search.queryText = "",
                    MM.external.Skoletube.Groups.load("videos", this.searchSkoletube.bind(this))
                },
                onCancelSkoletubeLogin: function() {
                    MM.ui.dialogs.close("skoletubelogin"),
                    this.skoletubeSearch.search.queryText = "",
                    this._renderSourceDropdown("youtube")
                }
            });
            t.default = d
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    d2ki: function(e, t, n) {
        "use strict";
        (function(e) {
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function o(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function s(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var a = n("YmTu")
              , r = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , l = function(t) {
                function n(e) {
                    i(this, n);
                    var t = o(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
                    return t._showExtendedSidebar = t._showExtendedSidebar.bind(t),
                    t
                }
                return s(n, t),
                r(n, [{
                    key: "_showExtendedSidebar",
                    value: function(e) {
                        e.preventDefault(),
                        e.stopPropagation(),
                        this.props.editable && this.props.onExpand()
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this.props
                          , n = t.editable
                          , i = t.userVote
                          , o = t.downVotes
                          , s = t.votes
                          , r = t.onVote
                          , l = void 0
                          , c = void 0;
                        n && (c = e.createElement(a.a, {
                            onClick: function(e) {
                                return r(e, IdeaVote.DOWN)
                            },
                            opts: {
                                name: "like",
                                size: 16,
                                consize: 28,
                                classes: "h-a-center",
                                parentClasses: "vote unlike p-r" + (i < 0 ? " active" : "")
                            }
                        }),
                        l = e.createElement(a.a, {
                            onClick: function(e) {
                                return r(e, IdeaVote.UP)
                            },
                            opts: {
                                name: "like",
                                size: 16,
                                consize: 28,
                                classes: "h-a-center",
                                parentClasses: "vote like p-r" + (i > 0 ? " active" : "")
                            }
                        }));
                        var d = "w-" + o / IdeaVote.maxVotes * 100 + "%"
                          , h = "w-" + s.length / IdeaVote.maxVotes * 100 + "%";
                        return e.createElement("div", {
                            className: "h-flex-row w-200 votes_widget"
                        }, c, e.createElement("div", {
                            className: "h-flex-row h-flex-grow ph-5"
                        }, e.createElement("div", {
                            className: "h-6px p-r w-100%"
                        }, e.createElement("div", {
                            className: "vote_progress_bar grey"
                        }), e.createElement("div", {
                            className: "vote_progress_bar orange animated " + d
                        }), e.createElement("div", {
                            className: "vote_progress_bar green animated " + h
                        }))), l, e.createElement("div", {
                            className: "pl-5 text-center"
                        }, e.createElement("a", {
                            id: "vote_count_preview",
                            href: "#",
                            className: "fs-12" + (n ? "" : " disabled"),
                            onClick: this._showExtendedSidebar
                        }, s.length + " " + (1 === s.length ? I18n.t("js.vote") : I18n.t("js.votes")))))
                    }
                }]),
                n
            }(e.Component);
            t.a = l
        }
        ).call(t, n("nakD"))
    },
    dnTF: function(e, t, n) {
        function i(e, t, n) {
            function i(t) {
                var n = _
                  , i = y;
                return _ = y = void 0,
                S = t,
                w = e.apply(i, n)
            }
            function d(e) {
                return S = e,
                C = setTimeout(p, t),
                k ? i(e) : w
            }
            function h(e) {
                var n = e - x
                  , i = e - S
                  , o = t - n;
                return A ? c(o, b - i) : o
            }
            function u(e) {
                var n = e - x
                  , i = e - S;
                return void 0 === x || n >= t || n < 0 || A && i >= b
            }
            function p() {
                var e = s();
                if (u(e))
                    return f(e);
                C = setTimeout(p, h(e))
            }
            function f(e) {
                return C = void 0,
                M && _ ? i(e) : (_ = y = void 0,
                w)
            }
            function g() {
                void 0 !== C && clearTimeout(C),
                S = 0,
                _ = x = y = C = void 0
            }
            function m() {
                return void 0 === C ? w : f(s())
            }
            function v() {
                var e = s()
                  , n = u(e);
                if (_ = arguments,
                y = this,
                x = e,
                n) {
                    if (void 0 === C)
                        return d(x);
                    if (A)
                        return C = setTimeout(p, t),
                        i(x)
                }
                return void 0 === C && (C = setTimeout(p, t)),
                w
            }
            var _, y, b, w, C, x, S = 0, k = !1, A = !1, M = !0;
            if ("function" != typeof e)
                throw new TypeError(r);
            return t = a(t) || 0,
            o(n) && (k = !!n.leading,
            A = "maxWait"in n,
            b = A ? l(a(n.maxWait) || 0, t) : b,
            M = "trailing"in n ? !!n.trailing : M),
            v.cancel = g,
            v.flush = m,
            v
        }
        var o = n("xwKO")
          , s = n("o72h")
          , a = n("5JaQ")
          , r = "Expected a function"
          , l = Math.max
          , c = Math.min;
        e.exports = i
    },
    ePfb: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = {
            highlight: function(e) {
                var t = mm$("user_" + e.id);
                t && (t.style.borderColor = e.color || "#cccccc",
                setTimeout(function() {
                    t.style.borderColor = "transparent"
                }, 2e3))
            },
            highlightNode: function(e, t) {
                var n = users.findByID(t, !0);
                n && (this.highlight(n),
                e.highlight(n.color, !1))
            },
            highlightMovement: function(e, t, n) {
                if (!App.config.layout.autoAlign && !e.dcontainer.el.eventRunning) {
                    var i = e.dcontainer.el.cumulativeOffset()
                      , o = e.node.getElementsByClassName(e.dcontainer.el, "tk_label");
                    o.each(function(e) {
                        e.style.color = "#cccccc"
                    }),
                    mm$("canvas").appendChild(n),
                    e.dcontainer.el.eventRunning = !0,
                    new Effect.Move(n,{
                        x: i[0],
                        y: i[1],
                        mode: "absolute",
                        afterFinish: function() {
                            Element.discard(n),
                            e.node && (e.dcontainer.el.eventRunning = !1,
                            e.dcontainer.el.style.zIndex = 3,
                            o.each(function(e) {
                                e && e.style && (e.style.color = "#" + e._listener.node.currentStyle().color)
                            }),
                            e.dcontent.el.style.color = e.node.currentStyle().color,
                            this.highlightNode(e, t))
                        }
                        .bind(this, e)
                    })
                }
            }
        };
        t.default = i
    },
    fGk7: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("d407")
          , o = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
            }
            return e
        }
          , s = function(e) {
            e.preventDefault(),
            e.stopPropagation();
            var t = i.default.getPlainClipboardData(e);
            i.default.simulatePaste(t)
        }
          , a = Class.create({
            el: null,
            initialize: function(e, t) {
                this.options = o({
                    defaultText: "Label",
                    saveCallback: function() {},
                    onEnterEditMode: function() {},
                    onLeaveEditMode: function() {}
                }, t),
                this.el = new Element("div",{
                    className: "tk_editable " + e
                }).update(this.options.defaultText),
                App.config.editable && (this.clickObserver = this.onDocumentClick.bind(this),
                this.el.observe("click", this.toEditing.bind(this)),
                this.el.observe("dblclick", this.toEditing.bind(this))),
                this.initKeyMap()
            },
            initKeyMap: function() {
                var e = MM.utils.KeyEvent;
                this.keyMap = new MM.utils.KeyMap(this.el,"edit_connection_label_keymap",[{
                    key: e.ENTER,
                    stopEvent: !0,
                    handler: this.stopEditing.bind(this, !0)
                }, {
                    key: e.ESC,
                    stopEvent: !0,
                    handler: this.stopEditing.bind(this, !1)
                }]),
                this.keyMap.disable()
            },
            toEditing: function(e) {
                if (e && (e.preventDefault(),
                e.stopPropagation()),
                !this.editing) {
                    this.editing = !0,
                    this.options.onEnterEditMode(),
                    this.initialValue = this.getValue(),
                    this.el.setAttribute("contenteditable", "true"),
                    this.el.focus();
                    var t = document.createRange();
                    t.selectNodeContents(this.el),
                    MM.utils.addSelection(t),
                    Event.observe(this.el, "paste", s),
                    Event.observe(document, "click", this.clickObserver),
                    this.keyMap.enable()
                }
            },
            stopEditing: function(e) {
                this.options.onLeaveEditMode(),
                this.el.setAttribute("contenteditable", "false"),
                MM.utils.clearSelection(),
                Event.stopObserving(this.el, "paste", s),
                Event.stopObserving(document, "click", this.clickObserver),
                this.keyMap.disable(),
                e ? this.save() : this.setValue(this.initialValue),
                this.editing = !1,
                this.initialValue = ""
            },
            onDocumentClick: function(e) {
                Event.findElement(e) !== this.el && this.stopEditing(!0)
            },
            getWidth: function() {
                return this.el.getWidth()
            },
            getHeight: function() {
                return this.el.getHeight()
            },
            setValue: function(e) {
                this.el.update(e)
            },
            getValue: function() {
                return this.el.textContent.replace(/\s*$/, "").escapeHTML()
            },
            save: function() {
                this.options.saveCallback(this.getValue())
            }
        });
        t.default = a
    },
    fOTf: function(e, t, n) {
        var i = n("Rftu");
        "string" == typeof i && (i = [[e.i, i, ""]]);
        var o = {
            hmr: !0
        };
        o.transform = void 0,
        o.insertInto = void 0;
        n("0tV6")(i, o);
        i.locals && (e.exports = i.locals)
    },
    fSlT: function(e, t, n) {
        "use strict";
        function i(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var o = n("CKi4")
          , s = n.n(o)
          , a = n("9pOK")
          , r = n.n(a)
          , l = n("67vC")
          , c = n("h7V/")
          , d = Class.create({
            root: null,
            notPainted: !0,
            readyForConnections: !1,
            finishedInitialization: !1,
            revision: null,
            uncommitedId: -1e3,
            nodes: null,
            default_title: "",
            initialize: function(e) {
                this.revision = e,
                this.nodes = {}
            },
            autoLayout: function(e) {
                if (e || !ServerConnection.isPending()) {
                    var t = new ChangeList;
                    t.doAutoLayoutingChanges(),
                    ServerConnection.doChanges(t)
                }
            },
            autoCondense: function() {
                var e = new ChangeList;
                e.doAutoCondenseChanges(),
                ServerConnection.doChanges(e)
            },
            changeLayout: function(e) {
                if (App.config.layout !== e) {
                    if (null !== App.config.layout.orientation && !e.orientation && canvas.root.children.length > 1)
                        if (App.config.layout.orientation === App.Layouts.orientation.left)
                            for (var t = canvas.root.children.sort(function(e, t) {
                                return e.node.pos[1] - t.node.pos[1]
                            }), n = parseInt(t.length / 2), i = t.length; n < i; n++)
                                t[n].node.pos[0] = 50;
                        else if (App.config.layout.orientation === App.Layouts.orientation.right)
                            for (var t = canvas.root.children.sort(function(e, t) {
                                return e.node.pos[1] - t.node.pos[1]
                            }), n = 0, i = parseInt(t.length / 2); n < i; n++)
                                t[n].node.pos[0] = -50;
                        else if (App.config.layout.orientation === App.Layouts.orientation.down)
                            for (var t = canvas.root.children.sort(function(e, t) {
                                return e.node.pos[0] - t.node.pos[0]
                            }), n = 0, i = t.length; n < i; n++)
                                t[n].node.pos[1] = t[n].node.pos[0];
                    var o = new ChangeList
                      , s = new MapPropertiesChange({
                        idea_id: this.root.id,
                        type: "MapProperties",
                        old_data: {
                            layout: App.config.layout.id
                        },
                        new_data: {
                            layout: e.id
                        }
                    });
                    o.changes.push(s),
                    e === App.Layouts.Default ? App.config.layout === App.Layouts.Aligned ? (o.doAutoAlignedChanges(),
                    s.execute()) : (canvas.root.destroy(),
                    canvas.destroy(),
                    canvas.buildFromModel(),
                    removeClassName(canvas.el, "layout_" + App.config.layout.name),
                    App.config.layout = App.Layouts.Aligned,
                    addClassName(canvas.el, "layout_" + App.config.layout.name),
                    canvas.root.paint(),
                    o.doAutoAlignedChanges(),
                    s.execute()) : (s.execute(),
                    o.doAutoAlignedChanges()),
                    ServerConnection.doChanges(o)
                }
            },
            postInit: function() {
                this.paint(),
                this.finishedInitialization = !0;
                var e = canvas.size;
                canvas.checkBounds(),
                canvas.size === e && canvas.changeSize()
            },
            paint: function() {
                rectangleLayouter.updateAll(),
                this.readyForConnections = !0;
                for (var e = 0, t = this.root._listener.children.length; e < t; e++)
                    this.root._listener.children[e].rc.redrawConnections();
                rectangleLayouter.elasticLayoutingEnabled = !0
            },
            destroy: function() {
                this.root.destroy()
            },
            totalNodes: function() {
                var e = 0;
                for (var t in this.nodes)
                    this.nodes.hasOwnProperty(t) && this.nodes[t] && e++;
                return e
            },
            totalConnections: function() {
                var e = 0;
                for (var t in this.nodes)
                    this.nodes.hasOwnProperty(t) && this.nodes[t] && (e += this.nodes[t].outgoing_connections.length);
                return e
            },
            getNodes: function() {
                return s()(this.nodes, r.a)
            }
        });
        d.utils = {
            removeNodes: function(e) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var t = [];
                    e.each(function(n) {
                        if (n.isRoot())
                            Message.show(I18n.t("js.cant_delete_root_note"), Message.WARNING);
                        else if (!n.getAncestors().find(function(t) {
                            return !t.isRoot() && e.indexOf(t) >= 0
                        })) {
                            n.isFloating() && t.push(new IdeaPropertiesChange({
                                idea_id: n.id,
                                type: "IdeaProperties",
                                new_data: {
                                    floating: !1
                                },
                                old_data: {
                                    floating: !0
                                }
                            })),
                            n.eachChild(function(e) {
                                e.boundary && t.push(new RemoveBoundaryChange({
                                    idea_id: e.id,
                                    type: "RemoveBoundary",
                                    old_data: e.boundary.toJSON()
                                })),
                                e.idea_video && t.push(new RemoveVideoChange({
                                    idea_id: e.id,
                                    type: "RemoveVideo",
                                    old_data: e.idea_video.toJSON()
                                })),
                                e.comments.length > 0 && e.comments.each(function(n) {
                                    t.push(new RemoveCommentChange({
                                        idea_id: e.id,
                                        type: "RemoveComment",
                                        old_data: {
                                            idea_comment_id: n.id
                                        }
                                    }))
                                }),
                                e.votes.length > 0 && e.votes.each(function(n) {
                                    t.push(new RemoveVoteChange({
                                        idea_id: e.id,
                                        type: "RemoveVote",
                                        old_data: n.toJSON()
                                    }))
                                })
                            });
                            var i = new RemoveChange({
                                idea_id: n.id,
                                type: "Delete"
                            });
                            t.push(i)
                        }
                    }),
                    tree.notPainted = !0,
                    t.each(function(e, n) {
                        n === t.length - 1 && (tree.notPainted = !1),
                        e.executeLocally()
                    });
                    var n = new ChangeList;
                    n.changes = t,
                    ServerConnection.doChanges(n)
                }
            },
            connect: function(e) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var t = new ChangeList;
                    e.each(function(e) {
                        if (e.isRootC() && e.isFloating()) {
                            var n = new IdeaPropertiesChange({
                                idea_id: e.id,
                                type: "IdeaProperties",
                                new_data: {
                                    floating: !1
                                },
                                old_data: {
                                    floating: !0
                                }
                            });
                            t.changes.push(n),
                            n.executeLocally()
                        }
                    }),
                    ServerConnection.doChanges(t)
                }
            },
            disconnect: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    e.each(function(e) {
                        e.isRootC() || n.push(new MoveChange({
                            idea_id: e.id,
                            type: "Move",
                            old_data: {
                                parent: e.parent.id,
                                rank: e.parent.rank(e),
                                pos: e.pos
                            },
                            new_data: {
                                parent: tree.root.id,
                                rank: 0,
                                pos: t[e.id]
                            }
                        }));
                        var i = d.utils.floatingNodeChange(e, !0);
                        i && n.push(i)
                    }),
                    ChangeList.layoutAlteringChangeset(n)
                }
            },
            sortTopicsBreadthFirst: function(e) {
                if (e.length > 1) {
                    var t = [];
                    tree.root.doBreadthFirstTraversal(function(e) {
                        t.push(e)
                    }),
                    e.sort(function(e, n) {
                        return t.indexOf(e) - t.indexOf(n)
                    })
                }
            },
            moveNodes: function(e, t, n, i, o) {
                if (!ServerConnection.canQueueDoRequests())
                    return ServerConnection.networkIssues(),
                    !1;
                if (!App.config.editable || !App.config.currentlyEditable)
                    return !1;
                var s = [];
                this.sortTopicsBreadthFirst(e),
                e.each(function(i) {
                    if (!(i == t || t.getAncestors().indexOf(i) >= 0))
                        if (t.isRoot() && i.isRootC())
                            o && s.push(new RepositionChange({
                                idea_id: i.id,
                                type: "Reposition",
                                old_data: {
                                    pos: i.pos
                                },
                                new_data: {
                                    pos: o
                                }
                            }));
                        else {
                            var a = d.utils.floatingNodeChange(i, !1);
                            a && s.push(a);
                            var r = i.parent == t && i.parent.rank(i) < n ? n - 1 : n;
                            r += e.indexOf(i),
                            (i.parent !== t || i.parent === t && i.parent.rank(i) !== r) && s.push(new MoveChange({
                                idea_id: i.id,
                                type: "Move",
                                old_data: {
                                    parent: i.parent.id,
                                    rank: i.parent.rank(i),
                                    pos: i.pos
                                },
                                new_data: {
                                    parent: t.id,
                                    rank: r,
                                    pos: o
                                }
                            }))
                        }
                }),
                ChangeList.layoutAlteringChangeset(s)
            },
            floatingNodeChange: function(e, t) {
                if (t !== e.isFloating())
                    return new IdeaPropertiesChange({
                        idea_id: e.id,
                        type: "IdeaProperties",
                        new_data: {
                            floating: t
                        }
                    })
            },
            copyNodes: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    Object.isArray(t) || (t = [t]),
                    this.sortTopicsBreadthFirst(e),
                    t.each(function(t) {
                        e.each(function(e) {
                            e.eachChild(function(e, i) {
                                var o = --tree.uncommitedId;
                                n.push(new InsertChange({
                                    idea_id: o,
                                    type: "Insert",
                                    new_data: {
                                        id: o,
                                        parent: i,
                                        title: e.title,
                                        closed: e.closed,
                                        style: e.style,
                                        icon: e.icons.map(function(e) {
                                            return e.fullName()
                                        }).join(","),
                                        note: e.note,
                                        link: e.link,
                                        task: e.task
                                    }
                                })),
                                e.idea_image && n.push(new AddImageChange({
                                    idea_id: o,
                                    type: "AddImage",
                                    new_data: {
                                        idea_image_id: e.idea_image.id
                                    },
                                    old_data: {
                                        idea_image_id: null
                                    }
                                })),
                                e.idea_video && n.push(new AddVideoChange({
                                    idea_id: o,
                                    type: "AddVideo",
                                    new_data: e.idea_video.toJSON()
                                }));
                                for (var s = 0, a = e.attachments.length; s < a; s++) {
                                    var r = e.attachments[s];
                                    n.push(new AddAttachmentChange({
                                        idea_id: o,
                                        type: "AddAttachment",
                                        new_data: {
                                            attachment_id: r.id
                                        }
                                    }))
                                }
                                return e.isFloating() && t.isRoot() && n.push(new IdeaPropertiesChange({
                                    idea_id: o,
                                    type: "IdeaProperties",
                                    new_data: {
                                        floating: !0
                                    }
                                })),
                                e.boundary && n.push(new AddBoundaryChange({
                                    idea_id: o,
                                    type: "AddBoundary",
                                    new_data: e.boundary.toJSON()
                                })),
                                o
                            }, t.id)
                        })
                    }),
                    ChangeList.layoutAlteringChangeset(n);
                    var i = new ChangeList;
                    i.doAutoAlignedChanges("NonPersistentReposition"),
                    ServerConnection.doChanges(i)
                }
            },
            addChildrenAsTree: function(e) {
                var t = [];
                e.each(function(e) {
                    var n = e.title.escapeHTML();
                    e.id > 0 ? t.push(new RenameChange({
                        idea_id: e.id,
                        type: "Title",
                        new_data: {
                            title: n
                        }
                    })) : t.push(new InsertChange({
                        idea_id: e.id,
                        type: "Insert",
                        new_data: {
                            id: e.id,
                            parent: e.parent,
                            title: n,
                            style: null
                        }
                    }))
                }),
                ChangeList.layoutAlteringChangeset(t)
            },
            copyNodesExternal: function(e, t) {
                if (App.config.editable && App.config.currentlyEditable) {
                    t[0].new_data.parent = e.id,
                    e.isRoot() && (t[0].new_data.pos = null);
                    for (var n = [], i = 0, o = t.length; i < o; i++) {
                        var s = t[i];
                        if ("AddConnection" !== s.type) {
                            s.new_data.rank && (s.new_data.rank = null);
                            for (var a = --tree.uncommitedId, r = 0, l = t.length; r < l; r++) {
                                var c = t[r];
                                c.new_data.parent === s.new_data.id && (c.new_data.parent = a),
                                c.idea_id === s.new_data.id && (c.idea_id = a)
                            }
                            n = n.concat(InsertChange.toChangeArray(s, a))
                        }
                    }
                    ChangeList.layoutAlteringChangeset(n)
                }
            },
            setIconChange: function(e, t) {
                var n = t.icons.map(function(e) {
                    return e.fullName()
                }).join(",")
                  , i = t.icons;
                e.each(function(e) {
                    var t = null;
                    e.group() && (t = i.detect(function(t) {
                        return t.group() === e.group()
                    })),
                    t ? i[i.indexOf(t)] = e : i.push(e)
                }),
                i = Icon.compactAndOrder(i);
                for (var o = i.map(function(e) {
                    return e.fullName()
                }).join(","); o.length > 255; ) {
                    var s = i.detect(function(t) {
                        return e.indexOf(t) < 0
                    });
                    if (!s)
                        return null;
                    i = i.without(s),
                    o = i.map(function(e) {
                        return e.fullName()
                    }).join(",")
                }
                return o != n ? new IconChange({
                    idea_id: t.id,
                    type: "Icon",
                    old_data: {
                        icon: n
                    },
                    new_data: {
                        icon: o
                    }
                }) : null
            },
            setIcon: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    t.each(function(t) {
                        var i = this.setIconChange([e], t);
                        i && n.push(i)
                    }
                    .bind(this)),
                    ChangeList.layoutAlteringChangeset(n)
                }
            },
            removeIconChange: function(e, t) {
                var n = t.icons.map(function(e) {
                    return e.fullName()
                }).join(",")
                  , i = t.icons;
                e.each(function(e) {
                    i = i.without(e)
                });
                var o = i.map(function(e) {
                    return e.fullName()
                }).join(",");
                return o != n ? new IconChange({
                    idea_id: t.id,
                    type: "Icon",
                    old_data: {
                        icon: n
                    },
                    new_data: {
                        icon: o
                    }
                }) : null
            },
            removeIcon: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    t.each(function(t) {
                        var i = null;
                        if (void 0 === e) {
                            var o = t.icons.last();
                            o && (i = this.removeIconChange([o], t))
                        } else
                            i = this.removeIconChange([e], t);
                        i && n.push(i)
                    }
                    .bind(this)),
                    ChangeList.layoutAlteringChangeset(n)
                }
            },
            removeIconGroup: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    t.each(function(t) {
                        var i = t.icons.detect(function(t) {
                            return t.group() === e
                        });
                        i && n.push(this.removeIconChange([i], t))
                    }
                    .bind(this)),
                    ChangeList.layoutAlteringChangeset(n)
                }
            },
            setStyle: function(e, t, n) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var i = []
                      , o = canvas.selected.node.currentStyle();
                    if ("toggle" === t)
                        t = !o[e];
                    else if ("fontSize" === e && [-1, 1].indexOf(t) >= 0) {
                        var s = o.fontSize
                          , a = [100, 120, 150]
                          , r = a.indexOf(s) + t;
                        r < 0 && (r = 0),
                        r >= a.length && (r = a.length - 1),
                        t = a[r]
                    }
                    n.each(function(n) {
                        var o = n.currentStyle();
                        o[e] = t,
                        i.push(new TextStyleChange({
                            idea_id: n.id,
                            type: "TextStyle",
                            new_data: {
                                style: o.toJSON()
                            },
                            old_data: {
                                style: n.style ? n.style.toJSON() : null
                            }
                        }))
                    }),
                    ChangeList.layoutAlteringChangeset(i)
                }
            },
            setFullStyle: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    t.each(function(t) {
                        !e || e.equals(t.defaultStyle()) ? t.style && n.push(new TextStyleChange({
                            idea_id: t.id,
                            type: "TextStyle",
                            new_data: {
                                style: null
                            },
                            old_data: {
                                style: t.style.toJSON()
                            }
                        })) : t.style && t.style.equals(e) || n.push(new TextStyleChange({
                            idea_id: t.id,
                            type: "TextStyle",
                            new_data: {
                                style: e.toJSON()
                            },
                            old_data: {
                                style: t.style ? t.style.toJSON() : null
                            }
                        }))
                    }),
                    ChangeList.layoutAlteringChangeset(n)
                }
            },
            setProperty: function(e, t, n) {
                var i = this;
                if (App.config.editable && App.config.currentlyEditable) {
                    if ("note" === e && t.length > 65e3)
                        return Message.show(I18n.t("js.note_is_too_long"), Message.ERROR, 5);
                    if (!ServerConnection.canQueueDoRequests())
                        return void ServerConnection.networkIssues();
                    var o = [];
                    n.each(function(n) {
                        o.push(i.setPropertyChange(e, t, n))
                    }),
                    ChangeList.layoutAlteringChangeset(o),
                    "link" === e && 0 === t.indexOf("topic:") && this.setLinkedMapPreview(n, t)
                }
            },
            setPropertyChange: function(e, t, n) {
                var o = {
                    idea_id: n.id,
                    type: e.capitalize(),
                    old_data: i({}, e, n[e]),
                    new_data: i({}, e, t)
                };
                return new window[o.type + "Change"](o)
            },
            setLinkedMapPreview: function(e, t) {
                c.a.get("topic_link_preview", function(n) {
                    if (n && 1 === parseInt(n.value)) {
                        var i = [];
                        e.each(function(e) {
                            var n = e.id
                              , o = e.idea_image
                              , s = e.idea_video
                              , a = t.replace(/[^\d]/g, "");
                            s || o && !o.isLinkedMapPreview() || tree.root.getChild(a) ? o && o.isLinkedMapPreview() && i.push(new RemoveImageChange({
                                idea_id: n,
                                type: "RemoveImage",
                                old_data: {
                                    idea_image_id: o.id
                                }
                            })) : i.push(new AddImageChange({
                                idea_id: n,
                                type: "AddImage",
                                new_data: {
                                    idea_image_id: -1,
                                    topic_id: a
                                },
                                old_data: {
                                    idea_image_id: o ? o.id : null
                                }
                            }))
                        }),
                        ChangeList.layoutAlteringChangeset(i)
                    }
                })
            },
            setTask: function(e) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    App.trigger(CustomEvents.TASK_ADDED);
                    var t = new ChangeList;
                    e.each(function(e) {
                        var n = e.node
                          , i = e.task
                          , o = []
                          , s = [];
                        if (i && void 0 !== i.complete && i.complete > -1)
                            o.push(Icon.fromFullName(l.TASK.complete[i.complete]));
                        else {
                            var a = n.icons.detect(function(e) {
                                return "task" === e.group()
                            });
                            a && s.push(a)
                        }
                        if (i && void 0 !== i.priority && i.priority > -1)
                            o.push(Icon.fromFullName(l.TASK.priority[i.priority]));
                        else {
                            var a = n.icons.detect(function(e) {
                                return "priority" === e.group()
                            });
                            a && s.push(a)
                        }
                        if (o.length > 0) {
                            var r = this.setIconChange(o, n);
                            r && t.changes.push(r)
                        }
                        if (s.length > 0) {
                            var r = this.removeIconChange(s, n);
                            r && t.changes.push(r)
                        }
                        if (n.task != i) {
                            var c = {
                                idea_id: n.id,
                                type: "Task",
                                old_data: {},
                                new_data: {}
                            };
                            c.old_data.task = n.task,
                            c.new_data.task = i;
                            var r = new TaskChange(c);
                            t.changes.push(r)
                        }
                    }
                    .bind(this)),
                    t.changes.size() > 0 && (t.execute(),
                    ServerConnection.doChanges(t))
                }
            },
            removeTask: function(e) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var t = new ChangeList
                      , n = [];
                    e.each(function(e) {
                        var i = []
                          , o = e.icons.detect(function(e) {
                            return "task" === e.group()
                        });
                        o && i.push(o);
                        var s = e.icons.detect(function(e) {
                            return "priority" === e.group()
                        });
                        if (s && i.push(s),
                        i.length > 0) {
                            var a = this.removeIconChange(i, e);
                            a && t.changes.push(a)
                        }
                        if (e.task && (e.task.from || e.task.due || e.task.effort || e.task.resource)) {
                            var r = {
                                idea_id: e.id,
                                type: "Task",
                                old_data: {},
                                new_data: {}
                            };
                            r.old_data.task = e.task,
                            r.new_data.task = null;
                            var a = new TaskChange(r);
                            t.changes.push(a),
                            e.task.from = null,
                            e.task.due = null,
                            e.task.resource = null,
                            e.task.effort = null
                        }
                        e.externalTask && n.push(e)
                    }
                    .bind(this)),
                    t.changes.length > 0 && (t.execute(),
                    ServerConnection.doChanges(t))
                }
            },
            getTextOutline: function(e, t) {
                var n = ""
                  , i = e.depth();
                return e.eachChild(function(e) {
                    if (t)
                        for (var o = 0; o < e.depth() - i; o++)
                            n += "\t";
                    n += e.title.replace(/\n/g, " ").replace(/\r/g, " ") + "\n"
                }),
                n
            },
            setImage: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    t.each(function(t) {
                        tree.root.getChild(t.id) && (n.push(new AddImageChange({
                            idea_id: t.id,
                            type: "AddImage",
                            new_data: {
                                idea_image_id: e.id,
                                details: {
                                    url: e.download_link,
                                    size: [e.width(), e.height()]
                                }
                            },
                            old_data: {
                                idea_image_id: t.idea_image ? t.idea_image.id : null
                            }
                        })),
                        t.idea_video && n.push(new RemoveVideoChange({
                            idea_id: t.id,
                            type: "RemoveVideo",
                            old_data: t.idea_video.toJSON()
                        })))
                    }),
                    ChangeList.layoutAlteringChangeset(n)
                }
            },
            removeImage: function(e) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var t = [];
                    e.each(function(e) {
                        tree.root.getChild(e.id) && e.idea_image && t.push(new RemoveImageChange({
                            idea_id: e.id,
                            type: "RemoveImage",
                            old_data: {
                                idea_image_id: e.idea_image.id
                            }
                        }))
                    }),
                    t.length > 0 ? ChangeList.layoutAlteringChangeset(t) : Message.show(I18n.t("js.node_has_no_image"), Message.NOTICE)
                }
            },
            setVideo: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    t.each(function(t) {
                        t.idea_video && e ? n.push(new EditVideoChange({
                            idea_id: t.id,
                            type: "EditVideo",
                            new_data: e.toJSON(),
                            old_data: t.idea_video.toJSON()
                        })) : t.idea_video && !e ? n.push(new RemoveVideoChange({
                            idea_id: t.id,
                            type: "RemoveVideo",
                            old_data: t.idea_video.toJSON()
                        })) : e && (t.idea_image && n.push(new RemoveImageChange({
                            idea_id: t.id,
                            type: "RemoveImage",
                            old_data: {
                                idea_image_id: t.idea_image.id
                            }
                        })),
                        n.push(new AddVideoChange({
                            idea_id: t.id,
                            type: "AddVideo",
                            new_data: e.toJSON()
                        })))
                    }),
                    ChangeList.layoutAlteringChangeset(n)
                }
            },
            setVote: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = IdeaVote.get(canvas.selected.node, users.selfUser.id)
                      , i = n && n.vote === e
                      , o = [];
                    t.each(function(t) {
                        var n = IdeaVote.get(t, users.selfUser.id)
                          , s = new IdeaVote({
                            idea_id: t.id,
                            vote: e,
                            user_id: users.selfUser.id,
                            voted_at: new Date
                        });
                        (t === canvas.selected.node || t !== canvas.selected.node && (n && n.vote !== e || !n || i)) && (n ? e === n.vote || i ? o.push(new RemoveVoteChange({
                            idea_id: t.id,
                            type: "RemoveVote",
                            old_data: s.toJSON()
                        })) : o.push(new EditVoteChange({
                            idea_id: t.id,
                            type: "EditVote",
                            new_data: s.toJSON()
                        })) : o.push(new AddVoteChange({
                            idea_id: t.id,
                            type: "AddVote",
                            new_data: s.toJSON()
                        })))
                    }),
                    ChangeList.layoutAlteringChangeset(o)
                }
            },
            setBoundary: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    t.each(function(t) {
                        t.boundary && e ? t.boundary.style.equals(e) || n.push(new EditBoundaryChange({
                            idea_id: t.id,
                            type: "EditBoundary",
                            new_data: e.toJSON(),
                            old_data: t.boundary.toJSON()
                        })) : t.boundary && !e ? n.push(new RemoveBoundaryChange({
                            idea_id: t.id,
                            type: "RemoveBoundary",
                            old_data: t.boundary.toJSON()
                        })) : e && n.push(new AddBoundaryChange({
                            idea_id: t.id,
                            type: "AddBoundary",
                            new_data: e.toJSON()
                        }))
                    }),
                    ChangeList.layoutAlteringChangeset(n)
                }
            },
            addAttachments: function(e, t) {
                if (!ServerConnection.canQueueDoRequests())
                    return void ServerConnection.networkIssues();
                if (App.config.editable && App.config.currentlyEditable) {
                    var n = [];
                    t.each(function(t) {
                        tree.root.getChild(t.id) && e.each(function(e) {
                            n.push(new AddAttachmentChange({
                                idea_id: t.id,
                                type: "AddAttachment",
                                new_data: {
                                    attachment_id: e.id
                                }
                            }))
                        })
                    }),
                    ChangeList.layoutAlteringChangeset(n)
                }
            }
        },
        t.default = d
    },
    gp2O: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("rX76")
          , o = n("xAzy")
          , s = n("t8zp")
          , a = n("NCMo")
          , r = n("Rq/x")
          , l = n("d407")
          , c = n("/dW8")
          , d = n("wgYI")
          , h = n("j1ii")
          , u = n("1M8a")
          , p = n("WGdr")
          , f = n("qmQO")
          , g = n("ahzF")
          , m = n("qlDW")
          , v = n("QHRq")
          , _ = n("vQBY")
          , y = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
            }
            return e
        }
          , b = function() {
            return l.default.disable()
        }
          , w = function() {
            return l.default.enable()
        }
          , C = Class.create(r.default, {
            selected: null,
            allSelected: [],
            containerSize: null,
            _marked: null,
            _index: null,
            _ghost: null,
            _scrolling: null,
            _scrolled: null,
            features: ["graphics", "selection", "style", "icons", "images", "attachments", "connections", "presentation"],
            initialize: function($super) {
                Position.includeScrollOffsets = !0,
                this.size = [1e4, 6e3],
                this.el = $("canvas"),
                this.container = this.el.up(),
                this.clearSelection(),
                this.initSize(),
                this.enableCssZoom(),
                this.el.style.left = Math.max(0, (MM.ui.page.width - this.width - (App.config.hasUI ? 300 : 0)) / 2) + "px",
                this.el.style.top = Math.max(0, (MM.ui.page.height - this.height) / 2) + "px",
                this.el.style.position = "relative",
                this.containerSize = [this.container.offsetWidth, this.container.offsetHeight],
                App.ui.Zoom.initialized || App.ui.Zoom.init(this.el, this.container),
                "phantomjs" !== App.config.environment && (this._onMD = this._onScrollMouseDown.bindAsEventListener(this),
                this._onMM = this._onScrollMouseMove.bindAsEventListener(this),
                this._onMU = this._onScrollMouseUp.bindAsEventListener(this),
                _.default.init({
                    container: this.el,
                    onScroll: this.onWheelScroll.bind(this),
                    onZoom: App.ui.Zoom.onWheel.bind(App.ui.Zoom)
                }),
                _.default.enable(),
                MM.utils.File.Droppables.add(this.el, {
                    hoverclass: "drop_label",
                    getElement: function(e) {
                        var t = h.default.dropWidget.getNode(e);
                        return t ? t._listener.dcontent.el : null
                    },
                    dropEffect: "copy",
                    onDrop: this.onFileDrop.bind(this)
                })),
                this.initConnections(),
                this.el.innerHTML = '<div id="graphics_container"></div>',
                s.Graphics.initialize(this.width, this.height),
                "phantomjs" !== App.config.environment && (this.createGhost(),
                this.createMTGhost(),
                Event.observe(this.container, "scroll", function() {
                    GeneralPopover.getLastOpened() && GeneralPopover.getLastOpened().sizeAndPosition()
                }),
                this.onStartSelectionRectangleListener = this.onStartSelectionRectangle.bind(this),
                this.onDragSelectionRectangleListener = this.onDragSelectionRectangle.bind(this),
                this.onEndDragSelectionsListener = this.onEndDragSelectionRectangle.bind(this),
                this.setupSelections(),
                l.default.init()),
                UI.Registry.add(this),
                UI.Registry.notify(this, "show"),
                $super()
            },
            postLoad: function() {
                if (App.tree.postInit(),
                App.config.editable && sideBar.toEditMode(),
                App.config.editable ? App.toEditMode() : App.toViewMode(),
                ChangeList.autoLayoutChangeset(),
                App.config.targetId) {
                    var e = tree.root.getChild(App.config.targetId);
                    e.toggleAllClosed()
                }
                if ("embedded" === App.config.viewMode) {
                    var t = window.location.search.toQueryParams().z;
                    t && "auto" === t || !t ? App.ui.Zoom.zoomToFit() : 1 !== App.config.zoomFactor && App.ui.Zoom.zoomTo(App.ui.Zoom.getZoomIndex(App.config.zoomFactor), !1, !1),
                    this.onRecenter()
                } else if (1 !== App.config.zoomFactor && App.ui.Zoom.zoomTo(App.ui.Zoom.getZoomIndex(App.config.zoomFactor), !1),
                App.config.targetId) {
                    var e = tree.root.getChild(App.config.targetId);
                    e.toggleAllClosed(!0),
                    this.centerOnElement($(App.config.targetId.toString()))
                } else
                    this.onRecenter();
                App.config.isNew && App.config.editable && canvas.root.dcontent.toEditing(null, "rename");
                var n = MM.status.params.query;
                mm$("fld_filter") && n && v.default.setText(n),
                Event.observe(window, "unload", App.destroy.bindAsEventListener(App)),
                g.default.initialize(App.config.websockets),
                App.driveInterval = null,
                App.googleDrive() && (App.driveInterval = setInterval(App.driveSave.bind(App), 1e4)),
                App.trigger(CustomEvents.POST_LOAD)
            },
            initUI: function() {
                App.config.hasUI && (["public", "embedded"].include(App.config.viewMode) ? (App.ui.Sidebar.init(),
                App.ui.Footer.init()) : (p.default.init(),
                App.ui.Footer.init(),
                App.config.editable && (m.default.init(),
                sideBar = new f.default),
                this.enableMobileFullScreen()));
                for (var e = document.querySelectorAll(".icon-svg"), t = 0; t < e.length; t++)
                    MM.ui.svgIcons(e[t]);
                "phantomjs" !== App.config.environment && KR.listenTo("icon-svg", MM.ui.svgIcons),
                App.ui.Options.init({
                    zoomIn: this.onZoomIn.bind(this),
                    zoomOut: this.onZoomOut.bind(this)
                })
            },
            enableMobileFullScreen: function() {
                MM.ua.isMobile && (canvas._mobileFullScreen = !0,
                Event.observe(canvas.el, "click", this.toggleMobileFullScreen))
            },
            disableMobileFullScreen: function() {
                MM.ua.isMobile && (canvas._mobileFullScreen = null,
                Event.stopObserving(canvas.el, "click", this.toggleMobileFullScreen))
            },
            toggleMobileFullScreen: function(e) {
                var t = Event.element(e);
                ("svg" == t.tagName.toLowerCase() || hasClassName(t, "tk_container") || t == canvas.el) && d.a.toggle({
                    skipBrowserUI: 1
                })
            },
            enableCssZoom: function() {
                Element.originalCumulativeScrollOffset || (Element.originalCumulativeScrollOffset = Element.cumulativeScrollOffset),
                Element.cumulativeScrollOffset = function(e) {
                    return e.ancestors().include(canvas.container) || e == canvas.container ? [canvas.getScrollLeft(), canvas.getScrollTop()] : Element.originalCumulativeScrollOffset(e)
                }
                ,
                Event.originalPointerX || (Event.originalPointerX = Event.pointerX),
                Event.pointerX = function(e) {
                    var t = e.element()
                      , n = Event.originalPointerX(e);
                    return Element.ancestors(t).include(canvas.container) ? App.ui.Zoom.transformCssZoomValue(n, !1) : n
                }
                ,
                Event.originalPointerY || (Event.originalPointerY = Event.pointerY),
                Event.pointerY = function(e) {
                    var t = e.element()
                      , n = Event.originalPointerY(e);
                    return Element.ancestors(t).include(canvas.container) ? App.ui.Zoom.transformCssZoomValue(n, !1) : n
                }
            },
            disableCssZoom: function() {
                Element.originalCumulativeScrollOffset && (Element.cumulativeScrollOffset = Element.originalCumulativeScrollOffset),
                Event.originalPointerX && (Event.pointerX = Event.originalPointerX),
                Event.originalPointerY && (Event.pointerY = Event.originalPointerY)
            },
            createGhost: function() {
                this._ghost = document.createElement("div"),
                this._ghost.id = "tk_ghost",
                this._ghost.style.display = "none",
                this.el.appendChild(this._ghost)
            },
            createMTGhost: function() {
                this._mtGhost = new Element("div",{
                    id: "mt_ghost",
                    style: "display: none;"
                }),
                this.container.parentNode.appendChild(this._mtGhost)
            },
            enableFileDrop: function() {
                var e = MM.utils.File.Droppables.get(this.el.id);
                e && MM.utils.File.Droppables.enable(e)
            },
            disableFileDrop: function() {
                var e = MM.utils.File.Droppables.get(this.el.id);
                e && MM.utils.File.Droppables.disable(e)
            },
            onFileDrop: function(e, t) {
                var n, i = h.default.dropWidget.getNode(e);
                if (i._listener.setLoadingOnDrop(),
                1 === t.images.length && t.images[0].type && App.config.fileTypes.image.include(t.images[0].type) && 0 === t.files.length) {
                    if (!App.hasFeature("attachments"))
                        return MM.ui.dialogs.dialogUpgrade("map_attachments"),
                        void i._listener.removeLoadingFromDrop();
                    n = MM.utils.File.uploadImageFile([i], t.images[0], {
                        successCallback: function(e, t) {
                            Tree.utils.setImage(new IdeaImage(e), t)
                        }
                    })
                } else
                    t.images.length > 0 || t.files.length > 0 ? sideBar.attachments.upload(t.images.concat(t.files), !1, i) || i._listener.removeLoadingFromDrop() : t.imageLinks.length > 0 ? h.default.dropWidget.uploadImageUrl(i, t.imageLinks[0]) : t.links.length > 0 ? h.default.dropWidget.uploadLink(i, t.links[0]) : n = {
                        error: I18n.t("js.unsupported_file_type")
                    };
                n && n.error && (i._listener.removeLoadingFromDrop(),
                Message.show(n.error, Message.ERROR))
            },
            _onDblClick: function(e) {
                var t = Event.element(e);
                if (t && "text" != t.type && !hasClassName(t, "tk_title") && !hasClassName(t, "tk_image") && (!t.up || !t.up(".note_content"))) {
                    var n = this._getCursorPosition(e);
                    this.root.node && this.root.node.addChild([n.x - canvas.root.pcenter[0], n.y - canvas.root.pcenter[1]])
                }
            },
            __onSetMapProperties: function(e) {
                removeClassName(canvas.el, "layout_" + App.config.layout.name);
                var t = App.Layouts.get(e.layout);
                App.config.layout = t,
                addClassName(canvas.el, "layout_" + App.config.layout.name),
                App.reloadViewSynchronously()
            },
            prepareExport: function() {
                if (App.config.editable && App.config.persistent && App.config.layout.elasticLayout) {
                    var e = new ChangeList;
                    e.doAutoAlignedChanges("NonPersistentReposition"),
                    ServerConnection.doChanges(e)
                }
            },
            getCenter: function() {
                return [parseInt(this.size[0] / 2), parseInt(this.size[1] / 2)]
            },
            getScrollCenter: function(e, t) {
                return t || (Position.prepare(),
                t = e.cumulativeOffset()),
                [this._centerHorizontalPosition(e, t[0]), this._centerVerticalPosition(e, t[1])]
            },
            getScrollLeft: function() {
                return App.ui.Zoom.transformCssZoomCoordinate(this.container.scrollLeft, "x", !1)
            },
            getScrollTop: function() {
                return App.ui.Zoom.transformCssZoomCoordinate(this.container.scrollTop, "y", !1)
            },
            setScrollLeft: function(e) {
                this.container.scrollLeft = App.ui.Zoom.transformCssZoomCoordinate(e, "x", !0)
            },
            setScrollTop: function(e) {
                this.container.scrollTop = App.ui.Zoom.transformCssZoomCoordinate(e, "y", !0)
            },
            getContainerSize: function() {
                return {
                    width: App.ui.Zoom.transformCssZoomValue(this.container.offsetWidth, !1),
                    height: App.ui.Zoom.transformCssZoomValue(this.container.offsetHeight, !1)
                }
            },
            getElementOffset: function(e) {
                var t = 0
                  , n = 0;
                do {
                    t += e.offsetTop || 0,
                    n += e.offsetLeft || 0,
                    e = e.offsetParent
                } while (e && e !== canvas.el);return [n, t]
            },
            getNodesFromRectangle: function(e) {
                var t = []
                  , n = canvas.root.dcontent.el.toRectangle();
                return e.overlaps(n) && t.push(canvas.root.node),
                canvas.root.children.map(function(e) {
                    return e.dcontainer
                }).findAll(function(t) {
                    var n = t.el.toRectangle();
                    return e.overlaps(n)
                }).each(function(n) {
                    descendants(n.el, function(e) {
                        return hasClassName(e, "tk_label")
                    }).each(function(n) {
                        var i = n.toRectangle();
                        e.overlaps(i) && t.push(tree.root.getChild(parseInt(n.id)))
                    })
                }),
                t
            },
            getRectangleFromNodes: function(e) {
                if (0 === e.length)
                    return null;
                var t = e.map(function(e) {
                    return e._listener.dcontent.el.toRectangle()
                });
                return t.inject(t[0], function(e, t) {
                    return Rectangle.max(e, t)
                })
            },
            scrollTo: function(e, t, n) {
                e[0] = e[0] || this.getScrollLeft(),
                e[1] = e[1] || this.getScrollTop(),
                t ? (e[0] = App.ui.Zoom.transformCssZoomCoordinate(e[0], "x", !0),
                e[1] = App.ui.Zoom.transformCssZoomCoordinate(e[1], "y", !0),
                n = Object.extend({
                    x: e[0],
                    y: e[1],
                    duration: Math.abs(e[0] - this.getScrollLeft()) > 200 || Math.abs(e[1] - this.getScrollTop()) > 200 ? .5 : .2
                }, n || {}),
                new Effect.Scroll(this.container,n)) : (this.setScrollLeft(e[0]),
                this.setScrollTop(e[1]))
            },
            scrollToElement: function(e, t, n, i) {
                t = t || e.cumulativeOffset(),
                null === n && (n = !0);
                var o, s, a = this.getScrollTop(), r = this.getScrollLeft(), l = App.ui.Zoom.transformCssZoomValue(UI.Registry.viewportOffset.top), c = App.ui.Zoom.transformCssZoomValue(UI.Registry.viewportOffset.right), d = App.ui.Zoom.transformCssZoomValue(UI.Registry.viewportOffset.bottom), h = App.ui.Zoom.transformCssZoomValue(15), u = e.getDimensions(), p = this.getContainerSize();
                i && (u.height > p.height - l - d || u.width > p.width - h - c) || (r + h > t[0] ? o = t[0] - h : r + p.width - c < t[0] + u.width && (o = t[0] - p.width + u.width + c + 10),
                a + l > t[1] ? s = t[1] - l - 10 : a + p.height - d < t[1] + u.height && (s = t[1] - p.height + u.height + d + 10),
                (o || s) && this.scrollTo([o, s], n))
            },
            scrollToNode: function(e, t) {
                if (e && !e.isVisible()) {
                    var n = this.getNodeCanvasOffset(e);
                    !n || 0 === n[0] && 0 === n[1] || this.scrollToElement(e.dcontent.el, n, t)
                }
            },
            liveUpdateHighlight: function(e) {
                App.config.liveUpdate && !ServerData.isLoggedIn && tree.finishedInitialization && ["embedded", "embedded_full", "public"].include(App.config.viewMode) && (canvas.scrollToNode(e._listener, !0),
                e._listener.highlight("#ffb347"))
            },
            _centerVerticalPosition: function(e, t) {
                var n = this.getContainerSize()
                  , i = UI.Registry.viewportOffset;
                return t += e.offsetHeight / 2,
                t -= (n.height + App.ui.Zoom.transformCssZoomValue(i.top - i.bottom)) / 2
            },
            _centerHorizontalPosition: function(e, t) {
                var n = this.getContainerSize()
                  , i = UI.Registry.viewportOffset;
                return t += e.offsetWidth / 2,
                t -= (n.width - App.ui.Zoom.transformCssZoomValue(i.right)) / 2
            },
            centerOnElement: function(e, t) {
                var n = this.getScrollCenter(e);
                this.scrollTo(n, !1, t)
            },
            enableScrollByDrag: function() {
                MM.ua.observeTouchSafe(this.el, "mousedown", this._onMD)
            },
            disableScrollByDrag: function() {
                MM.ua.stopObservingTouchSafe(this.el, "mousedown", this._onMD),
                MM.ua.stopObservingTouchSafe(document, "mousemove", this._onMM),
                MM.ua.stopObservingTouchSafe(document, "mouseup", this._onMU)
            },
            _onScrollMouseDown: function(e) {
                MM.ua.observeTouchSafe(document, "mousemove", this._onMM),
                MM.ua.observeTouchSafe(document, "mouseup", this._onMU),
                this._scrolling = !0,
                this._originalPosition = [e.clientX, e.clientY]
            },
            _onScrollMouseMove: function(e) {
                if (this._scrolled = !0,
                this._scrolling) {
                    e.preventDefault();
                    var t = Event.getTouchsafeCoordinates(e)
                      , n = [this.getScrollLeft() + App.ui.Zoom.transformCssZoomValue(this._originalPosition[0] - t[0]), this.getScrollTop() + App.ui.Zoom.transformCssZoomValue(this._originalPosition[1] - t[1])];
                    this.scrollTo(n),
                    this._originalPosition = t
                }
            },
            _onScrollMouseUp: function() {
                this._scrolled = this._scrolling = !1,
                MM.ua.stopObservingTouchSafe(document, "mousemove", this._onMM),
                MM.ua.stopObservingTouchSafe(document, "mouseup", this._onMU)
            },
            toEditMode: function($super) {
                $super(),
                removeClassName(this.el, "viewonly"),
                this._onDC = this._onDblClick.bindAsEventListener(this),
                Element.observe(this.el, "dblclick", this._onDC)
            },
            toViewMode: function($super) {
                $super(),
                addClassName(this.el, "viewonly"),
                this._onDC && Element.stopObserving(this.el, "dblclick", this._onDC)
            },
            initEditMode: function($super) {
                $super(),
                c.default.all.each(function(e) {
                    e.view.toEditMode()
                });
                var e = MM.utils.KeyEvent;
                this._navigationKeyMap.addBinding([{
                    key: [e.TAB, e.INSERT],
                    notCtrl: !0,
                    fn: this.onAdd.bind(this)
                }, {
                    key: e.ENTER,
                    notShift: !0,
                    notCtrl: !0,
                    fn: this.onAddSibling.bind(this)
                }, {
                    key: e.ENTER,
                    shift: !0,
                    fn: this.onAddSibling.bind(this, !0)
                }, {
                    key: e.ENTER,
                    ctrl: !0,
                    fn: this.onEdit
                }, {
                    key: e.F2,
                    notCtrl: !0,
                    fn: this.onEdit
                }, {
                    key: [e.DELETE, e.BACKSPACE],
                    fn: this.onRemove.bind(this)
                }, {
                    key: "c",
                    alt: !0,
                    fn: this.onAddConnection.bind(this)
                }, {
                    key: [e.F1, e.QUESTION_MARK],
                    fn: MM.ui.dialogs.dialogHelp
                }, {
                    key: [e.F6, e.HOME, e.END],
                    notCtrl: !0,
                    fn: this.onRecenter.bindAsEventListener(this, !0)
                }, {
                    key: e.LEFT,
                    fn: this.onSelectLeft.bindAsEventListener(this),
                    withEvent: !0
                }, {
                    key: e.RIGHT,
                    fn: this.onSelectRight.bindAsEventListener(this),
                    withEvent: !0
                }, {
                    key: e.UP,
                    notCtrl: !0,
                    notAlt: !0,
                    fn: this.onSelectUp.bindAsEventListener(this),
                    withEvent: !0
                }, {
                    key: e.DOWN,
                    notCtrl: !0,
                    notAlt: !0,
                    fn: this.onSelectDown.bindAsEventListener(this),
                    withEvent: !0
                }, {
                    key: e.UP,
                    ctrl: !0,
                    notShift: !0,
                    fn: this.onMoveUpDown.bind(this, !1)
                }, {
                    key: e.DOWN,
                    ctrl: !0,
                    notShift: !0,
                    fn: this.onMoveUpDown.bind(this, !0)
                }, {
                    key: e.UP,
                    shift: !0,
                    alt: !0,
                    fn: this.onSetStyle.bind(this, "fontSize", 1)
                }, {
                    key: e.DOWN,
                    shift: !0,
                    alt: !0,
                    fn: this.onSetStyle.bind(this, "fontSize", -1)
                }, {
                    key: "a",
                    ctrl: !0,
                    fn: this.onSelectAll.bindAsEventListener(this),
                    withEvent: !0
                }, {
                    key: e.F8,
                    fn: function() {
                        tree.autoCondense()
                    }
                }, {
                    key: e.F8,
                    shift: !0,
                    fn: this.onBeautifyMap.bind(this)
                }, {
                    key: e.SPACE,
                    notShift: !0,
                    fn: this.onToggleClosed.bind(this)
                }, {
                    key: "v",
                    ctrl: !0,
                    shift: !0,
                    fn: l.default.onPasteStyle.bind(l.default)
                }, {
                    key: "z",
                    ctrl: !0,
                    fn: this.onUndo.bind(this)
                }, {
                    key: "y",
                    ctrl: !0,
                    fn: this.onRedo.bind(this)
                }, {
                    key: "f",
                    ctrl: !0,
                    fn: this.onFind.bind(this)
                }, {
                    key: "f",
                    ctrl: !0,
                    alt: !0,
                    fn: this.onToggleFullscreen.bind(this)
                }, {
                    key: "o",
                    fn: function() {
                        App.mapsPopover && App.mapsPopover.show()
                    }
                }, {
                    key: "m",
                    withEvent: !0,
                    fn: function(e) {
                        m.default.initialized && canvas.selected && m.default.show(e, {
                            opener: canvas.selected.dcontent.el
                        })
                    }
                }, {
                    key: "b",
                    ctrl: !0,
                    fn: this.onSetStyle.bind(this, "bold", "toggle")
                }, {
                    key: "i",
                    ctrl: !0,
                    fn: this.onSetStyle.bind(this, "italic", "toggle")
                }, {
                    key: "p",
                    shift: !0,
                    alt: !0,
                    fn: this.onToggleSidebar.bind(this)
                }, {
                    key: "n",
                    shift: !0,
                    alt: !0,
                    fn: this.onShowDialog.bind(this, "notes")
                }, {
                    key: 229,
                    shift: !0,
                    alt: !0,
                    fn: this.onShowDialog.bind(this, "notes")
                }, {
                    key: "l",
                    shift: !0,
                    alt: !0,
                    fn: this.onShowDialog.bind(this, "links")
                }, {
                    key: "t",
                    shift: !0,
                    alt: !0,
                    fn: this.onShowDialog.bind(this, "tasks")
                }, {
                    key: "0",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 99)
                }, {
                    key: "1",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 1)
                }, {
                    key: "2",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 2)
                }, {
                    key: "3",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 3)
                }, {
                    key: "4",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 4)
                }, {
                    key: e.NINE_FIX,
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 99)
                }, {
                    key: e.F2,
                    ctrl: !0,
                    fn: function() {
                        sideBar.notes.focus()
                    }
                }, {
                    key: e.PLUS,
                    notCtrl: !0,
                    fn: this.onZoomIn.bind(this)
                }, {
                    key: e.MINUS,
                    notCtrl: !0,
                    fn: this.onZoomOut.bind(this)
                }, {
                    key: e.ESC,
                    notCtrl: !0,
                    fn: this.onCancelConnection.bind(this)
                }]),
                this._editKeyMap.addBinding([{
                    key: e.ENTER,
                    notShift: !0,
                    fn: function() {
                        canvas.selected.select(null, null, !0)
                    }
                }, {
                    key: e.ESC,
                    fn: function() {
                        canvas.selected.select()
                    }
                }, {
                    key: [e.TAB, e.INSERT],
                    notCtrl: !0,
                    fn: function() {
                        canvas.selected.select(null, null, !0),
                        canvas.onAdd()
                    }
                }, {
                    key: MM.ua.isBrowser("Internet Explorer") ? [e.LEFT, e.RIGHT] : [],
                    alt: !0,
                    fn: Prototype.emptyFunction
                }]),
                Draggables.removeObserver(this.el),
                Draggables.addObserver({
                    element: this.el,
                    onStart: function(e, t, n) {
                        canvas.onStart(t.element, n)
                    },
                    onEnd: function(e, t, n) {
                        canvas.onEnd(t.element, n)
                    },
                    onDrag: function(e, t, n) {
                        canvas.onDrag(t.element, n)
                    }
                }),
                this.shiftKeyPressListener = this.onShiftKeyPress.bindAsEventListener(this),
                this.shiftKeyReleaseListener = this.onShiftKeyRelease.bindAsEventListener(this),
                document.observe("keydown", this.shiftKeyPressListener),
                document.observe("keyup", this.shiftKeyReleaseListener),
                Modernizr.draganddrop && this.enableFileDrop(),
                l.default.enable(),
                this.contextMenu = new u.default(b,w)
            },
            initViewOnlyMode: function($super) {
                $super(),
                c.default.all.each(function(e) {
                    e.view.toViewMode()
                });
                var e = MM.utils.KeyEvent;
                this._viewOnlyKeyMap.addBinding([{
                    key: e.PLUS,
                    notCtrl: !0,
                    fn: this.onZoomIn.bind(this)
                }, {
                    key: e.MINUS,
                    notCtrl: !0,
                    fn: this.onZoomOut.bind(this)
                }, {
                    key: [e.F6, e.HOME, e.END],
                    notCtrl: !0,
                    fn: this.onRecenter.bindAsEventListener(this, !0)
                }, {
                    key: "0",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 99)
                }, {
                    key: "1",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 1)
                }, {
                    key: "2",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 2)
                }, {
                    key: "3",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 3)
                }, {
                    key: "4",
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 4)
                }, {
                    key: e.NINE_FIX,
                    alt: !0,
                    fn: this.onShowDetail.bind(this, 99)
                }]),
                Modernizr.draganddrop && this.disableFileDrop(),
                this._onDC && this.el.stopObserving("dblclick", this._onDC),
                l.default.disable()
            },
            disableEditMode: function() {
                this.el.stopObserving("dblclick", this._onDC),
                this._ghost && mm$(this._ghost.id) && Element.remove(this._ghost)
            },
            disableViewOnlyMode: function() {
                this.el.observe("dblclick", this._onDC)
            },
            onShiftKeyPress: function(e) {
                if (!this.shiftPressed) {
                    16 == (e.keyCode || e.charCode) && (this.shiftPressed = !0,
                    this.selected && this.selected.image && this.selected.image.dcontainer.onShiftPressed())
                }
            },
            onShiftKeyRelease: function(e) {
                16 === (e.keyCode || e.charCode) && (this.shiftPressed = !1,
                this.selected && this.selected.image && this.selected.image.dcontainer.onShiftReleased())
            },
            checkBounds: function() {
                if (!tree.notPainted && !App.config.fullScreenExport && tree.finishedInitialization)
                    for (var e = App.config.layout.canvasBounds(), t = 0; (e[0] > 0 || e[1] > 0) && t < 5; ) {
                        var n = e[0] + 200
                          , i = e[1] + 200;
                        this.size = Math.offset(this.size, [n, i]),
                        this.changeSize(),
                        this.container.scrollLeft += n / 2,
                        this.container.scrollTop += i / 2,
                        e = App.config.layout.canvasBounds(),
                        t++
                    }
            },
            getMapLeftSize: function() {
                for (var e = [canvas.root.dcontent.el.offsetWidth, canvas.root.dcontent.el.offsetHeight], t = rectangleLayouter.rectangles(), n = 0, i = 0, o = t.length; i < o; i++) {
                    var s = t[i];
                    s.p1.x < n && (n = s.p1.x)
                }
                return Math.max(-n, e[0] / 2)
            },
            getMapRightSize: function() {
                for (var e = [canvas.root.dcontent.el.offsetWidth, canvas.root.dcontent.el.offsetHeight], t = rectangleLayouter.rectangles(), n = 0, i = 0, o = t.length; i < o; i++) {
                    var s = t[i];
                    s.p2.x > n && (n = s.p2.x)
                }
                return Math.max(n, e[0] / 2)
            },
            getMapUpperSize: function() {
                for (var e = [canvas.root.dcontent.el.offsetWidth, canvas.root.dcontent.el.offsetHeight], t = rectangleLayouter.rectangles(), n = 0, i = 0, o = t.length; i < o; i++) {
                    var s = t[i];
                    s.p1.y < n && (n = s.p1.y)
                }
                return Math.max(-n, e[1] / 2)
            },
            getMapLowerSize: function() {
                for (var e = [canvas.root.dcontent.el.offsetWidth, canvas.root.dcontent.el.offsetHeight], t = rectangleLayouter.rectangles(), n = 0, i = 0, o = t.length; i < o; i++) {
                    var s = t[i];
                    s.p2.y > n && (n = s.p2.y)
                }
                return Math.max(n, e[1] / 2)
            },
            getMapSizeAndOffset: function(e) {
                if (App.config.layout.autoAlign) {
                    var t = mm$("tk_map").offsetLeft
                      , n = mm$("tk_map").offsetTop
                      , i = App.config.layout.mapSize();
                    if (e) {
                        var o = i.centerOffset;
                        o[0] < i.width / 2 ? (t -= 2 * (i.width - o[0]) - i.width,
                        i.width = 2 * (i.width - o[0])) : i.width = 2 * o[0],
                        o[1] < i.height / 2 ? (n -= 2 * (i.height - o[1]) - i.height,
                        i.height = 2 * (i.height - o[1])) : i.height = 2 * o[1]
                    }
                    var a = {
                        left: t,
                        top: n,
                        width: canvas.el.clientWidth,
                        height: canvas.el.clientHeight,
                        realWidth: i.width,
                        realHeight: i.height
                    }
                } else {
                    var r = canvas.getCenter()
                      , l = canvas.getMapLeftSize()
                      , c = canvas.getMapRightSize()
                      , d = canvas.getMapUpperSize()
                      , h = canvas.getMapLowerSize()
                      , u = c + l
                      , p = d + h
                      , t = r[0] - l
                      , n = r[1] - d;
                    e && (l < u / 2 ? (t -= 2 * c - u,
                    u = 2 * c) : u = 2 * l,
                    d < p / 2 ? (n -= 2 * h - p,
                    p = 2 * h) : p = 2 * d);
                    var a = {
                        left: t,
                        top: n,
                        width: canvas.el.clientWidth,
                        height: canvas.el.clientHeight,
                        realWidth: u,
                        realHeight: p
                    }
                }
                var f = [];
                s.Graphics.connectionstack.values().each(function(e) {
                    e.each(function(e) {
                        "path" === e.type && f.push(e.node)
                    })
                }),
                s.Graphics.allBoundaries.values().each(function(e) {
                    f.push(e.node)
                }),
                f.each(function(e) {
                    var t = e.getBBox();
                    t.x < a.left && (a.realWidth += a.left - t.x + 5,
                    a.left = t.x - 5),
                    t.y < a.top && (a.realHeight += a.top - t.y + 5,
                    a.top = t.y - 5),
                    t.x + t.width > a.left + a.realWidth && (a.realWidth += t.x + t.width - a.left - a.realWidth + 5),
                    t.y + t.height > a.top + a.realHeight && (a.realHeight += t.y + t.height - a.top - a.realHeight + 5)
                });
                for (var g = document.getElementsByClassName("connection_label"), m = 0, v = g.length; m < v; m++) {
                    var _ = g[m];
                    _.offsetLeft < a.left && (a.realWidth += a.left - _.offsetLeft + 5,
                    a.left = _.offsetLeft - 5),
                    _.offsetTop < a.top && (a.realHeight += a.top - _.offsetTop + 5,
                    a.top = _.offsetTop - 5),
                    _.offsetLeft + _.clientWidth > a.left + a.realWidth && (a.realWidth += _.offsetLeft + _.clientWidth - a.left - a.realWidth + 5),
                    _.offsetTop + _.clientHeight > a.top + a.realHeight && (a.realHeight += _.offsetTop + _.clientHeight - a.top - a.realHeight + 5)
                }
                return a
            },
            initSize: function() {
                this.width = this.size[0],
                this.height = this.size[1],
                (this.width < MM.ui.page.width || this.height < MM.ui.page.height) && (this.width = MM.ui.page.width,
                this.height = MM.ui.page.height,
                this.size = [this.width, this.height]),
                this.el.style.width = this.width + "px",
                this.el.style.height = this.height + "px",
                s.Graphics.resize(this.width, this.height)
            },
            changeSize: function() {
                this.initSize(),
                tree.notPainted || (canvas.root.reposition(),
                canvas.root.children.each(function(e) {
                    App.config.layout.rootChildrenPosition && e.rc.reposition()
                }),
                rectangleLayouter.updateAll())
            },
            destroy: function($super) {
                $super(),
                Draggables.removeObserver(this.el),
                this.disableConnections(),
                this.disableScrollByDrag(),
                this.disableCssZoom(),
                l.default.disable(),
                this.contextMenu && (this.contextMenu.stopObserving(),
                this.contextMenu = null),
                this.clearSelection(),
                this.disableSelections()
            },
            getNodeCanvasOffset: function(e) {
                return this.getElementOffset(e.dcontent.el)
            },
            isSelected: function(e) {
                return canvas.selected == e
            },
            onSelect: function(e, t, n, i) {
                if (!e.dcontent || document.body.contains(e.dcontent.el)) {
                    if (canvas.addFocus(),
                    n || this.scrollToNode(e),
                    canvas.isSelected(e))
                        return void (canvas.allSelected.indexOf(e) < 0 && canvas.allSelected.push(e));
                    var o = !1
                      , s = !1;
                    if (t && (o = MM.ua.isPlatform("Macintosh") ? t.metaKey : t.ctrlKey,
                    s = t.shiftKey),
                    e.image && e.image.dcontainer.toSelected(),
                    canvas.allSelected.length > 0 && (o || s || i ? canvas.allSelected.each(function(t) {
                        e != t && t.dcontent.toPartiallySelected(!0)
                    }) : (canvas.allSelected.each(function(t) {
                        e != t && (t.dcontent.toInactive(!0),
                        t.image && t.image.dcontainer.toInactive())
                    }),
                    canvas.allSelected = [])),
                    s && canvas.selected && e.node.parent && canvas.selected.node.parent == e.node.parent && !e.node.isRootC()) {
                        for (var a = canvas.selected.node.parent.children, r = a.indexOf(canvas.selected.node), l = a.indexOf(e.node), c = [], d = 0, h = a.length; d < h; d++)
                            d > Math.min(r, l) && d < Math.max(l, r) && c.push(a[d]);
                        r > l && c.reverse(),
                        c.each(function(e) {
                            e._listener.dcontent.toPartiallySelected(!0),
                            canvas.allSelected.push(e._listener)
                        })
                    }
                    canvas.selected = e,
                    canvas.allSelected.indexOf(e) < 0 && canvas.allSelected.push(e),
                    sideBar && sideBar.onSelectNode(),
                    canvas.selected.node.connections.each(function(e) {
                        e.view.showConnectionHandlers()
                    })
                }
            },
            onUnselect: function(e) {
                this.allSelected = this.allSelected.reject(function(t) {
                    return t.node == e.node
                }),
                e.node.connections.each(function(e) {
                    e.view.hideConnectionHandlers()
                })
            },
            onSelectAll: function(e) {
                this.scrollToNode(this.root),
                this.selected = this.root,
                this.allSelected = [this.root],
                this.root.eachChild(function(e) {
                    e !== this.root && (this.allSelected.push(e),
                    e.dcontent.toPartiallySelected(!0))
                }
                .bind(this)),
                this.root.select(e, !1, !0, !0)
            },
            __onStopEdit: function($super) {
                sideBar && sideBar.onSelectNode(canvas.selected),
                $super()
            },
            editMode: function($super) {
                $super(),
                this.disableScrollByDrag(),
                this._navigationKeyMap.disable(),
                this._editKeyMap.enable()
            },
            navigationMode: function($super) {
                $super(),
                this.addFocus(),
                this.enableScrollByDrag(),
                App.config.editable && App.config.currentlyEditable && (this._editKeyMap && this._editKeyMap.disable(),
                this._navigationKeyMap && this._navigationKeyMap.enable())
            },
            markDropTarget: function(e, t, n, i, o) {
                if (!n) {
                    canvas._ghost && !mm$(canvas._ghost.id) && canvas.createGhost();
                    var s = e.getGhostPosition(t, i, o);
                    canvas._ghost.style.left = s.pos[0] + "px",
                    canvas._ghost.style.top = s.pos[1] + "px",
                    canvas._ghost.style.backgroundPosition = s.offset[0] + "px " + s.offset[1] + "px",
                    Element.show(canvas._ghost)
                }
                canvas._index = t,
                canvas._marked != e && (canvas._marked && canvas._marked.unmark(),
                e.mark(),
                canvas._marked = e)
            },
            unmarkDropTarget: function() {
                canvas._marked && (canvas._marked.unmark(),
                canvas._marked = null,
                canvas._index = null,
                Element.hide(canvas._ghost))
            },
            onToggleClosed: function() {
                this.selected.node.toggleClosed()
            },
            onSelectLeft: function(e) {
                var t = this.allSelected
                  , n = e.shiftKey;
                t.each(function(t) {
                    if (t.node.isRoot()) {
                        if (App.config.layout.orientation === App.Layouts.orientation.down || App.config.layout.orientation === App.Layouts.orientation.up)
                            return;
                        if (n) {
                            t.getLeftChildren().each(function(t) {
                                t.dcontent.isPartiallySelected() || t.dcontent.isSelected() || t.select(e)
                            })
                        } else {
                            var i = canvas.root.getChildAtAngle(180);
                            !i || i.dcontent.isPartiallySelected() || i.dcontent.isSelected() || i.select(e)
                        }
                    } else if (App.config.layout.orientation === App.Layouts.orientation.down || App.config.layout.orientation === App.Layouts.orientation.up) {
                        var i = null;
                        t.node.isRootC() ? (o = t.node.getPrevSibling()) && (i = o._listener) : i = t.getLeftCounterpart(),
                        !i || i.dcontent.isPartiallySelected() || i.dcontent.isSelected() || i.select(e)
                    } else if (t.rc.orientation == App.Layouts.orientation.left)
                        if (n)
                            t.children.each(function(n) {
                                n.dcontent.isPartiallySelected() || n.dcontent.isSelected() || n.select(e, t.node.depth() + 1)
                            });
                        else {
                            var o = t.node.getMiddleChild();
                            !o || o._listener.dcontent.isPartiallySelected() || o._listener.dcontent.isSelected() || o._listener.select(e, t.node.depth() + 1)
                        }
                    else
                        t.parent ? t.parent.dcontent.isPartiallySelected() || t.parent.dcontent.isSelected() || t.parent.select(e, t.node.depth() - 1) : canvas.root.dcontent.isPartiallySelected() || canvas.root.dcontent.isSelected() || canvas.root.select(e)
                })
            },
            onSelectRight: function(e) {
                var t = this.allSelected
                  , n = e.shiftKey;
                t.each(function(t) {
                    if (t.node.isRoot()) {
                        if (App.config.layout.orientation === App.Layouts.orientation.down || App.config.layout.orientation === App.Layouts.orientation.up)
                            return;
                        if (n) {
                            t.getRightChildren().each(function(t) {
                                t.dcontent.isPartiallySelected() || t.dcontent.isSelected() || t.select(e)
                            })
                        } else {
                            var i = canvas.root.getChildAtAngle(0);
                            !i || i.dcontent.isPartiallySelected() || i.dcontent.isSelected() || i.select(e)
                        }
                    } else if (App.config.layout.orientation === App.Layouts.orientation.down || App.config.layout.orientation === App.Layouts.orientation.up) {
                        var i = null;
                        t.node.isRootC() ? (o = t.node.getNextSibling()) && (i = o._listener) : i = t.getRightCounterpart(),
                        !i || i.dcontent.isPartiallySelected() || i.dcontent.isSelected() || i.select(e)
                    } else if (t.rc.orientation == App.Layouts.orientation.right)
                        if (n)
                            t.children.each(function(n) {
                                n.dcontent.isPartiallySelected() || n.dcontent.isSelected() || n.select(e, t.node.depth() + 1)
                            });
                        else {
                            var o = t.node.getMiddleChild();
                            !o || o._listener.dcontent.isPartiallySelected() || o._listener.dcontent.isSelected() || o._listener.select(e, t.node.depth() + 1)
                        }
                    else
                        t.parent ? t.parent.dcontent.isPartiallySelected() || t.parent.dcontent.isSelected() || t.parent.select(e, t.node.depth() - 1) : canvas.root.dcontent.isPartiallySelected() || canvas.root.dcontent.isSelected() || canvas.root.select(e)
                })
            },
            onSelectUp: function(e) {
                var t = this.selected
                  , n = null
                  , i = null;
                if (t.node.isRoot())
                    App.config.layout.orientation !== App.Layouts.orientation.down && (n = canvas.root.getChildAtAngle(90),
                    i = null,
                    n && (n = n.node));
                else if (App.config.layout.orientation === App.Layouts.orientation.down || App.config.layout.orientation === App.Layouts.orientation.up) {
                    var o = t.node;
                    if (o.isRootC())
                        n = o.parent;
                    else {
                        var s = o.getPrevSibling();
                        if (s)
                            if (s.children.length > 0) {
                                for (; s.children.length > 0 && !s.isRootC(); )
                                    s = s.children[s.children.length - 1];
                                n = s
                            } else
                                n = s;
                        else
                            n = o.parent
                    }
                } else
                    n = t.node.getPrevSiblingExtended(canvas._rememberedDepth),
                    n && (n = n.getVisibleParent()),
                    n && canvas._rememberedDepth ? i = canvas._rememberedDepth : n && t.node.depth() > n.depth() && (i = t.node.depth());
                n && ((n._listener.dcontent.isSelected() || n._listener.dcontent.isPartiallySelected()) && (t.dcontent.toInactive(),
                n._listener.dcontent.toInactive()),
                n._listener.select(e, i))
            },
            onSelectDown: function(e) {
                var t = this.selected
                  , n = null
                  , i = null;
                if (t.node.isRoot())
                    App.config.layout.orientation !== App.Layouts.orientation.up && (n = canvas.root.getChildAtAngle(270),
                    i = null,
                    n && (n = n.node));
                else if (App.config.layout.orientation === App.Layouts.orientation.down || App.config.layout.orientation === App.Layouts.orientation.up) {
                    var o = t.node;
                    if (o.children.length > 0)
                        n = o.children[0];
                    else {
                        var s = o.getNextSibling();
                        if (s)
                            n = s;
                        else {
                            for (var a = o.parent; a && !a.getNextSibling() && !a.isRootC(); )
                                a = a.parent;
                            a && !a.isRootC() && (n = a.getNextSibling())
                        }
                    }
                } else
                    n = t.node.getNextSiblingExtended(canvas._rememberedDepth),
                    n && (n = n.getVisibleParent()),
                    n && canvas._rememberedDepth ? i = canvas._rememberedDepth : n && t.node.depth() > n.depth() && (i = t.node.depth());
                n && ((n._listener.dcontent.isSelected() || n._listener.dcontent.isPartiallySelected()) && (t.dcontent.toInactive(),
                n._listener.dcontent.toInactive()),
                n._listener.select(e, i))
            },
            onMoveUpDown: function(e) {
                var t = this.selected;
                if (!t.node.isRoot() && !t.node.isRootC()) {
                    var n;
                    (n = e ? t.node.getNextSibling() : t.node.getPrevSibling()) && Tree.utils.moveNodes([t.node], t.node.parent, t.node.parent.indexOf(n) + (e ? 1 : 0))
                }
            },
            onAdd: function(e) {
                e || (e = this.selected),
                e.node.addChild(App.config.layout.nextTopicPosition(e.node)),
                App.trigger(CustomEvents.CHILD_ADDED)
            },
            onAddSibling: function(e) {
                if (this.selected.node.isRoot())
                    this.selected.node.addChild();
                else if (this.selected.parent) {
                    var t = this.selected.parent.node
                      , n = App.config.layout.nextTopicPosition(t);
                    e ? t.addChild(n, t.rank(this.selected.node), this.selected.node.style) : t.addChild(n, t.rank(this.selected.node) + 1, this.selected.node.style)
                } else
                    this.root.node.addChild(null, null, this.selected.node.style)
            },
            onAddFloating: function() {
                if (mm$("tk_openerghost") && this.root.node) {
                    var e = mm$("tk_openerghost").cumulativeOffset()
                      , t = [e.left - this.root.pcenter[0], e.top - this.root.pcenter[1]];
                    this.root.node.addChild(t, null, null, !0)
                }
            },
            onRemove: function() {
                var e = this.allSelected.map(function(e) {
                    return e.node
                }).reject(function(e) {
                    return e.isRoot()
                });
                e = e.reject(function(t) {
                    return e.any(function(e) {
                        return t.getAncestors().include(e)
                    })
                }),
                Tree.utils.removeNodes(e)
            },
            onConnect: function() {
                var e = canvas.allSelected
                  , t = e.map(function(e) {
                    return e.node
                }).reject(function(e) {
                    return !e.isRootC() || !e.isFloating()
                });
                Tree.utils.connect(t)
            },
            onDisconnect: function() {
                var e = canvas.allSelected
                  , t = []
                  , n = {};
                e.each(function(e) {
                    var i = e.node;
                    if (!i.isRoot() && !i.isFloating() && (t.push(i),
                    !i.isRootC())) {
                        var o = this.getCenter()
                          , s = this.getNodeCanvasOffset(e);
                        n[i.id] = [s[0] - o[0] + (e.rc.orientation ? 15 : -25), s[1] - o[1]]
                    }
                }
                .bind(this)),
                Tree.utils.disconnect(t, n),
                this.scrollToNode(this.selected, !0)
            },
            onEdit: function() {
                canvas.selected.dcontent.toEditing(null, "rename")
            },
            highlightTopics: function() {
                this.allSelected.each(function(e) {
                    e.highlight("#ffb347")
                })
            },
            onSetGroupIcon: function(e, t, n) {
                Event.stop(e);
                var i = n.nextInGroup();
                i && (t._listener.select(),
                sideBar && sideBar.icons.setIcon(i.fullName()))
            },
            onSetIcon: function(e) {
                if (canvas.selected) {
                    var t = canvas.allSelected.map(function(e) {
                        return e.node
                    });
                    Tree.utils.setIcon(e, t)
                } else
                    Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
            },
            onRemoveIcon: function(e) {
                if (canvas.selected) {
                    var t = canvas.allSelected.map(function(e) {
                        return e.node
                    });
                    Tree.utils.removeIcon(e, t)
                } else
                    Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
            },
            onSetStyle: function(e, t) {
                if (canvas.selected) {
                    var n = canvas.allSelected.map(function(e) {
                        return e.node
                    });
                    Tree.utils.setStyle(e, t, n)
                } else
                    Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
            },
            onSetFullStyle: function(e) {
                if (canvas.selected) {
                    var t = canvas.allSelected.map(function(e) {
                        return e.node
                    });
                    Tree.utils.setFullStyle(e, t)
                } else
                    Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
            },
            onSetBoundary: function(e) {
                if (canvas.selected) {
                    var t = canvas.allSelected.map(function(e) {
                        return e.node
                    });
                    Tree.utils.setBoundary(e, t)
                } else
                    Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
            },
            onSetVideo: function(e, t) {
                if (canvas.allSelected.length > 0) {
                    var n = t ? [t] : canvas.allSelected.map(function(e) {
                        return e.node
                    });
                    Tree.utils.setVideo(e, n)
                } else
                    Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
            },
            onSetVote: function(e) {
                if (canvas.selected) {
                    var t = canvas.allSelected.map(function(e) {
                        return e.node
                    });
                    Tree.utils.setVote(e, t)
                } else
                    Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
            },
            onSetProperty: function(e, t, n) {
                if (canvas.selected) {
                    n = y({
                        onOk: function() {
                            return null
                        },
                        onCancel: function() {
                            return null
                        }
                    }, n);
                    var i = canvas.allSelected.map(function(e) {
                        return e.node
                    })
                      , o = function() {
                        Tree.utils.setProperty(e, t, i),
                        n.onOk()
                    };
                    i.length > 10 ? Dialog.confirm("<h2>" + I18n.t("js.edit_multiple") + "</h2><p>" + I18n.t("js.edit_multiple_text", {
                        v0: i.length + 1
                    }) + "</p>", {
                        windowParameters: {
                            height: 120,
                            width: 400
                        },
                        ok: function() {
                            o(),
                            this.close()
                        },
                        cancel: function() {
                            n.onCancel(),
                            this.close()
                        }
                    }) : o()
                } else
                    Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
            },
            onRemoveTask: function() {
                if (canvas.selected) {
                    var e = canvas.allSelected.map(function(e) {
                        return e.node
                    });
                    Tree.utils.removeTask(e)
                } else
                    Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE)
            },
            onAddConnection: function(e) {
                e && e.stop && e.stop(),
                this._nodeToConnect = this.selected,
                document.observe("click", this._onConnectToListener),
                document.observe("mousemove", this._onConnectionDragListener)
            },
            initConnections: function() {
                this._onConnectToListener = this.onConnectTo.bind(this),
                this._onConnectionDragListener = this.onConnectionDrag.bind(this),
                this._dragConnectionCanvas = new o.default
            },
            disableConnections: function() {
                document.stopObserving("click", this._onConnectToListener),
                document.stopObserving("mousemove", this._onConnectionDragListener),
                this._dragConnectionCanvas && this._dragConnectionCanvas.destroy()
            },
            onCancelConnection: function() {
                this._nodeToConnect && (document.stopObserving("click", this._onConnectToListener),
                document.stopObserving("mousemove", this._onConnectionDragListener),
                this._dragConnectionCanvas.clear(),
                this._nodeToConnect = null)
            },
            onConnectTo: function(e) {
                if (this._nodeToConnect) {
                    var t = e.findElement(".tk_label");
                    if (t) {
                        document.stopObserving("click", this._onConnectToListener),
                        document.stopObserving("mousemove", this._onConnectionDragListener),
                        this._dragConnectionCanvas.clear();
                        try {
                            var n = this._nodeToConnect.node
                              , i = t._listener.node;
                            if (this._nodeToConnect = null,
                            n === i)
                                return Message.show(I18n.t("js.connect_node_to_itself"), Message.NOTICE);
                            if (c.default.get(n.id, i.id))
                                return Message.show(I18n.t("js.connection_already_exists"), Message.NOTICE);
                            n.connectTo(i)
                        } catch (t) {
                            MM.error.reportException({
                                exception: t,
                                message: "Connection drawing problem in onConnectTo: ",
                                details: {
                                    from: n,
                                    to: i,
                                    event: e
                                }
                            })
                        }
                    }
                }
            },
            onConnectionDrag: function(e) {
                this.onConnectionDrag.start || (this.onConnectionDrag.start = this.onConnectionDrag.previous = [Event.pointerX(e), Event.pointerY(e)],
                this.onConnectionDrag.previousTs = new Date);
                var t = new Date;
                if (!(t - this.onConnectionDrag.previousTs < 200)) {
                    this.onConnectionDrag.previousTs = t;
                    var n = this._getCursorPosition(e)
                      , i = this.onConnectionDrag.previous;
                    this.onConnectionDrag.previous = n,
                    Math.abs(n.x - i.x) < 3 && Math.abs(n.y - i.y) < 3 || this._dragConnectionCanvas.drawTemporaryConnection(this._nodeToConnect, n)
                }
            },
            _getCursorPosition: function(e) {
                var t = 0
                  , n = 0;
                return e && (t = e.clientX,
                n = e.clientY),
                new Point([App.ui.Zoom.transformCssZoomCoordinate(t + this.container.scrollLeft, "x", !1), App.ui.Zoom.transformCssZoomCoordinate(n + this.container.scrollTop, "y", !1)])
            },
            _findAffectedRootChild: function(e, t, n) {
                var i, o = t[0] - this.getCenter()[0];
                i = this.root.children.filter(function(t) {
                    var n = t.node.pos[0] * o > 0 && t != e._listener;
                    return n && (t._positionOnCanvas = canvas.getNodeCanvasOffset(t)),
                    n
                }),
                i.sort(function(e, n) {
                    var i = e._positionOnCanvas[1] - t[1]
                      , o = n._positionOnCanvas[1] - t[1];
                    return Math.abs(i) - Math.abs(o)
                });
                var s = i[0];
                if (i.length > 0) {
                    var a = null;
                    if (s._positionOnCanvas[1] < t[1]) {
                        for (var r = 1; r < i.length; r++)
                            if (t[1] < i[r]._positionOnCanvas[1]) {
                                a = i[r];
                                break
                            }
                        n[1] = a ? (a.node.pos[1] - s.node.pos[1]) / 2 : 10 + s.dcontent.size()[1]
                    } else {
                        for (var r = 1; r < i.length; r++)
                            if (t[1] > i[r]._positionOnCanvas[1]) {
                                a = i[r];
                                break
                            }
                        n[1] = a ? (a.node.pos[1] - s.node.pos[1]) / 2 : -25
                    }
                } else
                    n[0] = o > 0 ? 100 : -100,
                    n[1] = -50;
                return s
            },
            onStart: function(e) {
                var t = e._listener;
                if (t) {
                    if (this.disableScrollByDrag(),
                    addClassName(document.body, "unselectable"),
                    addClassName(e, "dragging"),
                    this._scrolling = !1,
                    t.image && t.image.dcontainer.toInactive(),
                    t.video && t.video.showPlaceholder(),
                    canvas._originalPosition = canvas.getElementOffset(e),
                    (t.isSelected() || t.isPartiallySelected()) && (t.dcontent.disableSelecting(),
                    canvas.allSelected.length > 1)) {
                        var n = e.offsetWidth
                          , i = e.offsetHeight;
                        addClassName(e, "multiple"),
                        e.setStyle({
                            width: n + "px",
                            height: i + "px"
                        })
                    }
                    t.dcontainer.oldZ = t.dcontainer.el.style.zIndex,
                    t.dcontainer.el.style.zIndex = e.style.zIndex
                }
            },
            onDrag: function(e, t) {
                var n = e._listener;
                if (n) {
                    canvas.disableScrollByDrag(),
                    this._scrolling = !1,
                    n.node.isRootC() || n._tempRc || (n._tempRc = new i.default(n));
                    var o = n._tempRc || n.rc;
                    if (this._mtGhost || this.createMTGhost(),
                    App.ui.Footer.activeBar && "meistertask" === App.ui.Footer.activeBar && MM.utils.Meistertask.overlapsFooter(t))
                        return canvas._mt_drop = !0,
                        canvas.unmarkDropTarget(),
                        o.graphics.livePath && (o.graphics.livePath.remove(),
                        o.graphics.livePath = null),
                        o.graphics.rootPath && (o.graphics.rootPath.remove(),
                        o.graphics.rootPath = null),
                        e.style.opacity = 0,
                        MM.utils.Meistertask.onHover(n, t),
                        void (n.node.isRootC() ? (removeClassName(n.dcontent.el, "node"),
                        addClassName(n.dcontent.el, "root_child")) : (removeClassName(n.dcontent.el, "root_child"),
                        addClassName(n.dcontent.el, "node")));
                    canvas._mt_drop = !1,
                    hide(this._mtGhost),
                    e.style.opacity = "",
                    (!n.dcontent.isSelected() && !n.dcontent.isPartiallySelected() || (n.dcontent.isSelected() || n.dcontent.isPartiallySelected()) && 1 == canvas.allSelected.length) && (canvas._canvasDrop || canvas._marked === canvas.root ? (removeClassName(n.dcontent.el, "node"),
                    addClassName(n.dcontent.el, "root_child"),
                    o.redrawRootLine("live")) : canvas._marked ? canvas._marked.node.isRoot() && App.config.layout.name.indexOf("aligned") >= 0 ? (removeClassName(n.dcontent.el, "node"),
                    addClassName(n.dcontent.el, "root_child"),
                    o.redrawRootLine("live")) : (o.redrawRootLine("live", !0),
                    removeClassName(n.dcontent.el, "root_child"),
                    addClassName(n.dcontent.el, "node")) : (n._tempRc && n._tempRc.redrawRootLine("live", !0),
                    n.node.isRootC() ? o.redrawRootLine("live") : (removeClassName(n.dcontent.el, "root_child"),
                    addClassName(n.dcontent.el, "node"))))
                }
            },
            getDroppingNodes: function(e) {
                if (removeClassName(e, "multiple"),
                e._listener.dcontent.isSelected() || e._listener.dcontent.isPartiallySelected())
                    var t = canvas.allSelected;
                else
                    var t = [e._listener];
                return t = t.reject(function(e) {
                    return e.node.isRoot()
                })
            },
            onEnd: function(e, t) {
                var n = e._listener;
                if (n) {
                    if (canvas.enableScrollByDrag(),
                    removeClassName(document.body, "unselectable"),
                    removeClassName(e, "dragging"),
                    e.style.opacity = "",
                    n.node.isRootC() && (removeClassName(e, "node"),
                    addClassName(e, "root_child")),
                    n._tempRc && (n._tempRc.redrawRootLine("live", !0),
                    n._tempRc = null),
                    canvas._mt_drop) {
                        var i = this.getDroppingNodes(e);
                        i.each(function(e) {
                            e.dcontainer.resetPosition(),
                            e.dcontent.resetPosition(),
                            e.node.isRootC() && e.rc.redrawRootLine()
                        }),
                        MM.utils.Meistertask.onDrop(i),
                        canvas._mt_drop = !1,
                        App.trigger(CustomEvents.EXTERNAL_TASK_CREATED)
                    } else if (canvas._canvasDrop)
                        this.onCanvasDrop(e);
                    else if (canvas._marked)
                        this.onLblDrop(e),
                        App.trigger(CustomEvents.TOPIC_DROPPED);
                    else {
                        var i = this.getDroppingNodes(e);
                        i.each(function(e) {
                            e.dcontent.resetPosition(),
                            e.node.isRootC() && e.rc.redrawRootLine()
                        })
                    }
                    setTimeout(function() {
                        n.isSelected() ? n.dcontent.enableSelecting() : n.select(t, null, null, !0, n.isPartiallySelected()),
                        n.image && n.image.dcontainer.toSelected(),
                        n.video && n.video.removePlaceholder()
                    }, 0),
                    n.dcontainer.el.style.zIndex = e._listener.dcontainer.oldZ
                }
            },
            onCanvasDrop: function(e) {
                if (this._canvasDrop) {
                    var t = this.getDroppingNodes(e)
                      , n = e._listener
                      , i = [parseInt(e.style.left), parseInt(e.style.top)];
                    if (n.rc.orientation === App.Layouts.orientation.left && (i[0] -= n.dopener.size()[0] + 6),
                    "org_chart" === App.config.layout.name)
                        return void this.reOrderRootChildren(t, i);
                    var o;
                    if (n.node.isRootC())
                        o = Math.offset(n.node.pos, i);
                    else {
                        var s = canvas.getCenter();
                        o = Math.negativeOffset(Math.offset(canvas._originalPosition, i), s)
                    }
                    if (t.each(function(e) {
                        e.dcontent.resetPosition()
                    }),
                    !n.node.isRootC()) {
                        if (Math.diagonal([i[0] - e.offsetLeft, i[1] - e.offsetTop]) < 12)
                            return
                    }
                    var a = t.map(function(e) {
                        return e.node
                    });
                    t.each(function(e) {
                        e.rc.graphics && e.rc.graphics.livePath && e.rc.graphics.livePath.remove()
                    }),
                    Tree.utils.moveNodes(a, canvas.root.node, 0, null, o)
                }
            },
            onLblDrop: function(e) {
                if (e && removeClassName(e, "multiple"),
                e._listener.dcontent.isSelected() || e._listener.dcontent.isPartiallySelected())
                    var t = canvas.allSelected;
                else
                    var t = [e._listener];
                t = t.reject(function(e) {
                    return e.node.isRoot()
                }),
                t.each(function(e) {
                    e.dcontent.resetPosition()
                });
                var n = t.map(function(e) {
                    return e.node
                });
                canvas._marked.node.isRoot() ? Tree.utils.moveNodes(n, canvas._marked.node, 0, null, canvas._dropPosition) : Tree.utils.moveNodes(n, canvas._marked.node, canvas._index),
                canvas.unmarkDropTarget()
            },
            findAffected: function(e, t) {
                var n = this._getCursorPosition();
                e = Math.offset(e, [n.x, n.y]);
                var i = this.root.findAffected(e);
                if (i)
                    return this._canvasDrop = !1,
                    i;
                if (App.config.layout.name.indexOf("aligned") >= 0) {
                    this._canvasDrop = !1;
                    var o = [0, 0]
                      , s = this._findAffectedRootChild(t, e, o);
                    return this.markDropTarget(this.root, null, null, o, s),
                    this.root.el
                }
                return this._canvasDrop = !0,
                this.unmarkDropTarget(),
                this.el
            },
            onLblHover: function(e, t, n) {
                if (!canvas._mt_drop) {
                    var i = t._listener
                      , o = e._listener;
                    if (i.node === o.node || i.node.isChild(o.node))
                        return this._canvasDrop = !App.config.layout.autoAlign && o.node.isRootC() && (Math.abs(e.offsetTop) > 20 || Math.abs(e.offsetLeft) > 20),
                        void this.unmarkDropTarget();
                    var s, a, r;
                    if (n = 1 - n,
                    !i.node.isRootC() || App.config.layout.autoAlign && "org_chart" !== App.config.layout.name) {
                        var l = 1 - Position.overlap("horizontal", t);
                        n >= 0 && n <= 1 && (i.rc.orientation == App.Layouts.orientation.left && l < .4 || i.rc.orientation == App.Layouts.orientation.right && l > .6) ? (s = i,
                        a = n > .5 ? i.node.children.length : 0) : (s = i.parent,
                        s.node.isRoot() ? (r = [0, 0],
                        r[1] += n > .5 ? 10 + i.dcontent.size()[1] : -25) : (a = s.node.indexOf(i.node),
                        n > .5 && a++))
                    } else
                        s = i,
                        a = n > .5 ? i.node.children.length : 0;
                    s == canvas._marked && a == canvas._index || canvas.markDropTarget(s, a, null, r, i)
                }
            },
            reOrderRootChildren: function(e, t) {
                e.each(function(e) {
                    e.dcontent.resetPosition()
                }),
                t[0] += e[0].rc.vnode.dcontainer.el.offsetLeft,
                t[1] = e[0].dcontent.el.cumulativeOffset()[1] - canvas.getCenter()[1];
                var n = canvas.root.children.sort(function(e, t) {
                    return e.dcontainer.el.offsetLeft - t.dcontainer.el.offsetLeft
                });
                n = n.reject(function(t) {
                    return e.indexOf(t) >= 0
                });
                var i = n.map(function(e) {
                    return [e, [e.dcontainer.el.offsetLeft, e.node.pos[1]]]
                })
                  , o = n.detect(function(e) {
                    return e.dcontainer.el.offsetLeft > t[0]
                });
                if (o)
                    var s = n.indexOf(o);
                else
                    var s = n.length;
                e.each(function(e) {
                    i.insert([e, [t[0], t[1]]], s)
                });
                var a = [];
                i.each(function(e) {
                    var t = e[0].node;
                    t.isRootC() ? a.push(new RepositionChange({
                        idea_id: t.id,
                        type: "Reposition",
                        old_data: {
                            pos: t.pos
                        },
                        new_data: {
                            pos: e[1]
                        }
                    })) : a.push(new MoveChange({
                        idea_id: t.id,
                        type: "Move",
                        old_data: {
                            parent: t.parent.id,
                            rank: t.parent.rank(t),
                            pos: t.pos
                        },
                        new_data: {
                            parent: canvas.root.node.id,
                            rank: s + i.indexOf(e),
                            pos: e[1]
                        }
                    }))
                }),
                ChangeList.layoutAlteringChangeset(a)
            },
            onWheelScroll: function(e, t) {
                e.preventDefault(),
                e.stopPropagation();
                var n = Math.max(App.ui.Zoom.getZoomFactor(), 1) * App.ui.Zoom.getScaleAvg()
                  , i = t.deltaX / n
                  , o = t.deltaY / n;
                this.scrollTo([this.getScrollLeft() + i, this.getScrollTop() + o])
            },
            getZoomPosition: function() {
                return this.selected && this.selected.isVisible() ? this.selected.getCentralPosition() : null
            },
            onZoomIn: function() {
                return App.ui.Zoom.zoomIn(!0, !0, this.getZoomPosition()),
                App.config.currentlyEditable || this.disableEditMode(),
                !1
            },
            onZoomOut: function() {
                return App.ui.Zoom.zoomOut(!0, !0, this.getZoomPosition()),
                App.config.currentlyEditable || this.disableEditMode(),
                !1
            },
            onFind: function() {
                v.default.activate()
            },
            onToggleSidebar: function() {
                sideBar && sideBar.toggle(!0)
            },
            onShowDetail: function(e, t) {
                (t && canvas.selected ? canvas.selected : canvas.root).node.toggleClosedDetail(e)
            },
            onAlphabetize: function() {
                var e = new ChangeList
                  , t = canvas.selected.children.clone()
                  , n = [];
                t.sort(a.default.naturalCompare),
                t.each(function(e, t) {
                    var i = e.node
                      , o = new RemoveChange({
                        idea_id: i.id,
                        type: "Delete"
                    });
                    n.push(i.parent.rank(i)),
                    o.executeLocally()
                }),
                t.each(function(i, o) {
                    var s = i.node
                      , a = s.pos
                      , r = canvas.root.getSize();
                    if (canvas.selected.node.isRoot())
                        if (0 === o)
                            s.pos = [r[0] / 2 + 100, 0];
                        else {
                            var l = t[o - 1].node
                              , c = l._listener.dcontainer.el.offsetHeight + 10;
                            o > t.length / 2 - 1 && App.config.layout.elasticLayout ? s.pos = [-r[0] / 2 - 100, l.pos[1] - c] : s.pos = [r[0] / 2 + 100, l.pos[1] + c]
                        }
                    var d = new MoveChange({
                        idea_id: s.id,
                        type: "Move",
                        old_data: {
                            parent: canvas.selected.node.id,
                            pos: a,
                            rank: n[o]
                        },
                        new_data: {
                            parent: canvas.selected.node.id,
                            rank: o,
                            pos: s.pos
                        }
                    });
                    d.executeLocally(),
                    e.changes.push(d)
                }),
                App.config.layout.elasticLayout && e.doNodeLayoutingChanges(canvas.selected.node),
                ServerConnection.doChanges(e)
            },
            numberIt: function(e, t) {
                var n = new ChangeList;
                canvas.selected.eachChildWithCounter(function(t, i) {
                    if (0 != i) {
                        var o, s = t.node.getRawTitle(), a = /^(\d)+\. ([\s\S]*)/, r = a.exec(s);
                        o = e ? r ? r[2] : s : r ? i + ". " + r[2] : i + ". " + s,
                        n.changes.push(new RenameChange({
                            idea_id: t.node.id,
                            type: "Title",
                            old_data: {
                                title: s.title
                            },
                            new_data: {
                                title: t.node.escapeTitle(o)
                            }
                        }))
                    }
                }, 0, !1, !t),
                n.changes.each(function(e) {
                    e.execute(),
                    App.config.layout.elasticLayout && n.doNodeLayoutingChanges(e.node())
                }),
                ServerConnection.doChanges(n)
            },
            onNumbering: function() {
                var e = !1;
                canvas.selected.eachChild(function(t) {
                    if (!e) {
                        /^(\d)+\. (.*)/.exec(t.node.title) && (e = !0)
                    }
                }),
                e ? Dialog.confirm("<h2>" + I18n.t("js.numbering_heading") + '</h2><p class="hint">' + I18n.t("js.numbering_hint") + " " + I18n.t("js.what_to_do") + '</p><p class="clear nomargin"><input type="radio" value="true" name="renumber" id="renumber_nodes" class="radio" style="line-height:20px; margin:5px 5px 0 3px" checked="checked"/><label for="renumber_nodes" class="radio" style="line-height:20px">' + I18n.t("js.numbering_renumber") + '</label></p><p class="mb5"><input type="radio" value="false" name="renumber" id="clear_nodes" class="radio" style="line-height:20px; margin:5px 5px 0 3px"/><label for="clear_nodes" class="radio" style="line-height:20px">' + I18n.t("js.numbering_clear") + '</label></p><p><label for="number_recursive" class="radio" style="font-weight:normal;margin-left:3px"><input type="checkbox" id="number_recursive" class="checkbox" />Number all subtopics recursively</label></p>', {
                    buttonClass: "button",
                    okLabel: I18n.t("js.ok"),
                    windowParameters: {
                        height: 160,
                        width: 280
                    },
                    ok: function() {
                        canvas.numberIt(!mm$("renumber_nodes").checked, mm$("number_recursive").checked),
                        Dialog.cancelCallback()
                    }
                }) : this.numberIt()
            },
            onSplit: function(e) {
                var t, n = !1;
                canvas.selected.dcontent.isEditing() ? (canvas.selected.dcontent._discardChanges = !0,
                t = canvas.selected.dcontent.getWrappedValue(),
                n = canvas.selected.node.id < 0) : t = canvas.selected.node.getRawTitle();
                var i = e ? /^[·•-]+/ : /^[\s·•-]+/
                  , o = t.split("\n").collect(function(e) {
                    return e.replace(i, "")
                });
                return o = o.reject(function(e) {
                    return e.empty() || e.blank()
                }),
                {
                    inserting: n,
                    lines: o
                }
            },
            onSplitLines: function() {
                var e = this.onSplit(!1)
                  , t = e.lines.shift()
                  , n = [];
                e.inserting ? n.push({
                    title: t
                }) : n.push({
                    id: canvas.selected.node.id,
                    title: t
                });
                for (var i = 0; i < e.lines.length; i++)
                    n.push({
                        title: e.lines[i]
                    });
                (canvas.selected.node.isRoot() ? canvas.selected.node : canvas.selected.node.parent).addChildren(n),
                e.inserting && canvas.selected.select()
            },
            onSplitTree: function() {
                var e = this.onSplit(!0)
                  , t = e.lines.shift()
                  , n = [];
                e.inserting ? n.push({
                    id: --tree.uncommitedId,
                    title: t,
                    parent: canvas.selected.node.parent.id,
                    indent: 0
                }) : n.push({
                    id: canvas.selected.node.id,
                    title: t
                });
                for (var i = 0, o = e.lines.length; i < o; i++) {
                    for (var s = e.lines[i].replace(/\s+$/, "").gsub(/^\t/, " "), a = s.replace(/^\s*/, ""), r = s.length - a.length, l = n.length, c = (e.inserting || 0 === r && !canvas.selected.node.isRoot() ? canvas.selected.node.parent : canvas.selected.node).id; l--; )
                        if (n[l].indent < r) {
                            c = n[l].id;
                            break
                        }
                    n.push({
                        id: --tree.uncommitedId,
                        title: a,
                        parent: c,
                        indent: r
                    })
                }
                e.inserting && canvas.selected.select(),
                Tree.utils.addChildrenAsTree(n)
            },
            onBeautifyMap: function() {
                n.e(59).then(n.bind(null, "boRQ")).then(function() {
                    return MM.plugins.WunderMap.beautify()
                })
            },
            hasCustomStyles: function() {
                try {
                    tree.root.eachChild(function(e) {
                        if (e.style)
                            throw "Custom Style"
                    })
                } catch (e) {
                    if ("Custom Style" == e)
                        return !0;
                    throw e
                }
                return !1
            },
            onDoSetTheme: function(e, t) {
                var n = [];
                if (n.push(new MapThemeChange({
                    idea_id: canvas.root.node.id,
                    type: "MapTheme",
                    new_data: e.toJSON(),
                    old_data: App.config.mapTheme.toJSON()
                })),
                t) {
                    canvas.root.node.style && n.push(new TextStyleChange({
                        idea_id: canvas.root.node.id,
                        type: "TextStyle",
                        new_data: {
                            style: null
                        },
                        old_data: {
                            style: canvas.root.node.style.toJSON()
                        }
                    }));
                    for (var i = canvas.root.children, o = i.length; o > 0; )
                        o--,
                        i[o].node.style && n.push(new TextStyleChange({
                            idea_id: i[o].node.id,
                            type: "TextStyle",
                            new_data: {
                                style: null
                            },
                            old_data: {
                                style: i[o].node.style.toJSON()
                            }
                        }));
                    tree.root.eachChildWithoutSelf(function(e) {
                        e.isRootC() || e.style && n.push(new TextStyleChange({
                            idea_id: e.id,
                            type: "TextStyle",
                            new_data: {
                                style: null
                            },
                            old_data: {
                                style: e.style.toJSON()
                            }
                        }))
                    })
                } else
                    tree.root.eachChild(function(t) {
                        if (t.style) {
                            var i = e.styles.detect(function(e) {
                                return e.equals(t.style)
                            })
                              , o = null;
                            i && (o = e.styles.detect(function(e) {
                                return e.name === i.name
                            })),
                            o && n.push(new TextStyleChange({
                                idea_id: t.id,
                                type: "TextStyle",
                                new_data: {
                                    style: o.toJSON()
                                },
                                old_data: {
                                    style: t.style.toJSON()
                                }
                            }))
                        }
                    });
                tree.root.eachChild(function(t) {
                    if (t.boundary) {
                        var i = App.config.mapTheme.boundary_styles.detect(function(e) {
                            return t.boundary.style.equals(e)
                        })
                          , o = null;
                        i && (o = e.boundary_styles.detect(function(e) {
                            return e.name === i.name
                        })),
                        o && n.push(new EditBoundaryChange({
                            idea_id: t.id,
                            type: "EditBoundary",
                            new_data: o.toJSON(),
                            old_data: t.boundary.toJSON()
                        }))
                    }
                }),
                ChangeList.layoutAlteringChangeset(n),
                Amplitude.logEvent("change_map_theme", {
                    theme: e.name
                })
            },
            onSetTheme: function(e) {
                if (this.hasCustomStyles())
                    return void canvas.checkOverrideTheme(e);
                this.onDoSetTheme(e)
            },
            checkOverrideTheme: function(e) {
                Dialog.confirm("<h2>" + I18n.t("js.override_theme") + "</h2><p>" + I18n.t("js.override_theme_text") + '</p><p class="hint" style="width:100%">' + I18n.t("js.you_can_undo_afterwards") + "</p>", {
                    buttonClass: "button",
                    okLabel: I18n.t("js.override"),
                    cancelLabel: I18n.t("js.keep"),
                    windowParameters: {
                        height: 120,
                        width: 400
                    },
                    ok: function() {
                        this.close(),
                        canvas.onDoSetTheme(e, !0)
                    },
                    cancel: function() {
                        this.close(),
                        canvas.onDoSetTheme(e)
                    }
                })
            },
            applyThemeDetails: function() {
                var e = App.config.mapTheme;
                if (e.background.image) {
                    var t = e.background.image.url;
                    "phantomjs" === App.config.environment && e.background.image.url.indexOf("http") < 0 && (t = ServerData.siteUrl + t),
                    IdeaImage.downloadTokens && (t += (t.indexOf("?") > 0 ? "&" : "?") + IdeaImage.downloadTokens),
                    this.el.style.backgroundImage = "url(" + t + ")"
                } else
                    this.el.style.backgroundImage = "";
                e.background.color && "" !== e.background.color && (this.el.style.backgroundColor = "#" + e.background.color,
                this.container.style.backgroundColor = "#" + e.background.color),
                e.background.repeat ? this.el.style.backgroundRepeat = "repeat" : (this.el.style.backgroundRepeat = "no-repeat",
                this.el.style.backgroundPosition = "center center"),
                s.VGraphics.COLOR = "#" + e.line.color
            },
            removeTheme: function(e) {
                this.el.removeClassName(e.singleName() + (e.is_template ? "" : e.id)),
                !e.is_template && mm$("theme_css_" + e.id) && remove(mm$("theme_css_" + e.id))
            },
            applyTheme: function(e) {
                if (App.config.mapTheme = e,
                e.is_template)
                    this.loadThemeFonts(e, this.finalizeTheme.bind(this));
                else {
                    var t = mm$("theme_css_" + e.id);
                    t ? this.loadThemeFonts(e, this.finalizeTheme.bind(this)) : (t = document.createElement("link"),
                    t.setAttribute("id", "theme_css_" + e.id),
                    t.setAttribute("type", "text/css"),
                    t.setAttribute("rel", "stylesheet"),
                    t.setAttribute("href", "/themes/css/" + e.id),
                    t.setAttribute("media", "screen"),
                    document.head.appendChild(t),
                    t.onload = this.loadThemeFonts.bind(this, e, this.finalizeTheme.bind(this)))
                }
                return "undefined" == typeof sideBar || !sideBar || "undefined" != typeof RevisionBrowser && (RevisionBrowser.on || RevisionBrowser.painted) || (sideBar.styles.load(),
                sideBar.boundaries.load()),
                t
            },
            finalizeTheme: function() {
                if (this.el.addClassName(App.config.mapTheme.singleName() + (App.config.mapTheme.is_template ? "" : App.config.mapTheme.id)),
                this.applyThemeDetails(),
                tree && !tree.notPainted)
                    for (var e = this.root.children, t = 0, n = e.length; t < n; t++)
                        e[t].rc.redrawRootLine(),
                        e[t].rc.redrawLines();
                MapTheme.closeActivity(500)
            },
            loadExternalFonts: function(e) {
                var t = App.config.mapTheme.externalFonts();
                "phantomjs" === App.config.environment && (t = t.concat(Font.all.filter(function(e) {
                    return e.isExternal()
                })).uniqBy(function(e, t) {
                    return e.id === t.id
                })),
                0 === t.length ? e() : Font.loadExternal(t, e)
            },
            loadThemeFonts: function(e, t) {
                e.hasExternalFonts() ? Font.loadExternal(e.externalFonts(), t) : t()
            },
            onResize: function() {
                var e = MM.ui.page
                  , t = e.width
                  , n = e.height;
                this.container.style.width = t + "px",
                this.container.style.height = n + "px"
            },
            centeringCoordinates: function(e, t) {
                var n = this.root.dcontent.el
                  , i = n.cumulativeOffset()
                  , o = {
                    top: App.ui.Zoom.transformCssZoomValue(UI.Registry.viewportOffset.top, !1),
                    right: App.ui.Zoom.transformCssZoomValue(UI.Registry.viewportOffset.right, !1),
                    bottom: App.ui.Zoom.transformCssZoomValue(UI.Registry.viewportOffset.bottom, !1),
                    left: 0
                }
                  , s = App.ui.Zoom.transformCssZoomValue(20, !1)
                  , a = e.height - o.top - o.bottom
                  , r = e.width - o.right - o.left
                  , l = App.config.layout.mapSize()
                  , c = l.width
                  , d = l.height
                  , h = [n.offsetWidth, n.offsetHeight]
                  , u = "center"
                  , p = "center"
                  , f = [i[0] - (e.width + (o.left - o.right)) / 2 + h[0] / 2, i[1] - (e.height + (o.top - o.bottom)) / 2 + h[1] / 2];
                if (App.config.layout.orientation !== App.Layouts.orientation.down || t)
                    if (App.config.layout.orientation !== App.Layouts.orientation.left || t)
                        if (App.config.layout.orientation !== App.Layouts.orientation.right || t) {
                            if (c <= r && d <= a && !t) {
                                var g = canvas.getMapSizeAndOffset(!1);
                                f = [g.left - (r - c) / 2 - o.left, g.top - (a - d) / 2 - o.top]
                            }
                        } else
                            f[0] = c <= r ? i[0] - (r - c) / 2 : i[0] - o.left - s,
                            u = f[0] + s + "px";
                    else
                        f[0] = c <= r ? i[0] + h[0] - c - (r - c) / 2 : i[0] - r + h[0] + s,
                        u = f[0] + r + "px";
                else
                    f[1] = i[1] - o.top - s,
                    d <= a && (f[1] -= (a - d) / 2,
                    f[1] += h[1] / 2),
                    p = f[1] + s + "px";
                return {
                    left: f[0],
                    top: f[1],
                    transformLeft: u,
                    transformTop: p
                }
            },
            onRecenter: function(e, t, n) {
                var i = this.getContainerSize();
                Position.prepare();
                var o = this.centeringCoordinates(i, n);
                this.scrollTo([o.left, o.top], t)
            },
            closeTemporarilyOpen: function(e) {
                if (this.tempOpen && 0 !== this.tempOpen.length) {
                    var t = []
                      , n = null;
                    e && (n = e.getAncestors()),
                    this.tempOpen.each(function(e) {
                        !n || n.indexOf(e) < 0 ? e.toggleClosed(!0) : t.push(e)
                    }),
                    this.tempOpen = t
                }
            },
            getSelectedNodes: function() {
                return canvas.allSelected.map(function(e) {
                    return e.node
                })
            },
            clearSelection: function() {
                this.selected = null,
                this.allSelected = []
            },
            setupSelections: function() {
                "undefined" != typeof Selections && (Selections.setup("canvas"),
                Event.observe(this.el, "mousedown", this.onStartSelectionRectangleListener),
                Event.observe(this.el, "mouseup", this.onEndDragSelectionsListener))
            },
            disableSelections: function() {
                Event.stopObserving(this.el, "mousedown", this.onStartSelectionRectangleListener),
                Event.stopObserving(this.el, "mouseup", this.onEndDragSelectionsListener)
            },
            teardownSelections: function() {
                Selections.teardown(),
                this.disableSelections()
            },
            onStartSelectionRectangle: function(e) {
                (!e || e.ctrlKey || e.metaKey) && this.el.observe("mousemove", this.onDragSelectionRectangleListener)
            },
            onDragSelectionRectangle: function(e) {
                if (!this.selectionRectangle) {
                    var t = {
                        onStartDrag: this.disableScrollByDrag.bind(this),
                        onDrag: Prototype.emptyFunction,
                        onEndDrag: this.selectNodesFromSelectionRectangle.bind(this, e),
                        captureKeys: !1,
                        displayOnInit: !0,
                        label: !1,
                        initialEvent: e
                    };
                    this.selectionRectangle = new Selection.Base("canvas",t)
                }
            },
            onEndDragSelectionRectangle: function() {
                Event.stopObserving(this.el, "mousemove", this.onDragSelectionRectangleListener)
            },
            selectNodesFromSelectionRectangle: function(e) {
                canvas.enableScrollByDrag();
                var t = this.getNodesFromRectangle(new Rectangle(new Point(this.selectionRectangle.areaCoords.x1,this.selectionRectangle.areaCoords.y1),new Point(this.selectionRectangle.areaCoords.x2,this.selectionRectangle.areaCoords.y2)));
                if (t.length > 0) {
                    canvas.allSelected.each(function(e) {
                        e.dcontent.toInactive(!0),
                        e.image && e.image.dcontainer.toInactive()
                    }),
                    canvas.allSelected = [];
                    for (var n = t.length; n--; )
                        t[n]._listener.select(e)
                }
                this.selectionRectangle.remove(),
                delete this.selectionRectangle
            }
        });
        t.default = C
    },
    "i5N/": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("Z6lC")
          , o = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
            }
            return e
        }
          , s = Class.create(i.default, {
            initialize: function($super, e) {
                $super(o({
                    type: "videos"
                }, e))
            },
            query: function($super, e, t) {
                t = Object.extend({
                    per_page: 10
                }, t),
                $super(e, t)
            },
            queryVideoDetails: function(e, t) {
                new Ajax.Request("/skoletube/video_title",{
                    method: "get",
                    parameters: {
                        id: e
                    },
                    onSuccess: function(e) {
                        var n = e.responseText.evalJSON();
                        n.error ? Message.show(n.error, Message.ERROR) : n.title ? t.onComplete([{
                            id: "",
                            url: "",
                            title: n.title
                        }]) : t.onComplete([])
                    }
                })
            },
            transformResults: function(e) {
                return e.map(function(e) {
                    var t = e.video_url.match(/(?:https?:\/\/(?:www\.)?|www\.|^).*(?:skoletube\.dk\/(?:video|e)\/)(?:(?:[\d]+\/([a-zA-Z0-9]{20}))|([a-zA-Z0-9]{20}|\d+))/)
                      , n = t.last() || t[t.length - 2];
                    return {
                        id: e.VID,
                        url: n,
                        title: e.title
                    }
                })
            }
        });
        t.default = s
    },
    iB8H: function(e, t, n) {
        var i = n("Ne51")
          , o = n("jrlN")
          , s = n("Gdal")
          , a = n("ybj2")
          , r = s(function(e, t) {
            return a(e) ? i(e, o(t, 1, a, !0)) : []
        });
        e.exports = r
    },
    iy3A: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("j1ii")
              , s = n("A9ap")
              , a = n("aEw3")
              , r = n("YmTu")
              , l = n("lfAS")
              , c = function() {
                function e(e, t) {
                    var n = []
                      , i = !0
                      , o = !1
                      , s = void 0;
                    try {
                        for (var a, r = e[Symbol.iterator](); !(i = (a = r.next()).done) && (n.push(a.value),
                        !t || n.length !== t); i = !0)
                            ;
                    } catch (e) {
                        o = !0,
                        s = e
                    } finally {
                        try {
                            !i && r.return && r.return()
                        } finally {
                            if (o)
                                throw s
                        }
                    }
                    return n
                }
                return function(t, n) {
                    if (Array.isArray(t))
                        return t;
                    if (Symbol.iterator in Object(t))
                        return e(t, n);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }()
              , d = Class.create(s.default, {
                initialize: function($super, e, t) {
                    $super("attachments", e, t),
                    this.dropzone = mm$("file_dropzone"),
                    this.list = mm$("attachment_list"),
                    Modernizr.draganddrop ? (addClassName(this.el, "droppable"),
                    this.enableFileDrop()) : hide(this.dropzone)
                },
                show: function($super, e) {
                    l.a.init({
                        onPick: this.onDropboxAttach.bind(this)
                    }),
                    $super(e),
                    this.visible && this.buildPopover()
                },
                buildPopover: function() {
                    var t = this
                      , n = ["local-file", "dropbox", "google-drive", "evernote"];
                    ServerData.isLoggedIn && ServerData.user.unilogin && n.push("skoletube"),
                    e.render(i.createElement(a.a, {
                        className: "h-flex-row ph-10 pt-15",
                        onShow: function() {
                            return App.trigger(CustomEvents.FILE_UPLOAD)
                        },
                        opener: i.createElement(r.a, {
                            className: "tooltip",
                            title: I18n.t("js.add_file") + "...",
                            opts: {
                                name: "plus",
                                size: 16,
                                color: "blue"
                            }
                        })
                    }, n.map(function(e, n) {
                        return i.createElement("div", {
                            key: n,
                            className: "mh-10 h-flex-column align-items-center ws-nowrap h-cp",
                            onClick: t.onPopoverSelect.bind(t, e)
                        }, i.createElement(r.a, {
                            className: "rad-15px h-overflow",
                            opts: {
                                name: "service-" + e,
                                size: 60
                            }
                        }), i.createElement("div", {
                            className: "fs-13 mt-8"
                        }, I18n.t("js.from_" + e.gsub("-", "_"))))
                    })), mm$("attachments-menu-container"))
                },
                onPopoverSelect: function(e) {
                    var t = this;
                    if (GeneralPopover.closeOpenPopover(),
                    !App.hasFeature("attachments"))
                        return void MM.ui.dialogs.dialogUpgrade("map_attachments");
                    switch (e) {
                    case "local-file":
                        var i = new Element("input",{
                            type: "file",
                            multiple: "multiple"
                        });
                        i.onchange = function() {
                            return t.upload(i.files, !0)
                        }
                        ,
                        i.click();
                        break;
                    case "google-drive":
                        MM.ui.googlePicker.create();
                        break;
                    case "dropbox":
                        l.a.create();
                        break;
                    case "evernote":
                        MM.ui.dialogs.show("upload_evernote", {
                            controller: "dialog",
                            width: 350,
                            noHelp: !0
                        });
                        break;
                    case "skoletube":
                        Promise.all([n.e(56).then(n.bind(null, "PXir")), n.e(52).then(n.bind(null, "TMGa"))]).then(function(e) {
                            var n = c(e, 1)
                              , i = n[0];
                            t.skoletubeSearch = i.default,
                            t.skoletubeSearch.init({
                                onAttach: t.uploadFromUrl.bind(t)
                            }),
                            t.skoletubeSearch.showDialog()
                        })
                    }
                },
                updateListing: function() {
                    var e = canvas.selected.node;
                    this.list.innerHTML = "",
                    e.attachments.each(function(e) {
                        this.addAttachmentName(e)
                    }
                    .bind(this)),
                    !Modernizr.draganddrop || e.attachments.length > 0 ? hide(this.dropzone) : show(this.dropzone)
                },
                reset: function(e) {
                    this.toUploadAttachments = [],
                    this.failedAttachments = [],
                    this.toUploadAttachmentsSize = e || 0
                },
                beforeUpload: function() {
                    _Element.visible(this.dropzone) && hide(this.dropzone)
                },
                upload: function(e, t, n) {
                    if (!App.hasFeature("attachments"))
                        return void MM.ui.dialogs.dialogUpgrade("map_attachments");
                    if (canvas.selected && e && 0 !== e.length) {
                        this.reset();
                        var i = "";
                        n = n ? Array.isArray(n) ? n : [n] : canvas.getSelectedNodes(),
                        this.beforeUpload();
                        for (var o = 0, s = e.length; o < s; o++) {
                            var a = e[o];
                            if (t)
                                var r = this.createProgressBar();
                            var l = MM.utils.File.uploadAttachmentFile(n, a, {
                                onProgress: this.updateProgress.bind(this, r),
                                timeoutDelay: 60,
                                onTimeOut: this.onAttachmentFailed.bind(this, n, a, r),
                                successCallback: this.onFileUploadSuccessful.bind(this, r),
                                errorCallback: this.onFileUploadFailed.bind(this, r, a, n)
                            });
                            l && l.error ? (r && Element.remove(r),
                            i += (i ? "<br />" : "") + l.error) : this.toUploadAttachmentsSize++
                        }
                        return i && Message.show(i, Message.ERROR),
                        mm$("attachment_file") && (mm$("attachment_file").value = ""),
                        this.toUploadAttachmentsSize
                    }
                },
                uploadFromUrl: function(e) {
                    if (!canvas.selected)
                        return void Message.show(I18n.t("js.please_select_an_idea_first"), Message.NOTICE);
                    this.reset(e.length),
                    e.each(function(e) {
                        var t = e.name + (e.extension ? "." + e.extension : "");
                        this.uploadExternalFile("generic_files/upload_from_url", e, {
                            requestHeaders: {
                                "X-File-Name": t.replace(/[^\x00-\xff]/g, "?")
                            },
                            parameters: {
                                attachment_url: e.url,
                                attachment_name: e.name,
                                attachment_extension: e.extension
                            }
                        })
                    }
                    .bind(this))
                },
                tryAddAttachment: function(e) {
                    this.toUploadAttachmentsSize === this.toUploadAttachments.length + this.failedAttachments.length && (Tree.utils.addAttachments(this.toUploadAttachments, e),
                    this.showFailedAttachmentsMessage(),
                    this.reset(),
                    App.trigger(CustomEvents.ATTACHMENT_UPLOADED))
                },
                onFileUploadSuccessful: function(e, t, n) {
                    this.addAttachment(n, new o.default(t), e)
                },
                onFileUploadFailed: function(e, t, n) {
                    this.onAttachmentFailed(n, t, e)
                },
                addAttachment: function(e, t, n) {
                    this.changeProgressId(n, t),
                    this.toUploadAttachments.push(t),
                    this.tryAddAttachment(e)
                },
                onAttachmentFailed: function(e, t, n) {
                    n && Element.remove(n),
                    this.failedAttachments.push(t),
                    this.tryAddAttachment(e)
                },
                showFailedAttachmentsMessage: function() {
                    if (0 !== this.failedAttachments.length) {
                        var e = "<br/>" + this.failedAttachments.map(function(e) {
                            return e.name
                        }).join("<br/>");
                        Message.show(I18n.t("js.the_following_files_failed_s", {
                            v0: e
                        }), Message.ERROR, 5)
                    }
                },
                onAddAttachment: function(e) {
                    this.removeProgress(e),
                    this.addAttachmentName(e)
                },
                addAttachmentName: function(e) {
                    if (canvas.selected.node.attachments.find(function(t) {
                        return t.id === e.id
                    })) {
                        var t = new Element("div",{
                            id: "attachment_" + e.id,
                            className: "h-flex-row mb-5 h-hover-parent p-r"
                        })
                          , n = new Element("a",{
                            id: "remove_" + t.id,
                            href: "#",
                            className: "h-show-on-hover p-a ar-0",
                            title: I18n.t("js.remove_attachment")
                        }).insert(MM.ui.icon({
                            name: "closer",
                            size: 12
                        }))
                          , i = new Element("a",{
                            href: "#",
                            className: "ellipsis maxw-90% ml-10 c-grey-light",
                            title: e.size.toHumanSize(1)
                        }).update(e.filename);
                        i.onclick = function() {
                            return App.ui.Preview.showPopup(e.id, canvas.selected.node.id)
                        }
                        ,
                        n.onclick = function() {
                            return canvas.selected.node.removeAttachment(e),
                            !1
                        }
                        ,
                        t.insert(MM.ui.icon({
                            name: "file-format-" + e.getFileType(),
                            size: 20
                        })),
                        t.appendChild(i),
                        t.appendChild(n),
                        this.list.appendChild(t)
                    }
                },
                onRemoveAttachment: function(e) {
                    var t = mm$("attachment_" + e.id);
                    t && (Element.remove(t),
                    0 === canvas.selected.node.attachments.length && show(this.dropzone))
                },
                createProgressBar: function() {
                    var e = new Element("progress",{
                        min: 0,
                        max: 100,
                        value: 0
                    });
                    return this.list.appendChild(e),
                    e
                },
                changeProgressId: function(e, t) {
                    e && (e.id = this.createProgressBarId(t))
                },
                createProgressBarId: function(e) {
                    return "attachment_progress_" + e.id
                },
                updateProgress: function(e, t) {
                    e && (t -= 5) > e.value && (e.value = t)
                },
                removeProgress: function(e) {
                    var t = mm$(this.createProgressBarId(e));
                    t && Element.remove(t)
                },
                onSelectNode: function() {
                    this.updateListing()
                },
                enableFileDrop: function() {
                    this.el.addEventListener("dragover", function(e) {
                        e.preventDefault()
                    }, !1),
                    this.el.addEventListener("drop", this.onFileDrop.bind(this), !1)
                },
                onFileDrop: function(e) {
                    var t = e.dataTransfer;
                    if (t.files && t.files.length > 0) {
                        var n = t.files;
                        this.upload(n, !0)
                    }
                    e.stopPropagation(),
                    e.preventDefault()
                },
                onDropboxAttach: function(e) {
                    this.reset(1),
                    this.uploadExternalFile("/external/dropbox/attachment", e, {
                        parameters: {
                            file: e.link,
                            name: e.name
                        }
                    })
                },
                onGoogleDriveAttach: function(e) {
                    this.reset(1),
                    this.uploadExternalFile("/external/drive/attachment", e, {
                        parameters: {
                            file_id: e.id
                        }
                    })
                },
                onEvernoteAttach: function(e, t) {
                    this.reset(1),
                    this.uploadExternalFile("/external/evernote/attachment", e || t, {
                        parameters: {
                            guid: e.guid,
                            business: t
                        }
                    })
                },
                uploadExternalFile: function(e, t, n) {
                    this.beforeUpload();
                    var i = this.createProgressBar()
                      , o = canvas.getSelectedNodes()
                      , n = Object.extend({
                        onProgress: function(e) {
                            e.lengthComputable && this.updateProgress(i, 100 * e.loaded / e.total)
                        }
                        .bind(this),
                        successCallback: this.onFileUploadSuccessful.bind(this, i),
                        errorCallback: this.onFileUploadFailed.bind(this, i, t, o)
                    }, n);
                    MM.utils.File.uploadAttachment(o, e, n)
                },
                onSkoletubeLogin: function() {
                    MM.external.Skoletube.Groups && MM.external.Skoletube.Groups.load("attachments", this.skoletubeSearch.doSearch.bind(this.skoletubeSearch))
                },
                onCancelSkoletubeLogin: function() {
                    MM.ui.dialogs.close("skoletubelogin"),
                    MM.ui.dialogs.close("upload_skoletube")
                }
            });
            t.default = d
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    izUU: function(e, t) {
        function n() {}
        e.exports = n
    },
    "j0/H": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e) {
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function o(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function s(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var a = n("PlM2")
              , r = n("YmTu")
              , l = n("ky7I")
              , c = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , d = function(t) {
                function n(e) {
                    i(this, n);
                    var t = o(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
                    return t.state = {
                        selectedIcons: []
                    },
                    t
                }
                return s(n, t),
                c(n, [{
                    key: "update",
                    value: function(e) {
                        var t = this;
                        this.state.selectedIcons.map(function(e) {
                            t[e.fullName()].setState({
                                selected: !1
                            })
                        }),
                        e.map(function(e) {
                            t[e.fullName()].setState({
                                selected: !0
                            })
                        }),
                        this.setState({
                            selectedIcons: e
                        })
                    }
                }, {
                    key: "shouldComponentUpdate",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this
                          , n = Icon.allInSection(this.props.library, this.props.section)
                          , i = n.map(function(n, i) {
                            return e.createElement(a.default, {
                                ref: function(e) {
                                    return t[n.fullName()] = e
                                },
                                className: "lib_" + Icon.sectionToString(n.library, n.section),
                                icon: n,
                                index: i,
                                key: "iconWidgets_expanded_" + n.id,
                                onSelectIcon: t.props.onSelectIcon
                            })
                        });
                        return e.createElement("div", {
                            id: "lib_" + this.props.name
                        }, e.createElement(l.a, {
                            onEnter: function(e) {
                                var n = (e.previousPosition,
                                e.currentPosition);
                                e.event;
                                n === l.a.inside && setTimeout(function() {
                                    t.props.onScrollTo(t.props.name)
                                }, 50)
                            },
                            onLeave: function(e) {
                                var n = (e.previousPosition,
                                e.currentPosition);
                                e.event;
                                n === l.a.below && t.props.onScrollTo(t.props.prevName)
                            }
                        }), e.createElement("div", {
                            className: "mt-10 ml-18 pb-0 h-flex-row"
                        }, e.createElement(r.a, {
                            className: "mr-14",
                            opts: {
                                name: this.props.icon,
                                color: "grey-lighter",
                                size: this.props.iconSize,
                                clickable: !1
                            }
                        }), e.createElement("span", {
                            className: "fw-500"
                        }, I18n.t("js.icons.library." + this.props.name))), e.createElement("grid", {
                            className: "icon-grid grid g-7 p-10 pt-5"
                        }, i))
                    }
                }]),
                n
            }(e.Component);
            t.default = d
        }
        .call(t, n("nakD"))
    },
    j1ii: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            id: null,
            filename: null,
            url: null,
            contentType: null,
            size: null,
            createdAt: null,
            owner: null,
            initialize: function(e) {
                this.id = e.id,
                this.filename = e.filename,
                this.url = e.url,
                this.contentType = e.contentType,
                this.size = e.size,
                this.createdAt = e.createdAt,
                this.owner = e.owner,
                i.all.push(this)
            },
            equals: function(e) {
                return this.id == e.id
            },
            isImage: function(e) {
                return e ? 0 === this.contentType.indexOf("image/" + e) : App.config.fileTypes.image.include(this.contentType)
            },
            isSvg: function() {
                return 0 === this.contentType.indexOf("image/svg")
            },
            isMusic: function() {
                return 0 === this.contentType.indexOf("audio/")
            },
            isDocument: function() {
                return App.config.fileTypes.document.any(function(e) {
                    return this.filename.match("." + e + "$")
                }
                .bind(this))
            },
            isArchive: function() {
                return App.config.fileTypes.archive.any(function(e) {
                    return this.filename.match("." + e + "$")
                }
                .bind(this))
            },
            isHtml: function() {
                return App.config.fileTypes.html.include(this.contentType)
            },
            isEvernote: function() {
                return "application/evernote" === this.contentType
            },
            getFileType: function() {
                var e = this.contentType;
                if (e) {
                    if (/^image\/(jpeg|png|gif|bmp|svg|vnd.adobe.photoshop)/.test(e))
                        return "image";
                    if (/^text\/(html|css|x-java-source|java|x-c\+\+|yaml|xul)|^application\/(javascript|json|xml|(xhtml|xslt)\+xml)/.test(e))
                        return "code";
                    if (/^text\/(csv|tab)|^application\/(msword|vnd.openxmlformats\-|vnd.oasis.opendocument)/.test(e))
                        return "text";
                    if (/^audio\//.test(e))
                        return "music";
                    if (/^application\/(zip|x-.*zip.+|x-tar|.+-archive|.+-compressed|x-stuffitx?)/.test(e))
                        return "archive";
                    if (this.isEvernote())
                        return "evernote"
                }
                var t = this.filename.replace(/^.+?(?:\.(\w+))?$/, "$1").toLowerCase();
                if (/^(png|jpe?g|gif|bmp|svg|psd|sketch|pages|jp2|jpx|jxr|webp)$/.test(t))
                    return "image";
                if (/^(htm|x?html|js|json|s?css|coffee|cson|xml|xslt?|xul|yaml|java|rb|c|cpp|h|hpp|php\d?)$/.test(t))
                    return "code";
                if (/^(txt|docx?|xlsx?|pdf|csv|tab|rtfd?|otf|ods|odg|odp|odf|md|markdown|ini|cfg)$/.test(t))
                    return "text";
                if (/^(mp3|flac|ogg|oga|m4a|aiff|wav|aac|amr|wma|mpc)$/.test(t))
                    return "music";
                if (/^(zip|tar|7z|rar|bzip2|iso|img|gz)/.test(t))
                    return "archive";
                if (e) {
                    if (/^image\//.test(e))
                        return "image";
                    if (/^text\//.test(e))
                        return "text"
                }
                return "generic"
            },
            isGoogleViewerSupported: function() {
                var e = ["svg", "eps", "ps", "ttf", "xps", "tiff", "txt"]
                  , t = this
                  , n = e.any(function(e) {
                    return t.filename.match("." + e + "$")
                });
                return this.isImage("tif") || this.isDocument() || n
            },
            isBoxViewerSupported: function() {
                if (this.isEvernote())
                    return !1;
                var e = this;
                return ["as", "as3", "asm", "bat", "c", "cc", "cmake", "cpp", "cs", "css", "csv", "cxx", "diff", "doc", "docx", "erb", "gdoc", "groovy", "gsheet", "h", "haml", "hh", "htm", "html", "java", "js", "less", "m", "make", "ml", "mm", "msg", "ods", "odt", "pdf", "php", "pl", "properties", "py", "rb", "rtf", "sass", "scala", "scm", "script", "sh", "sml", "sql", "txt", "vi", "vim", "wpd", "xls", "xlsm", "xlsx", "xml", "xsd", "xsl", "yaml", "odp", "ppt", "pptx", "ai", "bmp", "gif", "eps", "jpeg", "jpg", "png", "ps", "psd", "svg", "tif", "tiff", "dcm", "dicm", "dicom", "svs", "tga", "aac", "aifc", "aiff", "amr", "au", "flac", "m4a", "mp3", "ogg", "ra", "wav", "wma", "3g2", "3gp", "avi", "m2v", "m2ts", "m4v", "mkv", "mov", "mp4", "mpeg", "mpg", "ogg", "mts", "qt", "wmv", "flv", "f4v", "swf", "obj", "stl", "fbx", "3ds", "dae", "ply"].any(function(t) {
                    return e.filename.match("." + t + "$")
                })
            },
            downloadLink: function() {
                var e = this.url;
                return App.config.linkShare && "" !== App.config.linkShareToken && (e += (e.indexOf("?") > 0 ? "&" : "?") + "t=" + App.config.linkShareToken),
                e
            },
            openAsDownload: function() {
                new Element("a",{
                    href: this.downloadLink(),
                    download: this.filename
                }).click()
            }
        });
        i.all = [],
        i.get = function(e) {
            for (var t = i.all.length; t > 0; )
                if (i.all[--t].id == e)
                    return i.all[t];
            return null
        }
        ,
        i.dropWidget = {
            getNode: function(e) {
                if (!e.match)
                    return canvas.selected.node;
                for (; e.parentNode && (!e.className || !e.className.match(/(tk_label|tk_root)/)); )
                    e = e.parentNode;
                return e && e.className && e.className.match(/(tk_label|tk_root)/) ? tree.root.getChild(parseInt(e.id)) : canvas.selected.node
            },
            uploadImageUrl: function(e, t) {
                MM.utils.File.uploadImage([e], {
                    idea_image_url: t
                }, {
                    successCallback: function(e, t) {
                        Tree.utils.setImage(new IdeaImage(e), t)
                    }
                })
            },
            uploadLink: function(e, t) {
                Tree.utils.setProperty("link", t, [e]),
                e._listener.removeLoadingFromDrop(),
                sideBar && sideBar.visible && canvas.selected.node.id == e.id && sideBar.links.onSelectNode()
            }
        },
        t.default = i
    },
    jMx0: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = function(e, t, n) {
            if (t) {
                t.end = Object.extend(Object.clone(t.start), t.end);
                var i = t.start[1] > t.end[1] ? t.start[1] : t.end[1]
                  , o = n && n.reverse ? t.end : t.start
                  , s = n && n.reverse ? t.start : t.end;
                e = $(e),
                e.setStyle(o[0]),
                setTimeout(function() {
                    var t = Object.extend(s[0], {
                        transitionDuration: o[1] + "ms",
                        transitionTimingFunction: o[2]
                    });
                    CSS.set(e, t)
                }, 0),
                n && n.done && setTimeout(n.done, i)
            }
        }
          , o = i
          , s = n("5mMr")
          , a = n.n(s)
          , r = Class.create({
            initialize: function(e) {
                this.opts = Object.extend(this.opts, e),
                this.uniqueId = a()("simple-view-"),
                this._eventList = [],
                this._hotkeyList = [],
                this.$el = new Element("div",{
                    class: (this.className || "") + " " + this.uniqueId
                }),
                this._bindEvents(),
                this._bindHotkeys()
            },
            destroy: function(e) {
                this._unbindEvents(),
                this._unbindHotkeys(),
                !1 !== e.destroyElement && this.$el.remove(),
                this.$el = null,
                this.el = null,
                this.els = null,
                this.destroyed = !0
            },
            _bindEvents: function() {
                this.events && Object.keys(this.events).forEach(function(e) {
                    var t = this.events[e];
                    if (!this[t])
                        return alert("Events - could not find callback " + t);
                    var n = e.split(" ")
                      , i = n[0]
                      , o = n[1];
                    this._eventList.push(Event.on(document, i, "." + this.uniqueId + " " + o, this[t].bind(this)))
                }
                .bind(this))
            },
            _unbindEvents: function() {
                this._eventList.invoke("stop")
            },
            _bindHotkeys: function() {
                this.hotkeys && (this.keymap && this.keymap.disable(),
                Object.keys(this.hotkeys).forEach(function(e) {
                    var t = this.hotkeys[e]
                      , n = t.split(" ")
                      , i = (n[0],
                    n[1])
                      , o = MM.utils.KeyEvent;
                    this._hotkeyList.push({
                        key: o[e.toUpperCase()],
                        stopEvent: !1,
                        fn: this[i].bind(this)
                    })
                }
                .bind(this)),
                this.keymap = new MM.utils.KeyMap(document,this.uniqueId + "-keymap",this._hotkeyList))
            },
            _unbindHotkeys: function() {
                this.keymap.disable()
            }
        })
          , l = r
          , c = (n("fOTf"),
        Class.create(l, {
            className: "p-a-full v-attachment-viewer",
            events: {
                "click .js-previous": "navigateLeft",
                "click .js-next": "navigateRight",
                "click .js-download": "downloadAttachment",
                "click .js-open": "openAttachment",
                "click .js-close": "close",
                "click .js-image": "close"
            },
            hotkeys: {
                left: "this navigateLeft",
                right: "this navigateRight",
                esc: "this close"
            },
            animations: {
                overlay: {
                    start: [{
                        opacity: 0
                    }, 300, "in-out"],
                    end: [{
                        opacity: .9
                    }]
                },
                content: {
                    start: [{
                        opacity: 0
                    }, 300, "easeOutExpo"],
                    end: [{
                        opacity: 1
                    }, 100]
                }
            },
            opts: {
                attachmentId: null,
                node: null,
                currentIndex: null,
                currentAttachment: null
            },
            els: {
                $content: null,
                $overlay: null
            },
            initialize: function($super, e) {
                $super(e),
                this.opts.node = tree.root.getChild(this.opts.nodeId),
                this.getIndexAndAttachment()
            },
            getIndexAndAttachment: function() {
                this.opts.node.attachments.forEach(function(e, t) {
                    if (e.id === this.opts.attachmentId)
                        return this.opts.currentIndex = t,
                        this.opts.currentAttachment = e,
                        !1
                }
                .bind(this))
            },
            render: function() {
                return this.renderOverlay(),
                this.renderContent(),
                this.hideSpinnerWhenLoaded(),
                this
            },
            renderOverlay: function() {
                this.els.$overlay = new Element("div",{
                    class: "p-a-full bg-black js-close o-90"
                }),
                this.$el.update(this.els.$overlay)
            },
            renderContent: function() {
                var e = this.opts.currentAttachment
                  , t = e.isGoogleViewerSupported()
                  , n = e.isBoxViewerSupported()
                  , i = e.isEvernote()
                  , o = e.isImage() && !e.isSvg()
                  , s = new Element("div",{
                    class: "us-none"
                });
                if (s.update(JST["app/ui/attachment_viewer/template"]({
                    count: this.opts.node.attachments.length,
                    index: this.opts.currentIndex,
                    name: e.filename,
                    url: e.downloadLink(),
                    type: e.getFileType(),
                    sizeReadable: e.size.toHumanSize(1),
                    isImage: o,
                    hasGoogleViewer: t,
                    hasBoxViewer: n,
                    isEvernote: i,
                    show_navigation: !0
                })),
                this.els.$content = s,
                this.$el.insert(this.els.$content),
                clearTimeout(this.checkLoadedTimeout),
                !o && t)
                    new Ajax.Request("/generic_files/get_file_token/" + e.id,{
                        onSuccess: this.renderGoogleViewer.bind(this)
                    });
                else if (!o && n)
                    new Ajax.Request("/generic_files/get_box_preview/" + e.id,{
                        onSuccess: this.renderBoxViewer.bind(this)
                    });
                else if (i) {
                    var a = $(this.els.$content).select(".evernote-content")[0];
                    a.src = e.downloadLink() + "&disposition=inline"
                }
            },
            renderGoogleViewer: function(e) {
                var t = this
                  , n = e.responseText.evalJSON();
                if (n.timestamp && n.token) {
                    var i = this.opts.currentAttachment
                      , o = encodeURIComponent(document.location.protocol + "//" + document.location.host + i.downloadLink() + "&key=" + n.token + "&timestamp=" + n.timestamp + "&filename=" + i.filename);
                    this.hideViewerFrame("box"),
                    this.showViewerFrame("google");
                    var s = $(this.els.$content).select(".google-preview-container")[0];
                    s.src = "//docs.google.com/viewer?embedded=true&url=" + o,
                    this.checkLoadedTimeout = setTimeout(function(e) {
                        e === this.opts.currentAttachment.id && this.opts.currentAttachment.isBoxViewerSupported() && new Ajax.Request("/generic_files/get_box_preview/" + this.opts.currentAttachment.id,{
                            onSuccess: this.renderBoxViewer.bind(this)
                        })
                    }
                    .bind(this, i.id), 1e4),
                    s.onload = function() {
                        return clearTimeout(t.checkLoadedTimeout)
                    }
                }
            },
            renderBoxViewer: function(e) {
                var t = e.responseJSON;
                if (t.fileId) {
                    this.hideViewerFrame("google"),
                    this.showViewerFrame("box");
                    (new Box.Preview).show(t.fileId, ServerData.keys.box, {
                        container: ".box-preview-container",
                        showDownload: !1,
                        logoUrl: "https://www.meisterlabs.com/wp-content/themes/meisterlabs/images/logo-mindmeister.svg"
                    })
                }
            },
            open: function() {
                canvas.removeFocus(),
                this.render(),
                document.body.insert(this.$el),
                o(this.els.$overlay, this.animations.overlay),
                o(this.els.$content, this.animations.content)
            },
            close: function() {
                canvas.addFocus(),
                o(this.els.$overlay, this.animations.overlay, {
                    reverse: !0
                }),
                o(this.els.$content, this.animations.content, {
                    reverse: !0,
                    done: function() {
                        this.destroy({
                            destroyElement: !0
                        })
                    }
                    .bind(this)
                })
            },
            hideSpinnerWhenLoaded: function() {
                var e = this.$el.select("img")[0];
                if (e) {
                    var t = this.$el.select(".loading-spinner-48")[0];
                    Event.observeOnce(e, "load", function() {
                        t.remove()
                    }),
                    Event.observeOnce(e, "error", function() {
                        t.remove(),
                        e.addClassName("h-hidden")
                    })
                }
            },
            downloadAttachment: function() {
                this.opts.currentAttachment.openAsDownload()
            },
            openAttachment: function() {
                window.open(this.opts.currentAttachment.get("url"))
            },
            navigate: function(e) {
                var t = this.opts.currentIndex + e
                  , n = this.opts.node.attachments[t];
                n && (this.opts.currentIndex = t,
                this.opts.currentAttachment = n,
                this.render())
            },
            navigateLeft: function(e) {
                e && e.preventDefault(),
                this.navigate(-1)
            },
            navigateRight: function(e) {
                e && e.preventDefault(),
                this.navigate(1)
            },
            hideViewerFrame: function(e) {
                hide($(this.els.$content).select("." + e + "-preview-container")[0])
            },
            showViewerFrame: function(e) {
                show($(this.els.$content).select("." + e + "-preview-container")[0])
            }
        }));
        t.default = c
    },
    jS0c: function(e, t, n) {
        "use strict";
        (function(e) {
            var i = n("YmTu")
              , o = n("zISO")
              , s = n("+VMB")
              , a = n("worM")
              , r = n("jR5l")
              , l = n("aEw3")
              , c = n("WGdr")
              , d = n("MBgF")
              , h = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var i in n)
                        Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
                }
                return e
            }
              , u = function(e) {
                return e ? " o-40" : ""
            }
              , p = function(t) {
                var n = t.user
                  , o = t.mapId;
                return "embedded_full" === t.viewMode ? [] : [{
                    icon: e.createElement(i.a, {
                        opts: {
                            name: "information",
                            size: 12,
                            consize: 20,
                            color: "white",
                            parentClasses: "bg-blue rad-100% mr-8"
                        }
                    }),
                    label: I18n.t("js.map_properties"),
                    className: "to-ellipsis",
                    onClick: function() {
                        n.anonymous ? MM.ui.dialogs.dialogLogin(n) : MM.ui.dialogs.dialogSharing(o)
                    }
                }]
            }
              , f = function(t) {
                return {
                    icon: e.createElement(i.a, {
                        opts: {
                            name: "layout-" + t.name.replace("_", "-"),
                            size: 16,
                            consize: 20,
                            color: "blue",
                            classes: "h-a-center",
                            parentClasses: "p-r mr-8"
                        }
                    }),
                    label: I18n.t("js.layout." + t.name)
                }
            }
              , g = function(e) {
                var t = e.layouts
                  , n = e.currentLayout
                  , i = e.viewOnly
                  , o = f(n);
                return i || (o.subMenu = {
                    selectable: !0,
                    items: t.map(function(e) {
                        return h({}, f(e), {
                            onClick: c.default.changeLayout.bind(c.default, e),
                            selected: n === e
                        })
                    })
                }),
                [o]
            }
              , m = function(t) {
                var n = t.user
                  , o = t.viewOnly;
                return [{
                    icon: e.createElement(i.a, {
                        opts: {
                            name: "map-theme",
                            size: 20,
                            color: "white",
                            parentClasses: "mr-8"
                        }
                    }),
                    label: I18n.t("js.import_theme") + "...",
                    className: "to-ellipsis",
                    onClick: function() {
                        n.anonymous ? MM.ui.dialogs.dialogLogin(n) : o || MM.ui.dialogs.dialogUserMaps()
                    }
                }]
            }
              , v = function(t) {
                var n = t.title
                  , i = t.items
                  , o = t.className
                  , a = n ? {
                    titleClassName: "c-grey fs-12 fw-100",
                    title: n,
                    className: "ml-5"
                } : null;
                return e.createElement(s.a, {
                    header: a,
                    className: "w-220 ml-15 mt-10 map-themes image-grid-widget " + o,
                    elementsInRow: 3,
                    items: i,
                    tooltips: !0
                })
            }
              , _ = function(t) {
                var n = t.themes
                  , o = t.viewOnly;
                return n.map(function(t) {
                    var n = void 0
                      , s = void 0;
                    return o ? (n = function() {}
                    ,
                    s = I18n.t("js.you_are_in_view_only_mode")) : (n = function() {
                        return canvas.onSetTheme(t)
                    }
                    ,
                    s = t.displayName()),
                    {
                        element: e.createElement(d.a, {
                            width: "66",
                            height: "66",
                            className: "bg-grey4 rad-5px",
                            image: t.thumbnail_asset_url,
                            placeholder: e.createElement(i.a, {
                                opts: {
                                    name: "layout-right-aligned",
                                    parentClasses: "h-a-center",
                                    color: "grey-light",
                                    size: 32
                                }
                            })
                        }),
                        title: s,
                        onClick: n
                    }
                })
            }
              , y = function(t) {
                var n = t.user
                  , i = t.teamTemplates
                  , o = t.templates
                  , s = t.viewOnly
                  , r = u(s)
                  , l = _({
                    themes: i,
                    viewOnly: s
                })
                  , c = v({
                    title: l.length > 0 ? I18n.t("js.default") : null,
                    items: _({
                        themes: o,
                        viewOnly: s
                    }),
                    className: r
                })
                  , d = l.length > 0 ? v({
                    title: I18n.t("js.saved"),
                    items: l,
                    className: "mt-10" + r
                }) : e.createElement("div", null);
                return e.createElement("div", {
                    style: {
                        position: "relative",
                        overflowY: "auto",
                        maxHeight: 240
                    }
                }, c, d, e.createElement(a.a, {
                    className: "mt-20" + r,
                    items: m({
                        user: n,
                        viewOnly: s
                    })
                }))
            }
              , b = function(e) {
                var t = e.event
                  , n = e.viewOnly;
                t.preventDefault(),
                n || (t.nativeEvent.closePopover = !0,
                MM.ui.dialogs.dialogCustomizeTheme({
                    themeId: App.config.mapTheme.id
                }))
            }
              , w = function(t) {
                var n = t.isExternal
                  , i = t.viewOnly;
                return n ? null : e.createElement("a", {
                    href: "#",
                    className: "fs-12" + (i ? " disabled" : ""),
                    onClick: function(e) {
                        return b({
                            event: e,
                            viewOnly: i
                        })
                    }
                }, I18n.t("js.customize") + "...")
            }
              , C = function(t) {
                var n = t.user
                  , s = t.mapId
                  , c = t.layouts
                  , d = t.currentLayout
                  , h = t.teamTemplates
                  , f = t.templates
                  , m = t.isExternal
                  , v = t.viewOnly
                  , _ = t.viewMode;
                return e.createElement(l.a, {
                    position: "bottom",
                    canAutoPosition: !1,
                    className: "sections bg-white w-260",
                    opener: e.createElement(i.a, {
                        id: "btn_properties",
                        opts: {
                            name: "information",
                            size: 12,
                            consize: 22,
                            color: "white",
                            parentClasses: "rad-100 b-1 bc-white"
                        }
                    })
                }, e.createElement(r.a, null, e.createElement(a.a, {
                    items: p({
                        user: n,
                        mapId: s,
                        viewMode: _
                    })
                }), e.createElement(a.a, {
                    header: {
                        title: I18n.t("js.alignment")
                    },
                    items: g({
                        layouts: c,
                        currentLayout: d,
                        viewOnly: v
                    }),
                    className: "mt-10" + u(v)
                }), e.createElement(o.a, {
                    title: I18n.t("js.themes"),
                    className: "ph-20 mt-10",
                    elementRight: w({
                        isExternal: m,
                        viewOnly: v
                    })
                }), y({
                    user: n,
                    teamTemplates: h,
                    templates: f,
                    viewOnly: v
                })))
            };
            t.a = C
        }
        ).call(t, n("nakD"))
    },
    jmhn: function(e, t, n) {
        var i = n("7jJu")
          , o = function() {
            try {
                var e = i(Object, "defineProperty");
                return e({}, "", {}),
                e
            } catch (e) {}
        }();
        e.exports = o
    },
    jmxU: function(e, t, n) {
        "use strict";
        function i(e, t) {
            var n = {};
            for (var i in e)
                t.indexOf(i) >= 0 || Object.prototype.hasOwnProperty.call(e, i) && (n[i] = e[i]);
            return n
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var o = n("ahzF")
          , s = n("9Oqg")
          , a = n("1cfn")
          , r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
          , l = ["/maps/undo_redo_status", "/maps/poll", "/maps/save_map_preferences", "/maps/auto_note", "/maps/toggle_closed", "/maps/set_task_notify", "/maps/paste_as_map", "/maps/clone_revision", "/external/drive/update", "external/drive/sync"]
          , c = ["/maps/get_tree"]
          , d = Class.create({
            id: null,
            url: null,
            data: null,
            response: null,
            responseHeaders: null,
            revision: null,
            timestamp: null,
            _customHandler: null,
            initialize: function(e, t, n) {
                this.id = d.id++,
                this.url = e,
                this.data = t,
                this._customHandler = n,
                this.responseHeaders = "",
                this.timestamp = (new Date).toString()
            },
            handleResponse: function(e) {
                this.response = e;
                try {
                    var t = e.evalJSON()
                } catch (e) {
                    this.handleAjaxException(null, "Bad response (" + e.message + ")")
                }
                if ("object" != (void 0 === t ? "undefined" : r(t)) && this.handleAjaxException(null, "Bad response"),
                t.revision && (tree.revision = t.revision),
                void 0 !== App.config.handleServerResponseRemote && App.config.handleServerResponseRemote(t),
                t.error && 1 == t.error.code && (this.silentError() ? Message.show(t.error.message, Message.ERROR) : window.location = "/"),
                this._customHandler)
                    try {
                        this._customHandler(t)
                    } catch (e) {
                        MM.error.reportMapException({
                            exception: e,
                            message: "Exception handling response"
                        })
                    }
            },
            handleAjaxException: function(e, t) {
                if ("localhost:3000" === document.location.host)
                    throw e;
                this.ignorable() || MM.error.reportMapException({
                    exception: e,
                    message: t
                })
            },
            ignorable: function() {
                var e = this;
                return l.any(function(t) {
                    return t == e.url
                })
            },
            silentError: function() {
                var e = this;
                return c.any(function(t) {
                    return e.url.indexOf(t) > -1
                })
            },
            saveResponseDelay: function() {
                this.responseDelay = (new Date - new Date(this.timestamp)) / 1e3
            },
            toString: function() {
                return "Id: " + this.id + "\nUrl: " + this.url + "\nRevision: " + this.revision + "\nTimestamp: " + this.timestamp + "\nResponse delay: " + this.responseDelay + "\nData: " + Object.toJSON(this.data) + "\nResponse: " + this.response
            },
            setResponseHeaders: function(e) {
                this.responseHeaders = e
            }
        });
        d.id = 0;
        var h = Class.create(d, {
            changesets: null,
            append: function(e) {
                this.changesets = this.changesets.concat(e);
                for (var t = [], n = 0; n < e.length; n++)
                    t[n] = e[n].toJSON();
                this.data.changelists = this.data.changelists.concat(t)
            },
            remove: function(e) {
                var t = this.changesets.remove(e);
                this.data.changelists.splice(t, 1)
            },
            countDos: function() {
                for (var e = 0, t = 0; t < this.data.changelists.length; t++)
                    for (var n = this.data.changelists[t], i = 0; i < n.length; i++)
                        "NonPersistentReposition" != n[i].type && (e += 1);
                return e
            }
        })
          , u = {
            protocolVersion: 1,
            timeoutDelay: 120,
            requestQueue: new a.default,
            pendingCode: null,
            lastRequestTime: 0,
            req_data: null,
            repeatedQueue: 0,
            initialize: function() {
                this._onRequestSuccess = this.requestSuccess.bind(this),
                this._onRequestFailure = this.requestFailure.bind(this),
                this._onRequestException = this.requestException.bind(this),
                this._onRequestTimeout = this.requestTimeout.bind(this)
            },
            registerPendingCode: function(e) {
                this.isPending() ? this.pendingCode = e : e()
            },
            _preRequest: function(e) {
                App.busy(!0),
                App.requestLog && App.requestLog.add(e),
                "/maps/do" === e.url && (this.lastRequestTime = new Date)
            },
            _postRequest: function() {
                u.requestQueue.shift(),
                App.busy(!1),
                u.processQueue()
            },
            requestSuccess: function(e) {
                var t = this.requestQueue.first();
                if (t.saveResponseDelay(),
                0 === e.status)
                    return this.requestTimeout(e, "requestSuccess");
                u.networkProblem && (u.networkProblem = !1,
                u.wasEditMode && (u.wasEditMode = !1,
                App.toEditMode()),
                Message.hide()),
                u.repeatedQueue = 0,
                e.responseText && t.handleResponse(e.responseText),
                t.setResponseHeaders(e.getAllResponseHeaders()),
                this._postRequest(),
                u.pendingCode && (u.pendingCode(),
                u.pendingCode = null)
            },
            requestFailure: function(e) {
                if (this.requestQueue.first().saveResponseDelay(),
                408 === e.status || e.status > 12e3)
                    return this.requestTimeout(e, "requestFailure");
                if (this.requestQueue.first().ignorable())
                    return this._postRequest();
                var t = ""
                  , n = "";
                void 0 !== e.request && e.request && e.request && (t = e.request.url,
                n = e.request.body);
                var i = {
                    url: t,
                    body: n,
                    statusText: e.status,
                    responseText: e.responseText
                };
                MM.error.reportMapException({
                    message: "AJAX Request failure",
                    details: i
                })
            },
            requestException: function(e, t) {
                if (this.requestQueue.first().saveResponseDelay(),
                this.requestQueue.first().ignorable())
                    return this._postRequest();
                var n = e.transport
                  , i = ""
                  , o = "";
                void 0 !== n.request && n.request && n.request && (i = n.request.url,
                o = n.request.body);
                var s = {
                    url: i,
                    body: o,
                    statusText: n.status,
                    responseText: n.responseText
                };
                MM.error.reportMapException({
                    exception: t,
                    message: "AJAX Request failure",
                    details: s
                })
            },
            requestTimeout: function(e, t) {
                if (t || (t = "requestTimeout"),
                !this._leavingPage) {
                    var n = this;
                    this.requestQueue.first().saveResponseDelay(),
                    u.repeatedQueue >= 3 && u.networkIssues(),
                    setTimeout(function() {
                        u.repeatedQueue++,
                        n.processQueue()
                    }, 1e4)
                }
            },
            initRequest: function(e) {
                if (!App.config.persistent && !App.config.liveUpdate)
                    return this._postRequest();
                e.revision = tree.revision,
                this._preRequest(e),
                this.req_data = {
                    root: tree.root.id,
                    rev: tree.revision,
                    request_id: e.id,
                    protocolVersion: u.protocolVersion,
                    data: Object.toJSON(e.data)
                },
                new Ajax.Request(e.url,{
                    requestHeaders: {
                        Accept: "application/json"
                    },
                    parameters: this.req_data,
                    timeoutDelay: u.timeoutDelay,
                    onTimeOut: u._onRequestTimeout,
                    onSuccess: u._onRequestSuccess,
                    onFailure: u._onRequestFailure,
                    onException: u._onRequestException
                })
            },
            processQueue: function() {
                this.isPending() && setTimeout(function() {
                    this.initRequest(this.requestQueue.first())
                }
                .bind(this), 10)
            },
            queueRequest: function(e, t) {
                t ? this.requestQueue.unshift(e) : this.requestQueue.add(e)
            },
            queueAndProcess: function(e) {
                this.queueRequest(e),
                1 === this.requestQueue.size() && this.processQueue()
            },
            allQueuedDoRequests: function() {
                for (var e = this.requestQueue.toArray(), t = [], n = 0, i = e.length; n < i; n++)
                    e[n].constructor === h && t.push(e[n]);
                return t
            },
            allImportantQueued: function(e) {
                for (var t = this.allQueuedDoRequests(), n = [], i = 0, o = t.length; i < o; i++)
                    for (var s = t[i].data.changelists, a = 0, r = s.length; a < r; a++)
                        s[a].each(function(t) {
                            t.type === e && n.push(t)
                        });
                return n
            },
            queuedDoRequest: function() {
                for (var e = this.requestQueue.toArray(), t = 1, n = e.length; t < n; t++)
                    if (e[t].constructor === h)
                        return e[t];
                return null
            },
            isPending: function() {
                return !this.requestQueue.empty()
            },
            canQueueDoRequests: function() {
                var e = this.requestQueue.first()
                  , t = !1;
                e && (t = parseInt((new Date - new Date(e.timestamp)) / 1e3) > 60);
                var n = this.queuedDoRequest()
                  , i = n ? n.countDos() : 0;
                return !u.networkProblem && !t && i < 10
            },
            networkIssues: function() {
                Message.show(I18n.t("js.network_error", {
                    v0: '<a href="#" onclick="MM.diagnostics.runDiagnostic(); return false">',
                    v1: "</a>"
                }), Message.ERROR, -1),
                u.networkProblem = !0,
                App.config.editable && (u.wasEditMode = !0,
                App.toViewMode())
            },
            fixQueuedChangesIds: function(e, t) {
                for (var n = this.requestQueue.toArray(), i = [], o = 1, s = n.length; o < s; o++)
                    if (n[o].data) {
                        var a = n[o].data.changes || (n[o].data.changelists ? n[o].data.changelists.flatten() : null);
                        a && (i = i.concat(a))
                    }
                for (var o = 0, s = i.length; o < s; o++) {
                    var r = i[o];
                    r.idea_id == e && (r.idea_id = t),
                    r.new_data && r.new_data.parent == e && (r.new_data.parent = t),
                    r.new_data && r.new_data.from_id == e && (r.new_data.from_id = t),
                    r.new_data && r.new_data.to_id == e && (r.new_data.to_id = t),
                    r.old_data && r.old_data.from_id == e && (r.old_data.from_id = t),
                    r.old_data && r.old_data.to_id == e && (r.old_data.to_id = t)
                }
            },
            setPreference: function(e, t) {
                var n = {
                    key: e,
                    value: t
                };
                this.queueAndProcess(new d("/maps/save_map_preferences",n,null))
            },
            syncUndoRedo: function() {
                this.queueAndProcess(new d("/maps/undo_redo_status",null,this.handleSyncUndoRedo))
            },
            handleSyncUndoRedo: function(e) {
                e.hasUndo ? MM.ui.enableButton("btn_undo") : MM.ui.disableButton("btn_undo"),
                e.hasRedo ? MM.ui.enableButton("btn_redo") : MM.ui.disableButton("btn_redo")
            },
            poll: function() {
                if (!u.isPending()) {
                    var e = {};
                    switch (mapView.hasMapFeature("selection") && (e = {
                        idea_id: mapView.selected && mapView.selected.node.id > 0 ? mapView.selected.node.id : null,
                        timestamp: this.timestamp
                    }),
                    App.config.shareMode) {
                    case App.SINGLE:
                        if (!App.config.liveUpdate)
                            return;
                        e.with_data = !0,
                        e.liveUpdate = !0,
                        App.config.linkShare && "" !== App.config.linkShareToken && (e.t = App.config.linkShareToken);
                        break;
                    case App.SHARED:
                        break;
                    case App.MULTI:
                        if ("undefined" != typeof RevisionBrowser && RevisionBrowser.on)
                            return;
                        "player" !== MM.utils.siteLocation.getLoc() && (e.with_data = !0);
                        break;
                    default:
                        return
                    }
                    if (!(e.with_data && Math.round((new Date - this.lastRequestTime) / 1e3) < 5)) {
                        if ("slideshow" === MM.utils.siteLocation.getLoc() && (e.with_slides = 1),
                        "player" === MM.utils.siteLocation.getLoc() && Presentation.on && Presentation.presenter) {
                            var t = MM.utils.Url.getHashParams();
                            if (t.hasOwnProperty("step")) {
                                var n = t.step;
                                e.presentation_step = parseInt(n)
                            }
                        }
                        this.queueAndProcess(new d("/maps/poll",e,this.handlePoll))
                    }
                }
            },
            handlePoll: function(e) {
                if (e.error)
                    2 === e.error.code ? App.toSingleMode() : 4 === e.error.code && MM.utils.reloadPage();
                else {
                    if (e.current_users && users && users.updateAfterPoll(e),
                    e.changes && e.changes.length > 0 && (o.default.resetInterval(),
                    u._checkQueuedChanges(function() {
                        ChangeList.executeServerChanges(e.changes)
                    })),
                    users && users.updateUserSelection(),
                    !mapView.hasMapFeature("presentation") || !e.slides || void 0 === App.ui.SlideShow || "undefined" != typeof Presentation && Presentation.on || App.ui.SlideShow.updateSlides(e.slides, e.updated_slides),
                    e.drive_data && (App.config.driveId = e.drive_data.gid,
                    App.config.driveRevision = e.drive_data.drive_revision),
                    e.chat && e.chat.messages.map(function(e) {
                        s.default.receive(e)
                    }),
                    e.sharing) {
                        var t = e.sharing.link
                          , n = t.linkShare
                          , a = t.url
                          , r = t.token;
                        App.changeLinkSharing(n, a, r)
                    }
                    e.external_tasks && e.external_tasks.each(function(e) {
                        var t = e.idea_id
                          , n = i(e, ["idea_id"])
                          , o = tree.root.getChild(t);
                        o && o.__onSetProperty("externalTask", n)
                    }),
                    u.timestamp = e.timestamp
                }
                App.config.previousVisit = new Date
            },
            doChange: function(e) {
                var t = new ChangeList;
                t.changes.push(e),
                this.doChanges(t)
            },
            doChanges: function(e) {
                this.doChangelists([e])
            },
            doChangelists: function(e) {
                o.default.resetInterval(),
                ChangeList.lastElasticChangeset && ChangeList.lastElasticChangeset.changes.length > 0 && (e.push(ChangeList.lastElasticChangeset),
                ChangeList.lastElasticChangeset = null);
                var t, n = [];
                if (t = this.queuedDoRequest())
                    return t.append(e);
                for (var i = 0; i < e.length; i++)
                    n[i] = e[i].toJSON();
                var s = {
                    changelists: n
                };
                mapView.hasMapFeature("selection") && mapView.selected && (s = Object.extend(s, {
                    idea_id: mapView.selected.node.id
                }));
                var a = new h("/maps/do",s,this.handleDoChanges.bind(this));
                a.changesets = e,
                this.queueAndProcess(a)
            },
            handleDoChanges: function(e) {
                e.revision && (tree.revision = e.revision),
                this._checkQueuedChanges(function() {
                    var t = u.requestQueue.first()
                      , n = t.changesets
                      , i = [];
                    if (e.changes && e.changes.length > 0 && (e.changes.each(function(e) {
                        n.each(function(t) {
                            t.changes.each(function(t) {
                                e.idea_id === t.change.idea_id && i.push(t)
                            })
                        })
                    }),
                    i.each(function(e) {
                        e.undo("temporary")
                    }),
                    ChangeList.executeServerChanges(e.changes)),
                    !e.error || 10 !== e.error.code && 11 !== e.error.code) {
                        if (i.each(function(e) {
                            e.redo()
                        }),
                        e.changelists) {
                            for (var o = 0, s = n.length; o < s; o++)
                                e.changelists[o].error && (n[o].undo(),
                                10 === e.changelists[o].error.code && Message.show(e.changelists[o].error.message, Message.ERROR)),
                                n[o].handleResponse(e.changelists[o]);
                            App.config.shareMode !== App.MULTI && 0 !== t.countDos() && (MM.ui.enableButton("btn_undo"),
                            MM.ui.disableButton("btn_redo"))
                        }
                    } else
                        10 === e.error.code && Message.show(e.error.message, Message.ERROR)
                })
            },
            _checkQueuedChanges: function(e) {
                for (var t = this.queuedDoRequest(), n = t ? t.changesets : [], i = n.length - 1; i >= 0; i--)
                    n[i].undo("temporary");
                e();
                for (var i = 0; i < n.length; i++)
                    try {
                        n[i].redo() || t.remove(n[i])
                    } catch (e) {
                        t.remove(n[i])
                    }
                ChangeList.autoLayoutChangeset()
            },
            copyExternal: function(e, t) {
                t.each(function(t) {
                    this.queueAndProcess(new d("/maps/get_tree/" + t,null,this.handleCopyExternal.bind(this, e)))
                }
                .bind(this))
            },
            handleCopyExternal: function(e, t) {
                t.changes ? setTimeout(function() {
                    Tree.utils.copyNodesExternal(tree.root.getChild(e), t.changes)
                }, 10) : t.error && Message.show(t.error.message, Message.ERROR)
            },
            pasteAsMap: function(e, t, n, i) {
                for (var o = new ChangeList, s = 0, a = e.children.length; s < a; s++) {
                    var r = e.children[s];
                    o.changes.push(new RemoveChange({
                        idea_id: r.id,
                        type: "Delete",
                        new_data: {
                            pos: r.pos
                        }
                    }))
                }
                var l = "?preserve_permissions=" + !!n + "&insert_back_link=" + !!i;
                this.queueAndProcess(new d("/maps/paste_as_map/" + e.id + l,{},this.handlePasteAsMap.bind(this, o, t, e)))
            },
            handlePasteAsMap: function(e, t, n, i) {
                if (i.error)
                    Message.show(i.error.message, Message.ERROR);
                else if (i.location)
                    window.location.href = i.location;
                else if (i.root_id) {
                    if (t) {
                        var o = "topic:" + i.root_id;
                        e.changes.push(Tree.utils.setPropertyChange("link", o, n)),
                        Tree.utils.setLinkedMapPreview([n], o)
                    }
                    tree.notPainted = !0,
                    e.changes.each(function(t, n) {
                        n === e.changes.length - 1 && (tree.notPainted = !1),
                        t.executeLocally()
                    }),
                    u.doChanges(e)
                }
            },
            toggleClosed: function(e) {
                ChangeList.lastElasticChangeset && (e.changes = ChangeList.lastElasticChangeset.toJSON(),
                ChangeList.lastElasticChangeset = null),
                this.queueAndProcess(new d("/maps/toggle_closed",e,null))
            },
            undo: function() {
                this.queueAndProcess(new d("/maps/undo",{},this.handleUndo.bind(this)))
            },
            handleUndo: function(e) {
                if (e.error)
                    switch (e.error.code) {
                    case 3:
                        App.toMultiMode();
                        break;
                    case 10:
                        Message.show(e.error.message, Message.ERROR),
                        MM.ui.disableButton("btn_undo")
                    }
                else
                    App.config.shareMode !== App.MULTI && (e.hasUndo ? MM.ui.enableButton("btn_undo") : MM.ui.disableButton("btn_undo"),
                    MM.ui.enableButton("btn_redo"),
                    ChangeList.executeServerChanges(e.changes),
                    ChangeList.autoLayoutChangeset(),
                    ChangeList.lastElasticChangeset && ChangeList.lastElasticChangeset.changes.length > 0 && (this.doChanges(ChangeList.lastElasticChangeset),
                    ChangeList.lastElasticChangeset = null))
            },
            redo: function() {
                this.queueAndProcess(new d("/maps/redo",{},this.handleRedo.bind(this)))
            },
            handleRedo: function(e) {
                if (e.error)
                    switch (e.error.code) {
                    case 3:
                        App.toMultiMode();
                        break;
                    case 10:
                        Message.show(e.error.message, Message.ERROR),
                        MM.ui.disableButton("btn_redo")
                    }
                else
                    App.config.shareMode !== App.MULTI && (e.hasRedo ? MM.ui.enableButton("btn_redo") : MM.ui.disableButton("btn_redo"),
                    MM.ui.enableButton("btn_undo"),
                    ChangeList.executeServerChanges(e.changes),
                    ChangeList.autoLayoutChangeset(),
                    ChangeList.lastElasticChangeset && ChangeList.lastElasticChangeset.changes.length > 0 && (this.doChanges(ChangeList.lastElasticChangeset),
                    ChangeList.lastElasticChangeset = null))
            },
            historyRevert: function(e) {
                this.queueAndProcess(new d("/maps/revert",{
                    revision: e
                },this.handleHistoryRevert))
            },
            handleHistoryRevert: function(e) {
                e.error ? 10 == e.error.code && Message.show(e.error.message, Message.ERROR) : (MM.ui.disableButton("btn_redo"),
                "undefined" != typeof RevisionBrowser && RevisionBrowser && RevisionBrowser.revision === e.revision || ChangeList.executeServerChanges(e.changes),
                "undefined" != typeof sideBar && sideBar && e.changes.filter(function(e) {
                    return "MapTheme" === e.type
                }).length > 0 && (sideBar.styles.load(),
                sideBar.boundaries.load()),
                RevisionBrowser.changes = null)
            },
            cloneRevision: function(e) {
                this.queueAndProcess(new d("/maps/clone_revision",{
                    revision: e
                }))
            },
            autoNote: function(e, t) {
                this.queueAndProcess(new d("/maps/auto_note",e,t))
            },
            setTaskNotify: function(e, t) {
                this.queueAndProcess(new d("/maps/set_task_notify",{
                    idea_id: e,
                    value: t
                },this.handleTaskNotify))
            },
            handleTaskNotify: function(e) {
                e.error && Message.show(e.error.message, Message.ERROR)
            },
            other: {
                saveExternalChanges: function(e) {
                    new Ajax.Request("/external/save",{
                        asynchronous: !0,
                        parameters: {
                            map_id: App.config.map_id,
                            api_key: App.config.api_key
                        },
                        onSuccess: function(e) {
                            var t = e.responseText.evalJSON();
                            Message.show(I18n.t("js.external_save_successful"), Message.INFO),
                            App.config.externalMapRevision = t.map.revision
                        },
                        onFailure: function(e) {
                            var t = e.responseText.evalJSON()
                              , n = t.message || I18n.t("js.external_save_failed");
                            Message.show(n, Message.ERROR)
                        },
                        onComplete: function() {
                            e && e()
                        }
                    })
                },
                saveBoxFile: function(e) {
                    new Ajax.Request("/external/box/save/" + e,{
                        asynchronous: !0,
                        onSuccess: function(e) {
                            var t = e.responseText.evalJSON();
                            t.error ? Message.show(t.error, Message.ERROR) : (Message.show(I18n.t("js.external_save_successful"), Message.INFO),
                            App.config.externalMapRevision = t.map.revision)
                        },
                        onFailure: function(e) {
                            var t = e.responseText.evalJSON()
                              , n = t.message || I18n.t("js.external_save_failed");
                            Message.show(n, Message.ERROR)
                        }
                    })
                },
                saveExternalMap: function() {
                    !ServerData.isLoggedIn || ServerData.user.isAnonymous ? MM.utils.redirectToLogin() : Message.show("The map is saved to your account.", Message.NOTICE)
                },
                getMapDiff: function(e, t, n) {
                    new Ajax.Request("/maps/get_map_diff/" + e,{
                        parameters: t,
                        onSuccess: function(e) {
                            try {
                                n(e.responseText.evalJSON().changes)
                            } catch (e) {
                                MM.error.reportException({
                                    exception: e,
                                    message: "History changes initialization failed",
                                    details: {
                                        params: t
                                    }
                                })
                            }
                        }
                    })
                }
            }
        };
        u.initialize(),
        u.uncommittedChanges = function() {
            var e = u.allImportantQueued("Insert")
              , t = u.allImportantQueued("Note")
              , n = '<textarea style="width: 100%;" rows="11" cols="48" readonly="readonly">' + (e.length > 0 ? I18n.t("js.new_topics") + ":\n----------------\n" + e.map(function(e) {
                return e.new_data.title
            }).join("\n") + "\n\n" : "") + (t.length > 0 ? I18n.t("js.new_notes") + ":\n----------------\n" + t.map(function(e) {
                return e.new_data.note
            }).join("\n") : "") + "\n\n</textarea>";
            (e.length > 0 || t.length > 0) && Dialog.alert("<div><h2>" + I18n.t("js.error_committing_changes") + '</h2><p class="warning small text subtle">' + I18n.t("js.error_committing_changes_text") + '</p></div><div style="margin-top: 20px;">' + n + "</div>", {
                okLabel: I18n.t("js.close"),
                buttonClass: "button default",
                windowParameters: {
                    width: 480,
                    height: 400
                }
            })
        }
        ,
        window.onbeforeunload = function() {
            return "undefined" != typeof ChangeList && u.isPending() && u.queuedDoRequest() && !u.forcedPageReload ? (setTimeout(u.uncommittedChanges, 1e3),
            I18n.t("js.confirm_leave_page") + " " + I18n.t("js.confirm_leave_page_extra")) : "external" === App.config.viewMode && tree.revision !== App.config.externalMapRevision ? I18n.t("js.confirm_leave_page_for_external") : App.googleDrive() && App.config.driveRevision < tree.revision ? I18n.t("js.confirm_leave_page_for_gdrive") : ("undefined" != typeof Presentation && Presentation.on && Presentation.presenter && Presentation.togglePresenter(!0),
            void (u._leavingPage = !0))
        }
        ,
        window.IgnorableRequests = l,
        window.SilentRequests = c,
        window.DoRequest = h,
        window.ServerConnection = u
    },
    jrlN: function(e, t, n) {
        function i(e, t, n, a, r) {
            var l = -1
              , c = e.length;
            for (n || (n = s),
            r || (r = []); ++l < c; ) {
                var d = e[l];
                t > 0 && n(d) ? t > 1 ? i(d, t - 1, n, a, r) : o(r, d) : a || (r[r.length] = d)
            }
            return r
        }
        var o = n("15Wi")
          , s = n("rOv1");
        e.exports = i
    },
    koC0: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("pTO5")
          , o = n.n(i)
          , s = n("gp2O")
          , a = (n("TEdV"),
        n("GgL9"),
        n("vQBY"),
        n("/t6o"),
        n("62Jj"),
        n("xUHV"))
          , r = Class.create(Draggable, {
            initialize: function(e) {
                this.options = Object.extend({
                    drawMethod: function() {}
                }, arguments[1] || {}),
                this.element = $(e),
                this.handle = this.element,
                this.delta = this.currentDelta(),
                this.dragging = !1,
                this.eventMouseDown = this.initDrag.bindAsEventListener(this),
                Event.observe(this.handle, "mousedown", this.eventMouseDown),
                Draggables.register(this)
            },
            draw: function(e) {
                var t = Element.cumulativeOffset(this.element)
                  , n = this.currentDelta();
                t[0] -= n[0],
                t[1] -= n[1];
                var i = [0, 1].map(function(n) {
                    return e[n] - t[n] - this.offset[n]
                }
                .bind(this));
                this.options.drawMethod(i)
            }
        })
          , l = {
            all: [],
            prefix: "sel_",
            setup: function(e) {
                this.canvas = $(e);
                var t = this.canvas.parentNode;
                this.canvasWrap = new Element("div",{
                    class: this.prefix + "wrap"
                }),
                this.canvasWrap.appendChild(this.canvas),
                t.appendChild(this.canvasWrap)
            },
            teardown: function() {
                void 0 !== this.canvasWrap && (this.canvasWrap.parentNode.insertBefore(this.canvas, this.canvasWrap),
                this.canvasWrap.parentNode.removeChild(this.canvasWrap),
                this.all.each(function(e) {
                    e.removeObservers(),
                    e.remove()
                }))
            },
            add: function(e) {
                this.all.push(e)
            },
            remove: function(e) {
                this.all = this.all.reject(function(t) {
                    return t == e
                })
            }
        }
          , c = {};
        c.Base = Class.create({
            initialize: function(e, t) {
                if (this.options = Object.extend({
                    ratioDim: {
                        x: 0,
                        y: 0
                    },
                    minWidth: 0,
                    minHeight: 0,
                    displayOnInit: !1,
                    onStartDrag: Prototype.emptyFunction,
                    onEndDrag: Prototype.emptyFunction,
                    onUpdate: Prototype.emptyFunction,
                    onRemove: Prototype.emptyFunction,
                    captureKeys: !0,
                    initialEvent: null,
                    listener: null,
                    allowMultiple: !0,
                    useEffect: !1,
                    onloadCoords: null,
                    maxWidth: 0,
                    maxHeight: 0,
                    resize: !0,
                    label: !0
                }, t || {}),
                this.canvas = $(e),
                this.clickCoords = {
                    x: 0,
                    y: 0
                },
                this.dragging = !1,
                this.resizing = !1,
                this.isWebKit = /Konqueror|Safari|KHTML/.test(navigator.userAgent),
                this.isIE = /MSIE/.test(navigator.userAgent),
                this.ratioX = 0,
                this.ratioY = 0,
                this.attached = !1,
                this.fixedWidth = this.options.maxWidth > 0 && this.options.minWidth >= this.options.maxWidth,
                this.fixedHeight = this.options.maxHeight > 0 && this.options.minHeight >= this.options.maxHeight,
                void 0 !== this.canvas) {
                    if (this.options.ratioDim.x > 0 && this.options.ratioDim.y > 0) {
                        var n = this.getGCD(this.options.ratioDim.x, this.options.ratioDim.y);
                        this.ratioX = this.options.ratioDim.x / n,
                        this.ratioY = this.options.ratioDim.y / n
                    }
                    l.add(this),
                    this.subInitialize(),
                    this.onLoad(),
                    this.removeObservers()
                }
            },
            getGCD: function(e, t) {
                return 0 === t ? e : this.getGCD(t, e % t)
            },
            onLoad: function() {
                var e = l.prefix;
                this.canvasWrap = l.canvasWrap,
                this.north = new Element("div",{
                    class: e + "overlay " + e + "north"
                }).insert(new Element("span")),
                this.east = new Element("div",{
                    class: e + "overlay " + e + "east"
                }).insert(new Element("span")),
                this.south = new Element("div",{
                    class: e + "overlay " + e + "south"
                }).insert(new Element("span")),
                this.west = new Element("div",{
                    class: e + "overlay " + e + "west"
                }).insert(new Element("span"));
                var t = [this.north, this.east, this.south, this.west];
                this.dragArea = this.canvas,
                t.each(function(e) {
                    this.dragArea.insert(e)
                }, this),
                this.options.resize && (this.handleN = new Element("div",{
                    class: e + "handle " + e + "handleN"
                }),
                this.handleNE = new Element("div",{
                    class: e + "handle " + e + "handleNE"
                }),
                this.handleE = new Element("div",{
                    class: e + "handle " + e + "handleE"
                }),
                this.handleSE = new Element("div",{
                    class: e + "handle " + e + "handleSE"
                }),
                this.handleS = new Element("div",{
                    class: e + "handle " + e + "handleS"
                }),
                this.handleSW = new Element("div",{
                    class: e + "handle " + e + "handleSW"
                }),
                this.handleW = new Element("div",{
                    class: e + "handle " + e + "handleW"
                }),
                this.handleNW = new Element("div",{
                    class: e + "handle " + e + "handleNW"
                })),
                this.selArea = new Element("div",{
                    class: e + "selArea",
                    style: "display:none"
                }),
                this.options.resize && [this.handleN, this.handleNE, this.handleE, this.handleSE, this.handleS, this.handleSW, this.handleW, this.handleNW].each(function(e) {
                    this.selArea.insert(e)
                }, this),
                this.options.label && (this.label = new Element("div",{
                    class: e + "label"
                }),
                this.selArea.insert(new Element("div",{
                    class: e + "innerArea"
                }).insert(this.label))),
                this.dragArea.appendChild(this.selArea),
                this.startDragBind = this.startDrag.bindAsEventListener(this),
                this.onDragBind = this.onDrag.bindAsEventListener(this),
                this.endDragBind = this.endDrag.bindAsEventListener(this),
                this.options.resize && (this.resizeBind = this.startResize.bindAsEventListener(this)),
                this.keysBind = this.handleKeys.bindAsEventListener(this),
                this.stopEventBind = this.stopEvent.bindAsEventListener(this),
                Event.observe(this.selArea, "dblclick", this.stopEventBind),
                this.options.resize && (this.handles = [this.handleN, this.handleNE, this.handleE, this.handleSE, this.handleS, this.handleSW, this.handleW, this.handleNW]),
                this.addObservers(),
                this.setParams(),
                this.options.initialEvent && this.startDrag(this.options.initialEvent),
                this.visible = !0
            },
            addObservers: function() {
                this.observersActive || (this.observersActive = !0,
                this.options.initialEvent || this.options.displayOnInit || Event.observe(this.dragArea, "mousedown", this.startDragBind),
                this.options.captureKeys && Event.observe(document, "keydown", this.keysBind),
                this.options.allowMultiple && this.selectBind && Event.stopObserving(this.selArea, "mousedown", this.selectBind),
                this.options.resize && this.registerHandles(!0),
                new r(this.selArea,{
                    onDrag: this.onDragSelection.bind(this),
                    onEnd: this.onEndDragSelection.bind(this),
                    drawMethod: this.moveArea.bindAsEventListener(this)
                }))
            },
            removeObservers: function() {
                this.observersActive && (this.observersActive = !1,
                this.options.initialEvent || this.options.displayOnInit || Event.stopObserving(this.dragArea, "mousedown", this.startDragBind),
                this.options.captureKeys && Event.stopObserving(document, "keypress", this.keysBind),
                this.options.allowMultiple && (this.selectBind = this.select.bindAsEventListener(this),
                Event.observe(this.selArea, "mousedown", this.selectBind)),
                this.options.resize && this.registerHandles(!1))
            },
            registerHandles: function(e) {
                for (var t = 0; t < this.handles.length; t++) {
                    var n = $(this.handles[t]);
                    if (e) {
                        var i = !1;
                        if (this.fixedWidth && this.fixedHeight)
                            i = !0;
                        else if (this.fixedWidth || this.fixedHeight) {
                            var o = n.className.match(/([S|N][E|W])$/)
                              , s = n.className.match(/(E|W)$/)
                              , a = n.className.match(/(N|S)$/);
                            (o || this.fixedWidth && s || this.fixedHeight && a) && (i = !0)
                        }
                        i ? n.hide() : this.options.resize && Event.observe(n, "mousedown", this.resizeBind)
                    } else
                        n.show(),
                        this.options.resize && Event.stopObserving(n, "mousedown", this.resizeBind)
                }
            },
            stopEvent: function(e) {
                Event.stop(e)
            },
            setParams: function() {
                this.canvasW = this.canvas.getWidth(),
                this.canvasH = this.canvas.getHeight(),
                $(this.north).setStyle({
                    height: 0
                }),
                $(this.east).setStyle({
                    width: 0,
                    height: 0
                }),
                $(this.south).setStyle({
                    height: 0
                }),
                $(this.west).setStyle({
                    width: 0,
                    height: 0
                }),
                $(this.canvasWrap).setStyle({
                    width: this.canvasW + "px",
                    height: this.canvasH + "px"
                }),
                $(this.selArea).hide();
                var e = {
                    x1: 0,
                    y1: 0,
                    x2: 0,
                    y2: 0
                }
                  , t = !1;
                null !== this.options.onloadCoords ? (e = this.cloneCoords(this.options.onloadCoords),
                t = !0) : this.options.ratioDim.x > 0 && this.options.ratioDim.y > 0 && (e.x1 = Math.ceil((this.canvasW - this.options.ratioDim.x) / 2),
                e.y1 = Math.ceil((this.canvasH - this.options.ratioDim.y) / 2),
                e.x2 = e.x1 + this.options.ratioDim.x,
                e.y2 = e.y1 + this.options.ratioDim.y,
                t = !0),
                this.setAreaCoords(e, !1, !1, 1),
                this.options.displayOnInit && t && (this.options.useEffect ? new Effect.Appear(this.selArea,{
                    duration: .2
                }) : this.selArea.show(),
                this.drawArea()),
                this.attached = !0
            },
            updateLabel: function(e) {
                this.label && this.label.update(e)
            },
            select: function(e) {
                l.selected && l.selected.deselect(),
                this.selArea.addClassName("selected"),
                this.selected = !0,
                l.selected = this,
                this.addObservers(),
                e && this.options.listener && this.options.listener.select()
            },
            deselect: function(e) {
                this.selArea.removeClassName("selected"),
                this.selected = !1,
                l.selected = null,
                this.removeObservers(),
                e && this.options.listener && this.options.listener.deselect()
            },
            remove: function() {
                this.attached && (this.attached = !1,
                this.removeObservers()),
                l.remove(this),
                this.selArea.remove(),
                this.north.remove(),
                this.east.remove(),
                this.south.remove(),
                this.west.remove(),
                this.options.resize && (this.handleN.remove(),
                this.handleNE.remove(),
                this.handleE.remove(),
                this.handleSE.remove(),
                this.handleS.remove(),
                this.handleSW.remove(),
                this.handleW.remove(),
                this.handleNW.remove()),
                this.options.onRemove()
            },
            show: function() {
                this.selArea.show(),
                this.north.show(),
                this.east.show(),
                this.south.show(),
                this.west.show(),
                this.options.resize && (this.handleN.show(),
                this.handleNE.show(),
                this.handleE.show(),
                this.handleSE.show(),
                this.handleS.show(),
                this.handleSW.show(),
                this.handleW.show(),
                this.handleNW.show()),
                this.visible = !0
            },
            hide: function() {
                this.selArea.hide(),
                this.north.hide(),
                this.east.hide(),
                this.south.hide(),
                this.west.hide(),
                this.options.resize && (this.handleN.hide(),
                this.handleNE.hide(),
                this.handleE.hide(),
                this.handleSE.hide(),
                this.handleS.hide(),
                this.handleSW.hide(),
                this.handleW.hide(),
                this.handleNW.hide()),
                this.visible = !1
            },
            reset: function() {
                this.attached ? this.setParams() : this.onLoad(),
                this.endDrag()
            },
            handleKeys: function(e) {
                var t = {
                    x: 0,
                    y: 0
                };
                if (!this.dragging) {
                    switch (e.keyCode) {
                    case 37:
                        t.x = -1;
                        break;
                    case 38:
                        t.y = -1;
                        break;
                    case 39:
                        t.x = 1;
                        break;
                    case 40:
                        t.y = 1
                    }
                    0 === t.x && 0 === t.y || (e.shiftKey && (t.x *= 10,
                    t.y *= 10),
                    this.moveArea([this.areaCoords.x1 + t.x, this.areaCoords.y1 + t.y]),
                    this.endDrag(),
                    Event.stop(e))
                }
            },
            calcW: function() {
                return this.areaCoords.x2 - this.areaCoords.x1
            },
            calcH: function() {
                return this.areaCoords.y2 - this.areaCoords.y1
            },
            cloneCoords: function(e) {
                return {
                    x1: e.x1,
                    y1: e.y1,
                    x2: e.x2,
                    y2: e.y2
                }
            },
            setAreaCoords: function(e, t, n, i, o) {
                if (t) {
                    var s = e.x2 - e.x1
                      , a = e.y2 - e.y1;
                    e.x1 < 0 && (e.x1 = 0,
                    e.x2 = s),
                    e.y1 < 0 && (e.y1 = 0,
                    e.y2 = a),
                    e.x2 > this.canvasW && (e.x2 = this.canvasW,
                    e.x1 = this.canvasW - s),
                    e.y2 > this.canvasH && (e.y2 = this.canvasH,
                    e.y1 = this.canvasH - a)
                } else if (e.x1 < 0 && (e.x1 = 0),
                e.y1 < 0 && (e.y1 = 0),
                e.x2 > this.canvasW && (e.x2 = this.canvasW),
                e.y2 > this.canvasH && (e.y2 = this.canvasH),
                null !== i) {
                    this.ratioX > 0 ? this.applyRatio(e, {
                        x: this.ratioX,
                        y: this.ratioY
                    }, i, o) : n && this.applyRatio(e, {
                        x: 1,
                        y: 1
                    }, i, o);
                    var r = [this.options.minWidth, this.options.minHeight]
                      , l = [this.options.maxWidth, this.options.maxHeight];
                    if (r[0] > 0 || r[1] > 0 || l[0] > 0 || l[1] > 0) {
                        var c = {
                            a1: e.x1,
                            a2: e.x2
                        }
                          , d = {
                            a1: e.y1,
                            a2: e.y2
                        }
                          , h = {
                            min: 0,
                            max: this.canvasW
                        }
                          , u = {
                            min: 0,
                            max: this.canvasH
                        };
                        0 === r[0] && 0 === r[1] || !n || (r[0] > 0 ? r[1] = r[0] : r[1] > 0 && (r[0] = r[1])),
                        0 === l[0] && 0 === l[0] || !n || (l[0] > 0 && l[0] <= l[1] ? l[1] = l[0] : l[1] > 0 && l[1] <= l[0] && (l[0] = l[1])),
                        r[0] > 0 && this.applyDimRestriction(c, r[0], i.x, h, "min"),
                        r[1] > 1 && this.applyDimRestriction(d, r[1], i.y, u, "min"),
                        l[0] > 0 && this.applyDimRestriction(c, l[0], i.x, h, "max"),
                        l[1] > 1 && this.applyDimRestriction(d, l[1], i.y, u, "max"),
                        e = {
                            x1: c.a1,
                            y1: d.a1,
                            x2: c.a2,
                            y2: d.a2
                        }
                    }
                }
                this.areaCoords = e
            },
            applyDimRestriction: function(e, t, n, i, o) {
                var s;
                (s = "min" == o ? e.a2 - e.a1 < t : e.a2 - e.a1 > t) && (1 == n ? e.a2 = e.a1 + t : e.a1 = e.a2 - t,
                e.a1 < i.min ? (e.a1 = i.min,
                e.a2 = t) : e.a2 > i.max && (e.a1 = i.max - t,
                e.a2 = i.max))
            },
            applyRatio: function(e, t, n, i) {
                var o;
                "N" == i || "S" == i ? (o = this.applyRatioToAxis({
                    a1: e.y1,
                    b1: e.x1,
                    a2: e.y2,
                    b2: e.x2
                }, {
                    a: t.y,
                    b: t.x
                }, {
                    a: n.y,
                    b: n.x
                }, {
                    min: 0,
                    max: this.canvasW
                }),
                e.x1 = o.b1,
                e.y1 = o.a1,
                e.x2 = o.b2,
                e.y2 = o.a2) : (o = this.applyRatioToAxis({
                    a1: e.x1,
                    b1: e.y1,
                    a2: e.x2,
                    b2: e.y2
                }, {
                    a: t.x,
                    b: t.y
                }, {
                    a: n.x,
                    b: n.y
                }, {
                    min: 0,
                    max: this.canvasH
                }),
                e.x1 = o.a1,
                e.y1 = o.b1,
                e.x2 = o.a2,
                e.y2 = o.b2)
            },
            applyRatioToAxis: function(e, t, n, i) {
                var o = Object.extend(e, {})
                  , s = o.a2 - o.a1
                  , a = Math.floor(s * t.b / t.a)
                  , r = null
                  , l = null
                  , c = null;
                return 1 == n.b ? (r = o.b1 + a,
                r > i.max && (r = i.max,
                c = r - o.b1),
                o.b2 = r) : (r = o.b2 - a,
                r < i.min && (r = i.min,
                c = r + o.b2),
                o.b1 = r),
                null !== c && (l = Math.floor(c * t.a / t.b),
                1 == n.a ? o.a2 = o.a1 + l : o.a1 = o.a1 = o.a2 - l),
                o
            },
            forceReRender: function() {
                if (this.isIE) {
                    var e = document.createTextNode(" ");
                    fixEl = this.selArea,
                    fixEl.appendChild(e),
                    fixEl.removeChild(e)
                }
            },
            drawArea: function() {
                var e = this.calcW()
                  , t = this.calcH()
                  , n = "px"
                  , i = [this.areaCoords.x1 + n, this.areaCoords.y1 + n, e + n, t + n, this.areaCoords.x2 + n, this.areaCoords.y2 + n, this.canvas.getWidth() - this.areaCoords.x2 + n, this.canvas.getHeight() - this.areaCoords.y2 + n]
                  , o = this.selArea.style;
                o.left = i[0],
                o.top = i[1],
                o.width = i[2],
                o.height = i[3];
                var s = Math.ceil((e - 6) / 2) + n
                  , a = Math.ceil((t - 6) / 2) + n;
                this.options.resize && (this.handleN.style.left = s,
                this.handleE.style.top = a,
                this.handleS.style.left = s,
                this.handleW.style.top = a),
                this.north.style.height = i[1];
                var r = this.east.style;
                r.top = i[1],
                r.height = i[3],
                r.left = i[4],
                r.width = i[6];
                var l = this.south.style;
                l.top = i[5],
                l.height = i[7];
                var c = this.west.style;
                c.top = i[1],
                c.height = i[3],
                c.width = i[0],
                this.subDrawArea(),
                this.forceReRender()
            },
            transformCoords: function(e, t, n, i) {
                var o = [e, t];
                e > t && o.reverse(),
                n[i + "1"] = o[0],
                n[i + "2"] = o[1]
            },
            getCurPos: function(e) {
                var t = this.canvasWrap
                  , n = Element.cumulativeOffset(t)
                  , i = Element.cumulativeScrollOffset(t);
                return n[0] -= i[0],
                n[1] -= i[1],
                {
                    x: Event.pointerX(e) - n[0],
                    y: Event.pointerY(e) - n[1]
                }
            },
            onDragSelection: function(e, t) {
                this.options.onDrag(this)
            },
            onEndDragSelection: function(e, t) {
                this.options.onEndDrag(this),
                this.update()
            },
            moveArea: function(e) {
                this.setAreaCoords({
                    x1: e[0],
                    y1: e[1],
                    x2: e[0] + this.calcW(),
                    y2: e[1] + this.calcH()
                }, !0, !1),
                this.drawArea()
            },
            startResize: function(e) {
                this.startCoords = this.cloneCoords(this.areaCoords),
                this.resizing = !0,
                this.resizeHandle = Event.element(e).classNames().toString().replace(/([^N|NE|E|SE|S|SW|W|NW])+/, ""),
                Event.observe(document, "mousemove", this.onDragBind),
                Event.observe(document, "mouseup", this.endDragBind),
                Event.stop(e)
            },
            startDrag: function(e) {
                this.select(),
                this.selArea.show(),
                this.clickCoords = this.getCurPos(e),
                this.setAreaCoords({
                    x1: this.clickCoords.x,
                    y1: this.clickCoords.y,
                    x2: this.clickCoords.x,
                    y2: this.clickCoords.y
                }, !1, !1, null),
                Event.observe(document, "mousemove", this.onDragBind),
                Event.observe(document, "mouseup", this.endDragBind),
                this.dragging = !0,
                this.onDrag(e),
                Event.stop(e),
                this.options.onStartDrag(this)
            },
            onDrag: function(e) {
                if (this.dragging || this.resizing) {
                    var t = null
                      , n = this.getCurPos(e)
                      , i = this.cloneCoords(this.areaCoords)
                      , o = {
                        x: 1,
                        y: 1
                    };
                    this.dragging ? (n.x < this.clickCoords.x && (o.x = -1),
                    n.y < this.clickCoords.y && (o.y = -1),
                    this.transformCoords(n.x, this.clickCoords.x, i, "x"),
                    this.transformCoords(n.y, this.clickCoords.y, i, "y")) : this.resizing && (t = this.resizeHandle,
                    t.match(/E/) ? (this.transformCoords(n.x, this.startCoords.x1, i, "x"),
                    n.x < this.startCoords.x1 && (o.x = -1)) : t.match(/W/) && (this.transformCoords(n.x, this.startCoords.x2, i, "x"),
                    n.x < this.startCoords.x2 && (o.x = -1)),
                    t.match(/N/) ? (this.transformCoords(n.y, this.startCoords.y2, i, "y"),
                    n.y < this.startCoords.y2 && (o.y = -1)) : t.match(/S/) && (this.transformCoords(n.y, this.startCoords.y1, i, "y"),
                    n.y < this.startCoords.y1 && (o.y = -1))),
                    this.setAreaCoords(i, !1, e.shiftKey, o, t),
                    this.drawArea(),
                    Event.stop(e)
                }
                this.options.onDrag(this)
            },
            update: function() {
                this.options.onUpdate(this)
            },
            endDrag: function() {
                Event.stopObserving(document, "mousemove", this.onDragBind),
                Event.stopObserving(document, "mouseup", this.endDragBind),
                this.options.onEndDrag(this),
                this.update(),
                this.dragging = !1,
                this.resizing = !1
            },
            subInitialize: function() {},
            subDrawArea: function() {}
        }),
        c.Previewable = Class.create(c.Base, {
            subInitialize: function() {
                this.hasPreview = !1,
                void 0 !== this.options.previewWrap && this.options.minWidth > 0 && this.options.minHeight > 0 && (this.previewWrap = $(this.options.previewWrap),
                this.previewCanvas = this.canvas.cloneNode(!1),
                this.previewCanvas.id = l.prefix + this.previewCanvas.id,
                this.options.displayOnInit = !0,
                this.hasPreview = !0,
                this.previewWrap.addClassName(l.prefix + "previewWrap"),
                this.previewWrap.setStyle({
                    width: this.options.minWidth + "px",
                    height: this.options.minHeight + "px"
                }),
                this.previewWrap.appendChild(this.previewCanvas))
            },
            subDrawArea: function() {
                if (this.hasPreview) {
                    var e = this.calcW()
                      , t = this.calcH()
                      , n = {
                        x: this.canvasW / e,
                        y: this.canvasH / t
                    }
                      , i = {
                        x: e / this.options.minWidth,
                        y: t / this.options.minHeight
                    }
                      , o = {
                        w: Math.ceil(this.options.minWidth * n.x) + "px",
                        h: Math.ceil(this.options.minHeight * n.y) + "px",
                        x: "-" + Math.ceil(this.areaCoords.x1 / i.x) + "px",
                        y: "-" + Math.ceil(this.areaCoords.y1 / i.y) + "px"
                    }
                      , s = this.previewCanvas.style;
                    s.width = o.w,
                    s.height = o.h,
                    s.left = o.x,
                    s.top = o.y
                }
            }
        });
        var d = (n("TKta"),
        n("fSlT"))
          , h = n("r+xB")
          , u = (n("jmxU"),
        n("6bYh"))
          , p = n("FKf5")
          , f = n("xfYt")
          , g = n("q3Rn")
          , m = n("oMUV")
          , v = n("oxsE")
          , _ = n("3Ox4");
        /*!
 * Raphael Path Methods Plugin 0.2
 *
 * Copyright (c) 2009 Dmitry Baranovskiy (http://raphaeljs.com)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 */
        o.a.el.isAbsolute = !0,
        o.a.el.absolutely = function() {
            return this.isAbsolute = 1,
            this
        }
        ,
        o.a.el.relatively = function() {
            return this.isAbsolute = 0,
            this
        }
        ,
        o.a.el.moveTo = function(e, t) {
            return this._last = {
                x: e,
                y: t
            },
            this.attr({
                path: this.attrs.path + ["m", "M"][+this.isAbsolute] + parseFloat(e) + " " + parseFloat(t)
            })
        }
        ,
        o.a.el.lineTo = function(e, t) {
            return this._last = {
                x: e,
                y: t
            },
            this.attr({
                path: this.attrs.path + ["l", "L"][+this.isAbsolute] + parseFloat(e) + " " + parseFloat(t)
            })
        }
        ,
        o.a.el.arcTo = function(e, t, n, i, o, s, a) {
            return this._last = {
                x: o,
                y: s
            },
            this.attr({
                path: this.attrs.path + ["a", "A"][+this.isAbsolute] + [parseFloat(e), parseFloat(t), +a, n, i, parseFloat(o), parseFloat(s)].join(" ")
            })
        }
        ,
        o.a.el.curveTo = function() {
            var e = Array.prototype.splice.call(arguments, 0, arguments.length)
              , t = [0, 0, 0, 0, "s", 0, "c"][e.length] || "";
            return this.isAbsolute && (t = t.toUpperCase()),
            this._last = {
                x: e[e.length - 2],
                y: e[e.length - 1]
            },
            this.attr({
                path: this.attrs.path + t + e
            })
        }
        ,
        o.a.el.cplineTo = function(e, t, n) {
            return this.attr({
                path: this.attrs.path + ["C", this._last.x + n, this._last.y, e - n, t, e, t]
            }),
            this._last = {
                x: e,
                y: t
            },
            this
        }
        ,
        o.a.el.qcurveTo = function() {
            var e = [0, 1, "t", 3, "q"][arguments.length]
              , t = Array.prototype.splice.call(arguments, 0, arguments.length);
            return this.isAbsolute && (e = e.toUpperCase()),
            this._last = {
                x: t[t.length - 2],
                y: t[t.length - 1]
            },
            this.attr({
                path: this.attrs.path + e + t
            })
        }
        ,
        o.a.el.addRoundedCorner = function(e, t) {
            var n = this.isAbsolute;
            return n && this.relatively(),
            this._last = {
                x: e * (2 * !!(t.indexOf("r") + 1) - 1),
                y: e * (2 * !!(t.indexOf("d") + 1) - 1)
            },
            this.arcTo(e, e, 0, {
                lu: 1,
                rd: 1,
                ur: 1,
                dl: 1
            }[t] || 0, this._last.x, this._last.y),
            n && this.absolutely(),
            this
        }
        ,
        o.a.el.andClose = function() {
            return this.attr({
                path: this.attrs.path + "z"
            })
        }
        ;
        var y = n("yj88")
          , b = n("sNkp");
        window.Raphael = o.a,
        window.Point = _.Point,
        window.Rectangle = _.Rectangle,
        window.rectangleLayouter = v.default,
        window.IdeaImage = m.default,
        window.BoundaryStyle = f.default,
        window.Icon = g.default,
        window.Font = u.default,
        window.Style = p.default,
        window.MapTheme = h.default,
        window.Tree = d.default,
        window.Canvas = s.default,
        window.CustomEvents = a.default,
        window.Presentation = y.default,
        window.SelDraggable = r,
        window.Selection = c,
        window.Selections = l,
        App.ui.Zoom = b.default
    },
    lfAS: function(e, t, n) {
        "use strict";
        var i = {
            init: function(e) {
                this.loaded || (MM.utils.loadScript("https://www.dropbox.com/static/api/2/dropins.js", null, null, {
                    id: "dropboxjs",
                    "data-app-key": ServerData.keys.dropbox
                }),
                this.loaded = !0,
                this.options = {
                    linkType: "direct",
                    success: function(t) {
                        var n = t[0];
                        if (n.bytes > 262144e3)
                            return void Message.show(I18n.t("js.attachment_size_exceeded", {
                                v0: n.name
                            }), Message.NOTICE);
                        e.onPick && e.onPick({
                            link: n.link,
                            name: n.name,
                            size: n.bytes
                        })
                    }
                })
            },
            create: function() {
                return Dropbox.choose(this.options),
                !1
            }
        };
        t.a = i
    },
    lqP1: function(e, t, n) {
        function i(e) {
            return (null == e ? 0 : e.length) ? o(e, 1) : []
        }
        var o = n("jrlN");
        e.exports = i
    },
    mL1V: function(e, t) {
        function n(e) {
            return "number" == typeof e && e > -1 && e % 1 == 0 && e <= i
        }
        var i = 9007199254740991;
        e.exports = n
    },
    o72h: function(e, t, n) {
        var i = n("VjBI")
          , o = function() {
            return i.Date.now()
        };
        e.exports = o
    },
    oMUV: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("MAG5")
          , o = n.n(i)
          , s = Class.create({
            id: null,
            size: [null, null],
            createdAt: null,
            owner: null,
            locally_stored: !1,
            mm_default: !1,
            file_id: null,
            initialize: function(e) {
                this.id = e.id || s.generateFakeId(),
                this.download_link = e.url,
                this.secure_download_link = e.secure_url,
                "phantomjs" === App.config.environment && e.secure_url.indexOf("http") < 0 && (this.secure_download_link = ServerData.siteUrl + e.secure_url),
                "phantomjs" === App.config.environment && e.url.indexOf("http") < 0 && (this.download_link = ServerData.siteUrl + e.url),
                this.local_path = e.local_path,
                this.size = e.size ? [e.size.width, e.size.height] : null,
                this.createdAt = e.createdAt,
                this.owner = e.owner,
                this.locally_stored = e.locally_stored,
                this.mm_default = e.mm_default,
                this.def_linked = e.def_linked,
                this.picture_file_id = e.picture_file_id,
                this.drawn = !!e.drawn && e.drawn,
                this.id > 0 && (s.all[this.id] = this)
            },
            resize: function(e, t) {
                for (var n = this.width() / this.height(), i = this.width(), o = this.height(); i > e || o > t; )
                    i > e ? (i -= 1,
                    o = parseInt(i / n)) : o > t && (o -= 1,
                    i = parseInt(o * n));
                return [i, o]
            },
            width: function() {
                return this.size[0]
            },
            height: function() {
                return this.size[1]
            },
            url: function() {
                if (this.locally_stored) {
                    var e = this.download_link;
                    return s.downloadTokens ? e += (e.indexOf("?") > 0 ? "&" : "?") + s.downloadTokens : App.config.linkShare && "" !== App.config.linkShareToken && (e += (e.indexOf("?") > 0 ? "&" : "?") + "t=" + App.config.linkShareToken),
                    e
                }
                return s.useSecureLink() ? this.secure_download_link : this.download_link
            },
            equals: function(e) {
                return this.id == e.id
            },
            isLinkedMapPreview: function() {
                return /\/image\/medium\/\d+\/.+\.png$/.test(this.download_link)
            }
        });
        s.default_images = [],
        s.user_images = [],
        s.all = [],
        s.get = function(e) {
            return s.all[e] || null
        }
        ,
        s.createDummy = function(e, t) {
            return !Object.isUndefined(t) && t || (t = null),
            new s({
                id: s.generateFakeId(),
                picture_file_id: null,
                url: e,
                secure_url: "/images/download_url?url=" + o()(e),
                size: t,
                createdAt: null,
                owner: null,
                locally_stored: !1,
                mm_default: !1
            })
        }
        ,
        s.initDefault = function() {
            if ("undefined" != typeof IMAGES)
                for (var e = 0, t = IMAGES.length; e < t; e++)
                    s.default_images.push(new s(IMAGES[e]))
        }
        ,
        s.generateFakeId = function() {
            return this._fakeId ? --this._fakeId : this._fakeId = -1
        }
        ,
        s.useSecureLink = function() {
            return "https:" === document.location.protocol && "phantomjs" !== App.config.environment
        }
        ,
        t.default = s
    },
    oxsE: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        n.d(t, "RectangleLayouter", function() {
            return a
        }),
        n.d(t, "RCRectangle", function() {
            return s
        });
        var i = n("3Ox4")
          , o = {
            node: null,
            fixedInitialPosition: !1,
            initialize: function($super, e, t, n) {
                $super(e, t),
                this.node = n || null
            }
        }
          , s = Class.create(i.Rectangle, o);
        s.fromRectangle = function(e, t) {
            return Object.extend(e, o),
            t && (e.node = t),
            e
        }
        ;
        var a = Class.create({
            _rectangles: [],
            initialize: function() {
                this._rectangles = []
            },
            rectangles: function() {
                return this._rectangles.reject(function(e) {
                    return e.node.hidden
                })
            },
            getRectangle: function(e) {
                for (var t = this._rectangles.length; t > 0; )
                    if (this._rectangles[--t].node === e)
                        return this._rectangles[t]
            },
            update: function(e) {
                if (!e.isRoot()) {
                    var t, n = e.getRootC(), i = n._listener.getSizesForLayouter(!0), o = i.rectangle, a = this.getRectangle(n);
                    if (a) {
                        var l = Object.clone(a);
                        a.p1 = o.p1,
                        a.p2 = o.p2,
                        canvas.checkBounds(),
                        t = this.changeRectangle(n, l, a)
                    } else
                        o = s.fromRectangle(o, e),
                        Point.isValid(e.pos) ? (this.setPosition(o, e.pos, i.offsets, !0),
                        t = r.addPositioned(o)) : (e.pos = null,
                        t = r.addUnpositioned(o, i.offsets));
                    return t
                }
            },
            findPosition: function(e) {
                if (null !== App.config.layout.orientation)
                    return this.findPositionAligned();
                var t = []
                  , n = [];
                this.rectangles().sort(function(e, t) {
                    return e.p2.y - t.p2.y
                }).each(function(e) {
                    e.p1.x > 0 ? n.unshift(e) : t.unshift(e)
                });
                var i = e.size()
                  , o = canvas.root.dcontent.size()[0] / 2;
                return n.length < 2 || n.length < t.length ? [90 + o, n[0] ? n[0].p2.y + 75 : -100] : [-90 - o - i.x, t[0] ? t[0].p2.y + 75 : -100]
            },
            findPositionAligned: function() {
                var e = canvas.root.dcontent.size()[0] / 2
                  , t = this.rectangles()
                  , n = t.length - 1;
                return n < 0 ? [90 + e, -25] : [t[n].p1.x, t[n].p2.y]
            },
            addPositioned: function(e, t) {
                e.fixedInitialPosition = !t,
                this._rectangles.push(e),
                canvas.checkBounds();
                var n = e.center();
                return this.changeRectangle(e.node, new i.Rectangle(n,n), e)
            },
            addUnpositioned: function(e, t) {
                return this.setPosition(e, this.findPosition(e), t),
                this.addPositioned(e, !0)
            },
            setPosition: function(e, t, n, i) {
                var o = i ? t : a.rectanglePositionToNodeCoords(t, n)
                  , s = i ? a.nodePositionToRectangleCoords(t, n) : t;
                e.node.pos = o,
                e.move(new Point(s))
            },
            updateAll: function() {
                for (var e = 0, t = this.rectangles(), n = t.length; e < n; e++)
                    this.update(t[e].node)
            },
            remove: function(e) {
                for (var t, n = this._rectangles, o = n.length, s = []; o > 0; )
                    if (n[--o].node.id != e.id)
                        s.push(n[o]);
                    else {
                        t = n[o];
                        var a = t.center()
                          , r = this.changeRectangle(t.node, t, new i.Rectangle(a,a))
                    }
                return this._rectangles = s,
                r
            },
            _horizontalArrange: function(e, t) {
                return [e, [-(e.p2.x - t.p1.x) - 5, 0]]
            },
            _verticalArrange: function(e, t) {
                return [t, [0, e.center().y < t.center().y || e.p1.y === t.p1.y ? Math.abs(t.p1.y - e.p2.y) + 1 : -Math.abs(e.p1.y - t.p2.y) - 1]]
            },
            _arrange: function(e, t) {
                return e.center().x < 0 && t.center().x >= 0 ? this._horizontalArrange(e, t) : e.center().x >= 0 && t.center().x < 0 ? this._horizontalArrange(t, e) : this._verticalArrange(e, t)
            },
            _getOverlapping: function(e, t) {
                var n, i = e.detect(function(e) {
                    return n = t.detect(function(t) {
                        return e !== t && e.overlaps(t)
                    })
                });
                return i && n ? [i, n] : null
            },
            _getLayoutingChanges: function(e) {
                for (var t = [], n = this.rectangles().slice(0).sortBy(function(e) {
                    return Math.abs(e.center().y)
                }), i = 0, o = this._getOverlapping(e, n); o && i < 100; ) {
                    var s = this._arrange(o[0], o[1]);
                    if (!s)
                        return MM.error.reportException({
                            message: "Layouter DEBUG: result is null,  r1: " + o[0].toString() + " r2: " + o[1].toString() + " dirtySet: " + Object.inspect(e) + " rectangles: " + Object.inspect(n)
                        }),
                        [];
                    var a = s[0]
                      , r = s[1];
                    e.include(a) || e.push(a),
                    t.push([a.node, r]),
                    a.shift(new Point(r)),
                    o = this._getOverlapping(e, n),
                    i++
                }
                return t
            },
            changeRectangleTidy: function(e) {
                return this._getLayoutingChanges([e])
            },
            autoLayout: function() {
                return this._getLayoutingChanges(this.rectangles().slice(0).sortBy(function(e) {
                    return Math.abs(e.center().y)
                }))
            },
            autoCondense: function() {
                for (var e = new a, t = [], n = 0, i = this._rectangles.length; n < i; n++) {
                    var o = this._rectangles[n];
                    o = new s(new Point(0,0),o.size(),o.node),
                    e.addUnpositioned(o),
                    t.push([o.node, [0, 0]])
                }
                return t
            },
            changeRectangle: function(e, t, n) {
                if (this.elasticLayoutingEnabled && !App.config.layout.autoAlign) {
                    var i, o = t.p1.y - n.p1.y, s = t.p2.y - n.p2.y;
                    if (t.p1.y - t.p2.y === n.p1.y - n.p2.y)
                        return null;
                    for (var a = this.getRectangle(e), r = [], l = this.rectangles().slice(0), c = 0; c < l.length; c++)
                        if (i = l[c],
                        i.node.id === a.node.id)
                            r.push([i.node, [0, 0]]);
                        else {
                            var d = t
                              , h = n
                              , u = i.p1.x <= d.p1.x && d.p1.x <= i.p2.x || i.p1.x <= d.p2.x && d.p2.x <= i.p2.x || d.p1.x <= i.p1.x && i.p1.x <= d.p2.x || d.p1.x <= i.p2.x && i.p2.x <= d.p2.x
                              , p = i.p1.x <= h.p1.x && h.p1.x <= i.p2.x || i.p1.x <= h.p2.x && h.p2.x <= i.p2.x || h.p1.x <= i.p1.x && i.p1.x <= h.p2.x || h.p1.x <= i.p2.x && i.p2.x <= h.p2.x;
                            if (!p && !u)
                                continue;
                            if (i.center().y === a.center().y)
                                continue;
                            var f = i.center().y > a.center().y ? s : o;
                            0 !== f && r.push([i.node, [0, -f]])
                        }
                    return r
                }
            },
            getTotalSize: function() {
                for (var e = this.rectangles(), t = canvas.root.getSize(), n = t[0] / 2, i = -n, o = t[1] / 2, s = -o, a = 0; a < e.length; a++) {
                    var r = e[a];
                    r.p1.x < i && (i = r.p1.x),
                    r.p1.y < s && (s = r.p1.y),
                    r.p2.x > n && (n = r.p2.x),
                    r.p2.y > o && (o = r.p2.y)
                }
                return {
                    width: n - i,
                    height: o - s,
                    centerOffset: [-i, -s]
                }
            }
        });
        a.rectanglePositionToNodeCoords = function(e, t) {
            if (!t)
                return e;
            var n = [e[0], e[1] + t[1]];
            return e[0] < 0 && (n[0] += t[0]),
            n
        }
        ,
        a.nodePositionToRectangleCoords = function(e, t) {
            if (!t)
                return e;
            var n = [e[0], e[1] - t[1]];
            return e[0] < 0 && (n[0] -= t[0]),
            n
        }
        ;
        var r = new a;
        t.default = r
    },
    pTO5: function(e, t, n) {
        (function(e) {
            var n, i, o, s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            ;
            !function(a, r) {
                "object" === s(t) && "object" === s(e) ? e.exports = r() : (i = [],
                n = r,
                void 0 !== (o = "function" == typeof n ? n.apply(t, i) : n) && (e.exports = o))
            }(0, function() {
                return function(e) {
                    function t(i) {
                        if (n[i])
                            return n[i].exports;
                        var o = n[i] = {
                            exports: {},
                            id: i,
                            loaded: !1
                        };
                        return e[i].call(o.exports, o, o.exports, t),
                        o.loaded = !0,
                        o.exports
                    }
                    var n = {};
                    return t.m = e,
                    t.c = n,
                    t.p = "",
                    t(0)
                }([function(e, t, n) {
                    var i, o;
                    i = [n(1), n(3), n(4)],
                    void 0 !== (o = function(e) {
                        return e
                    }
                    .apply(t, i)) && (e.exports = o)
                }
                , function(e, t, n) {
                    var i, o;
                    i = [n(2)],
                    void 0 !== (o = function(e) {
                        function t(n) {
                            if (t.is(n, "function"))
                                return b ? n() : e.on("raphael.DOMload", n);
                            if (t.is(n, W))
                                return t._engine.create[I](t, n.splice(0, 3 + t.is(n[0], q))).add(n);
                            var i = Array.prototype.slice.call(arguments, 0);
                            if (t.is(i[i.length - 1], "function")) {
                                var o = i.pop();
                                return b ? o.call(t._engine.create[I](t, i)) : e.on("raphael.DOMload", function() {
                                    o.call(t._engine.create[I](t, i))
                                })
                            }
                            return t._engine.create[I](t, arguments)
                        }
                        function n(e) {
                            if ("function" == typeof e || Object(e) !== e)
                                return e;
                            var t = new e.constructor;
                            for (var i in e)
                                e[k](i) && "prototype" !== i && (t[i] = n(e[i]));
                            return t
                        }
                        function i(e, t) {
                            for (var n = 0, i = e.length; n < i; n++)
                                if (e[n] === t)
                                    return e.push(e.splice(n, 1)[0])
                        }
                        function o(e, t, n) {
                            function o() {
                                var s = Array.prototype.slice.call(arguments, 0)
                                  , a = s.join("␀")
                                  , r = o.cache = o.cache || {}
                                  , l = o.count = o.count || [];
                                return r[k](a) ? (i(l, a),
                                n ? n(r[a]) : r[a]) : (l.length >= 1e3 && delete r[l.shift()],
                                l.push(a),
                                r[a] = e[I](t, s),
                                n ? n(r[a]) : r[a])
                            }
                            return o
                        }
                        function a() {
                            return this.hex
                        }
                        function r(e, t) {
                            for (var n = [], i = 0, o = e.length; o - 2 * !t > i; i += 2) {
                                var s = [{
                                    x: +e[i - 2],
                                    y: +e[i - 1]
                                }, {
                                    x: +e[i],
                                    y: +e[i + 1]
                                }, {
                                    x: +e[i + 2],
                                    y: +e[i + 3]
                                }, {
                                    x: +e[i + 4],
                                    y: +e[i + 5]
                                }];
                                t ? i ? o - 4 == i ? s[3] = {
                                    x: +e[0],
                                    y: +e[1]
                                } : o - 2 == i && (s[2] = {
                                    x: +e[0],
                                    y: +e[1]
                                },
                                s[3] = {
                                    x: +e[2],
                                    y: +e[3]
                                }) : s[0] = {
                                    x: +e[o - 2],
                                    y: +e[o - 1]
                                } : o - 4 == i ? s[3] = s[2] : i || (s[0] = {
                                    x: +e[i],
                                    y: +e[i + 1]
                                }),
                                n.push(["C", (-s[0].x + 6 * s[1].x + s[2].x) / 6, (-s[0].y + 6 * s[1].y + s[2].y) / 6, (s[1].x + 6 * s[2].x - s[3].x) / 6, (s[1].y + 6 * s[2].y - s[3].y) / 6, s[2].x, s[2].y])
                            }
                            return n
                        }
                        function l(e, t, n, i, o) {
                            return e * (e * (-3 * t + 9 * n - 9 * i + 3 * o) + 6 * t - 12 * n + 6 * i) - 3 * t + 3 * n
                        }
                        function c(e, t, n, i, o, s, a, r, c) {
                            null == c && (c = 1),
                            c = c > 1 ? 1 : c < 0 ? 0 : c;
                            for (var d = c / 2, h = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816], u = [.2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472], p = 0, f = 0; f < 12; f++) {
                                var g = d * h[f] + d
                                  , m = l(g, e, n, o, a)
                                  , v = l(g, t, i, s, r)
                                  , _ = m * m + v * v;
                                p += u[f] * z.sqrt(_)
                            }
                            return d * p
                        }
                        function d(e, t, n, i, o, s, a, r, l) {
                            if (!(l < 0 || c(e, t, n, i, o, s, a, r) < l)) {
                                var d, h = .5, u = 1 - h;
                                for (d = c(e, t, n, i, o, s, a, r, u); $(d - l) > .01; )
                                    h /= 2,
                                    u += (d < l ? 1 : -1) * h,
                                    d = c(e, t, n, i, o, s, a, r, u);
                                return u
                            }
                        }
                        function h(e, t, n, i, o, s, a, r) {
                            if (!(F(e, n) < V(o, a) || V(e, n) > F(o, a) || F(t, i) < V(s, r) || V(t, i) > F(s, r))) {
                                var l = (e * i - t * n) * (o - a) - (e - n) * (o * r - s * a)
                                  , c = (e * i - t * n) * (s - r) - (t - i) * (o * r - s * a)
                                  , d = (e - n) * (s - r) - (t - i) * (o - a);
                                if (d) {
                                    var h = l / d
                                      , u = c / d
                                      , p = +h.toFixed(2)
                                      , f = +u.toFixed(2);
                                    if (!(p < +V(e, n).toFixed(2) || p > +F(e, n).toFixed(2) || p < +V(o, a).toFixed(2) || p > +F(o, a).toFixed(2) || f < +V(t, i).toFixed(2) || f > +F(t, i).toFixed(2) || f < +V(s, r).toFixed(2) || f > +F(s, r).toFixed(2)))
                                        return {
                                            x: h,
                                            y: u
                                        }
                                }
                            }
                        }
                        function u(e, n, i) {
                            var o = t.bezierBBox(e)
                              , s = t.bezierBBox(n);
                            if (!t.isBBoxIntersect(o, s))
                                return i ? 0 : [];
                            for (var a = c.apply(0, e), r = c.apply(0, n), l = F(~~(a / 5), 1), d = F(~~(r / 5), 1), u = [], p = [], f = {}, g = i ? 0 : [], m = 0; m < l + 1; m++) {
                                var v = t.findDotsAtSegment.apply(t, e.concat(m / l));
                                u.push({
                                    x: v.x,
                                    y: v.y,
                                    t: m / l
                                })
                            }
                            for (m = 0; m < d + 1; m++)
                                v = t.findDotsAtSegment.apply(t, n.concat(m / d)),
                                p.push({
                                    x: v.x,
                                    y: v.y,
                                    t: m / d
                                });
                            for (m = 0; m < l; m++)
                                for (var _ = 0; _ < d; _++) {
                                    var y = u[m]
                                      , b = u[m + 1]
                                      , w = p[_]
                                      , C = p[_ + 1]
                                      , x = $(b.x - y.x) < .001 ? "y" : "x"
                                      , S = $(C.x - w.x) < .001 ? "y" : "x"
                                      , k = h(y.x, y.y, b.x, b.y, w.x, w.y, C.x, C.y);
                                    if (k) {
                                        if (f[k.x.toFixed(4)] == k.y.toFixed(4))
                                            continue;
                                        f[k.x.toFixed(4)] = k.y.toFixed(4);
                                        var A = y.t + $((k[x] - y[x]) / (b[x] - y[x])) * (b.t - y.t)
                                          , M = w.t + $((k[S] - w[S]) / (C[S] - w[S])) * (C.t - w.t);
                                        A >= 0 && A <= 1.001 && M >= 0 && M <= 1.001 && (i ? g++ : g.push({
                                            x: k.x,
                                            y: k.y,
                                            t1: V(A, 1),
                                            t2: V(M, 1)
                                        }))
                                    }
                                }
                            return g
                        }
                        function p(e, n, i) {
                            e = t._path2curve(e),
                            n = t._path2curve(n);
                            for (var o, s, a, r, l, c, d, h, p, f, g = i ? 0 : [], m = 0, v = e.length; m < v; m++) {
                                var _ = e[m];
                                if ("M" == _[0])
                                    o = l = _[1],
                                    s = c = _[2];
                                else {
                                    "C" == _[0] ? (p = [o, s].concat(_.slice(1)),
                                    o = p[6],
                                    s = p[7]) : (p = [o, s, o, s, l, c, l, c],
                                    o = l,
                                    s = c);
                                    for (var y = 0, b = n.length; y < b; y++) {
                                        var w = n[y];
                                        if ("M" == w[0])
                                            a = d = w[1],
                                            r = h = w[2];
                                        else {
                                            "C" == w[0] ? (f = [a, r].concat(w.slice(1)),
                                            a = f[6],
                                            r = f[7]) : (f = [a, r, a, r, d, h, d, h],
                                            a = d,
                                            r = h);
                                            var C = u(p, f, i);
                                            if (i)
                                                g += C;
                                            else {
                                                for (var x = 0, S = C.length; x < S; x++)
                                                    C[x].segment1 = m,
                                                    C[x].segment2 = y,
                                                    C[x].bez1 = p,
                                                    C[x].bez2 = f;
                                                g = g.concat(C)
                                            }
                                        }
                                    }
                                }
                            }
                            return g
                        }
                        function f(e, t, n, i, o, s) {
                            null != e ? (this.a = +e,
                            this.b = +t,
                            this.c = +n,
                            this.d = +i,
                            this.e = +o,
                            this.f = +s) : (this.a = 1,
                            this.b = 0,
                            this.c = 0,
                            this.d = 1,
                            this.e = 0,
                            this.f = 0)
                        }
                        function g() {
                            return this.x + R + this.y + R + this.width + " × " + this.height
                        }
                        function m(e, t, n, i, o, s) {
                            function a(e) {
                                return ((d * e + c) * e + l) * e
                            }
                            function r(e, t) {
                                var n, i, o, s, r, h;
                                for (o = e,
                                h = 0; h < 8; h++) {
                                    if (s = a(o) - e,
                                    $(s) < t)
                                        return o;
                                    if (r = (3 * d * o + 2 * c) * o + l,
                                    $(r) < 1e-6)
                                        break;
                                    o -= s / r
                                }
                                if (n = 0,
                                i = 1,
                                (o = e) < n)
                                    return n;
                                if (o > i)
                                    return i;
                                for (; n < i; ) {
                                    if (s = a(o),
                                    $(s - e) < t)
                                        return o;
                                    e > s ? n = o : i = o,
                                    o = (i - n) / 2 + n
                                }
                                return o
                            }
                            var l = 3 * t
                              , c = 3 * (i - t) - l
                              , d = 1 - l - c
                              , h = 3 * n
                              , u = 3 * (o - n) - h
                              , p = 1 - h - u;
                            return function(e, t) {
                                var n = r(e, t);
                                return ((p * n + u) * n + h) * n
                            }(e, 1 / (200 * s))
                        }
                        function v(e, t) {
                            var n = []
                              , i = {};
                            if (this.ms = t,
                            this.times = 1,
                            e) {
                                for (var o in e)
                                    e[k](o) && (i[J(o)] = e[o],
                                    n.push(J(o)));
                                n.sort(de)
                            }
                            this.anim = i,
                            this.top = n[n.length - 1],
                            this.percents = n
                        }
                        function _(n, i, o, s, a, r) {
                            o = J(o);
                            var l, c, d, h, u, p, g = n.ms, v = {}, _ = {}, y = {};
                            if (s)
                                for (w = 0,
                                x = st.length; w < x; w++) {
                                    var b = st[w];
                                    if (b.el.id == i.id && b.anim == n) {
                                        b.percent != o ? (st.splice(w, 1),
                                        d = 1) : c = b,
                                        i.attr(b.totalOrigin);
                                        break
                                    }
                                }
                            else
                                s = +_;
                            for (var w = 0, x = n.percents.length; w < x; w++) {
                                if (n.percents[w] == o || n.percents[w] > s * n.top) {
                                    o = n.percents[w],
                                    u = n.percents[w - 1] || 0,
                                    g = g / n.top * (o - u),
                                    h = n.percents[w + 1],
                                    l = n.anim[o];
                                    break
                                }
                                s && i.attr(n.anim[n.percents[w]])
                            }
                            if (l) {
                                if (c)
                                    c.initstatus = s,
                                    c.start = new Date - c.ms * s;
                                else {
                                    for (var S in l)
                                        if (l[k](S) && (ne[k](S) || i.paper.customAttributes[k](S)))
                                            switch (v[S] = i.attr(S),
                                            null == v[S] && (v[S] = te[S]),
                                            _[S] = l[S],
                                            ne[S]) {
                                            case q:
                                                y[S] = (_[S] - v[S]) / g;
                                                break;
                                            case "colour":
                                                v[S] = t.getRGB(v[S]);
                                                var A = t.getRGB(_[S]);
                                                y[S] = {
                                                    r: (A.r - v[S].r) / g,
                                                    g: (A.g - v[S].g) / g,
                                                    b: (A.b - v[S].b) / g
                                                };
                                                break;
                                            case "path":
                                                var M = Pe(v[S], _[S])
                                                  , E = M[1];
                                                for (v[S] = M[0],
                                                y[S] = [],
                                                w = 0,
                                                x = v[S].length; w < x; w++) {
                                                    y[S][w] = [0];
                                                    for (var I = 1, T = v[S][w].length; I < T; I++)
                                                        y[S][w][I] = (E[w][I] - v[S][w][I]) / g
                                                }
                                                break;
                                            case "transform":
                                                var O = i._
                                                  , R = ze(O[S], _[S]);
                                                if (R)
                                                    for (v[S] = R.from,
                                                    _[S] = R.to,
                                                    y[S] = [],
                                                    y[S].real = !0,
                                                    w = 0,
                                                    x = v[S].length; w < x; w++)
                                                        for (y[S][w] = [v[S][w][0]],
                                                        I = 1,
                                                        T = v[S][w].length; I < T; I++)
                                                            y[S][w][I] = (_[S][w][I] - v[S][w][I]) / g;
                                                else {
                                                    var D = i.matrix || new f
                                                      , j = {
                                                        _: {
                                                            transform: O.transform
                                                        },
                                                        getBBox: function() {
                                                            return i.getBBox(1)
                                                        }
                                                    };
                                                    v[S] = [D.a, D.b, D.c, D.d, D.e, D.f],
                                                    je(j, _[S]),
                                                    _[S] = j._.transform,
                                                    y[S] = [(j.matrix.a - D.a) / g, (j.matrix.b - D.b) / g, (j.matrix.c - D.c) / g, (j.matrix.d - D.d) / g, (j.matrix.e - D.e) / g, (j.matrix.f - D.f) / g]
                                                }
                                                break;
                                            case "csv":
                                                var B = P(l[S])[N](C)
                                                  , z = P(v[S])[N](C);
                                                if ("clip-rect" == S)
                                                    for (v[S] = z,
                                                    y[S] = [],
                                                    w = z.length; w--; )
                                                        y[S][w] = (B[w] - v[S][w]) / g;
                                                _[S] = B;
                                                break;
                                            default:
                                                for (B = [][L](l[S]),
                                                z = [][L](v[S]),
                                                y[S] = [],
                                                w = i.paper.customAttributes[S].length; w--; )
                                                    y[S][w] = ((B[w] || 0) - (z[w] || 0)) / g
                                            }
                                    var F = l.easing
                                      , V = t.easing_formulas[F];
                                    if (!V)
                                        if ((V = P(F).match(Y)) && 5 == V.length) {
                                            var $ = V;
                                            V = function(e) {
                                                return m(e, +$[1], +$[2], +$[3], +$[4], g)
                                            }
                                        } else
                                            V = he;
                                    if (p = l.start || n.start || +new Date,
                                    b = {
                                        anim: n,
                                        percent: o,
                                        timestamp: p,
                                        start: p + (n.del || 0),
                                        status: 0,
                                        initstatus: s || 0,
                                        stop: !1,
                                        ms: g,
                                        easing: V,
                                        from: v,
                                        diff: y,
                                        to: _,
                                        el: i,
                                        callback: l.callback,
                                        prev: u,
                                        next: h,
                                        repeat: r || n.times,
                                        origin: i.attr(),
                                        totalOrigin: a
                                    },
                                    st.push(b),
                                    s && !c && !d && (b.stop = !0,
                                    b.start = new Date - g * s,
                                    1 == st.length))
                                        return rt();
                                    d && (b.start = new Date - b.ms * s),
                                    1 == st.length && at(rt)
                                }
                                e("raphael.anim.start." + i.id, i, n)
                            }
                        }
                        function y(e) {
                            for (var t = 0; t < st.length; t++)
                                st[t].el.paper == e && st.splice(t--, 1)
                        }
                        t.version = "2.2.0",
                        t.eve = e;
                        var b, w, C = /[, ]+/, x = {
                            circle: 1,
                            rect: 1,
                            path: 1,
                            ellipse: 1,
                            text: 1,
                            image: 1
                        }, S = /\{(\d+)\}/g, k = "hasOwnProperty", A = {
                            doc: document,
                            win: window
                        }, M = {
                            was: Object.prototype[k].call(A.win, "Raphael"),
                            is: A.win.Raphael
                        }, E = function() {
                            this.ca = this.customAttributes = {}
                        }, I = "apply", L = "concat", T = "ontouchstart"in A.win || A.win.DocumentTouch && A.doc instanceof DocumentTouch, O = "", R = " ", P = String, N = "split", D = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel"[N](R), j = {
                            mousedown: "touchstart",
                            mousemove: "touchmove",
                            mouseup: "touchend"
                        }, B = P.prototype.toLowerCase, z = Math, F = z.max, V = z.min, $ = z.abs, U = z.pow, H = z.PI, q = "number", W = "array", G = Object.prototype.toString, K = (t._ISURL = /^url\(['"]?(.+?)['"]?\)$/i,
                        /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i), Z = {
                            NaN: 1,
                            Infinity: 1,
                            "-Infinity": 1
                        }, Y = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/, Q = z.round, J = parseFloat, X = parseInt, ee = P.prototype.toUpperCase, te = t._availableAttrs = {
                            "arrow-end": "none",
                            "arrow-start": "none",
                            blur: 0,
                            "clip-rect": "0 0 1e9 1e9",
                            cursor: "default",
                            cx: 0,
                            cy: 0,
                            fill: "#fff",
                            "fill-opacity": 1,
                            font: '10px "Arial"',
                            "font-family": '"Arial"',
                            "font-size": "10",
                            "font-style": "normal",
                            "font-weight": 400,
                            gradient: 0,
                            height: 0,
                            href: "http://raphaeljs.com/",
                            "letter-spacing": 0,
                            opacity: 1,
                            path: "M0,0",
                            r: 0,
                            rx: 0,
                            ry: 0,
                            src: "",
                            stroke: "#000",
                            "stroke-dasharray": "",
                            "stroke-linecap": "butt",
                            "stroke-linejoin": "butt",
                            "stroke-miterlimit": 0,
                            "stroke-opacity": 1,
                            "stroke-width": 1,
                            target: "_blank",
                            "text-anchor": "middle",
                            title: "Raphael",
                            transform: "",
                            width: 0,
                            x: 0,
                            y: 0,
                            class: ""
                        }, ne = t._availableAnimAttrs = {
                            blur: q,
                            "clip-rect": "csv",
                            cx: q,
                            cy: q,
                            fill: "colour",
                            "fill-opacity": q,
                            "font-size": q,
                            height: q,
                            opacity: q,
                            path: "path",
                            r: q,
                            rx: q,
                            ry: q,
                            stroke: "colour",
                            "stroke-opacity": q,
                            "stroke-width": q,
                            transform: "transform",
                            width: q,
                            x: q,
                            y: q
                        }, ie = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/, oe = {
                            hs: 1,
                            rg: 1
                        }, se = /,?([achlmqrstvxz]),?/gi, ae = /([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi, re = /([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi, le = /(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/gi, ce = (t._radial_gradient = /^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/,
                        {}), de = function(e, t) {
                            return J(e) - J(t)
                        }, he = function(e) {
                            return e
                        }, ue = t._rectPath = function(e, t, n, i, o) {
                            return o ? [["M", e + o, t], ["l", n - 2 * o, 0], ["a", o, o, 0, 0, 1, o, o], ["l", 0, i - 2 * o], ["a", o, o, 0, 0, 1, -o, o], ["l", 2 * o - n, 0], ["a", o, o, 0, 0, 1, -o, -o], ["l", 0, 2 * o - i], ["a", o, o, 0, 0, 1, o, -o], ["z"]] : [["M", e, t], ["l", n, 0], ["l", 0, i], ["l", -n, 0], ["z"]]
                        }
                        , pe = function(e, t, n, i) {
                            return null == i && (i = n),
                            [["M", e, t], ["m", 0, -i], ["a", n, i, 0, 1, 1, 0, 2 * i], ["a", n, i, 0, 1, 1, 0, -2 * i], ["z"]]
                        }, fe = t._getPath = {
                            path: function(e) {
                                return e.attr("path")
                            },
                            circle: function(e) {
                                var t = e.attrs;
                                return pe(t.cx, t.cy, t.r)
                            },
                            ellipse: function(e) {
                                var t = e.attrs;
                                return pe(t.cx, t.cy, t.rx, t.ry)
                            },
                            rect: function(e) {
                                var t = e.attrs;
                                return ue(t.x, t.y, t.width, t.height, t.r)
                            },
                            image: function(e) {
                                var t = e.attrs;
                                return ue(t.x, t.y, t.width, t.height)
                            },
                            text: function(e) {
                                var t = e._getBBox();
                                return ue(t.x, t.y, t.width, t.height)
                            },
                            set: function(e) {
                                var t = e._getBBox();
                                return ue(t.x, t.y, t.width, t.height)
                            }
                        }, ge = t.mapPath = function(e, t) {
                            if (!t)
                                return e;
                            var n, i, o, s, a, r, l;
                            for (e = Pe(e),
                            o = 0,
                            a = e.length; o < a; o++)
                                for (l = e[o],
                                s = 1,
                                r = l.length; s < r; s += 2)
                                    n = t.x(l[s], l[s + 1]),
                                    i = t.y(l[s], l[s + 1]),
                                    l[s] = n,
                                    l[s + 1] = i;
                            return e
                        }
                        ;
                        if (t._g = A,
                        t.type = A.win.SVGAngle || A.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? "SVG" : "VML",
                        "VML" == t.type) {
                            var me, ve = A.doc.createElement("div");
                            if (ve.innerHTML = '<v:shape adj="1"/>',
                            me = ve.firstChild,
                            me.style.behavior = "url(#default#VML)",
                            !me || "object" != s(me.adj))
                                return t.type = O;
                            ve = null
                        }
                        t.svg = !(t.vml = "VML" == t.type),
                        t._Paper = E,
                        t.fn = w = E.prototype = t.prototype,
                        t._id = 0,
                        t.is = function(e, t) {
                            return t = B.call(t),
                            "finite" == t ? !Z[k](+e) : "array" == t ? e instanceof Array : "null" == t && null === e || t == (void 0 === e ? "undefined" : s(e)) && null !== e || "object" == t && e === Object(e) || "array" == t && Array.isArray && Array.isArray(e) || G.call(e).slice(8, -1).toLowerCase() == t
                        }
                        ,
                        t.angle = function(e, n, i, o, s, a) {
                            if (null == s) {
                                var r = e - i
                                  , l = n - o;
                                return r || l ? (180 + 180 * z.atan2(-l, -r) / H + 360) % 360 : 0
                            }
                            return t.angle(e, n, s, a) - t.angle(i, o, s, a)
                        }
                        ,
                        t.rad = function(e) {
                            return e % 360 * H / 180
                        }
                        ,
                        t.deg = function(e) {
                            return Math.round(180 * e / H % 360 * 1e3) / 1e3
                        }
                        ,
                        t.snapTo = function(e, n, i) {
                            if (i = t.is(i, "finite") ? i : 10,
                            t.is(e, W)) {
                                for (var o = e.length; o--; )
                                    if ($(e[o] - n) <= i)
                                        return e[o]
                            } else {
                                e = +e;
                                var s = n % e;
                                if (s < i)
                                    return n - s;
                                if (s > e - i)
                                    return n - s + e
                            }
                            return n
                        }
                        ;
                        t.createUUID = function(e, t) {
                            return function() {
                                return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(e, t).toUpperCase()
                            }
                        }(/[xy]/g, function(e) {
                            var t = 16 * z.random() | 0;
                            return ("x" == e ? t : 3 & t | 8).toString(16)
                        });
                        t.setWindow = function(n) {
                            e("raphael.setWindow", t, A.win, n),
                            A.win = n,
                            A.doc = A.win.document,
                            t._engine.initWin && t._engine.initWin(A.win)
                        }
                        ;
                        var _e = function(e) {
                            if (t.vml) {
                                var n, i = /^\s+|\s+$/g;
                                try {
                                    var s = new ActiveXObject("htmlfile");
                                    s.write("<body>"),
                                    s.close(),
                                    n = s.body
                                } catch (e) {
                                    n = createPopup().document.body
                                }
                                var a = n.createTextRange();
                                _e = o(function(e) {
                                    try {
                                        n.style.color = P(e).replace(i, O);
                                        var t = a.queryCommandValue("ForeColor");
                                        return t = (255 & t) << 16 | 65280 & t | (16711680 & t) >>> 16,
                                        "#" + ("000000" + t.toString(16)).slice(-6)
                                    } catch (e) {
                                        return "none"
                                    }
                                })
                            } else {
                                var r = A.doc.createElement("i");
                                r.title = "Raphaël Colour Picker",
                                r.style.display = "none",
                                A.doc.body.appendChild(r),
                                _e = o(function(e) {
                                    return r.style.color = e,
                                    A.doc.defaultView.getComputedStyle(r, O).getPropertyValue("color")
                                })
                            }
                            return _e(e)
                        }
                          , ye = function() {
                            return "hsb(" + [this.h, this.s, this.b] + ")"
                        }
                          , be = function() {
                            return "hsl(" + [this.h, this.s, this.l] + ")"
                        }
                          , we = function() {
                            return this.hex
                        }
                          , Ce = function(e, n, i) {
                            if (null == n && t.is(e, "object") && "r"in e && "g"in e && "b"in e && (i = e.b,
                            n = e.g,
                            e = e.r),
                            null == n && t.is(e, "string")) {
                                var o = t.getRGB(e);
                                e = o.r,
                                n = o.g,
                                i = o.b
                            }
                            return (e > 1 || n > 1 || i > 1) && (e /= 255,
                            n /= 255,
                            i /= 255),
                            [e, n, i]
                        }
                          , xe = function(e, n, i, o) {
                            e *= 255,
                            n *= 255,
                            i *= 255;
                            var s = {
                                r: e,
                                g: n,
                                b: i,
                                hex: t.rgb(e, n, i),
                                toString: we
                            };
                            return t.is(o, "finite") && (s.opacity = o),
                            s
                        };
                        t.color = function(e) {
                            var n;
                            return t.is(e, "object") && "h"in e && "s"in e && "b"in e ? (n = t.hsb2rgb(e),
                            e.r = n.r,
                            e.g = n.g,
                            e.b = n.b,
                            e.hex = n.hex) : t.is(e, "object") && "h"in e && "s"in e && "l"in e ? (n = t.hsl2rgb(e),
                            e.r = n.r,
                            e.g = n.g,
                            e.b = n.b,
                            e.hex = n.hex) : (t.is(e, "string") && (e = t.getRGB(e)),
                            t.is(e, "object") && "r"in e && "g"in e && "b"in e ? (n = t.rgb2hsl(e),
                            e.h = n.h,
                            e.s = n.s,
                            e.l = n.l,
                            n = t.rgb2hsb(e),
                            e.v = n.b) : (e = {
                                hex: "none"
                            },
                            e.r = e.g = e.b = e.h = e.s = e.v = e.l = -1)),
                            e.toString = we,
                            e
                        }
                        ,
                        t.hsb2rgb = function(e, t, n, i) {
                            this.is(e, "object") && "h"in e && "s"in e && "b"in e && (n = e.b,
                            t = e.s,
                            i = e.o,
                            e = e.h),
                            e *= 360;
                            var o, s, a, r, l;
                            return e = e % 360 / 60,
                            l = n * t,
                            r = l * (1 - $(e % 2 - 1)),
                            o = s = a = n - l,
                            e = ~~e,
                            o += [l, r, 0, 0, r, l][e],
                            s += [r, l, l, r, 0, 0][e],
                            a += [0, 0, r, l, l, r][e],
                            xe(o, s, a, i)
                        }
                        ,
                        t.hsl2rgb = function(e, t, n, i) {
                            this.is(e, "object") && "h"in e && "s"in e && "l"in e && (n = e.l,
                            t = e.s,
                            e = e.h),
                            (e > 1 || t > 1 || n > 1) && (e /= 360,
                            t /= 100,
                            n /= 100),
                            e *= 360;
                            var o, s, a, r, l;
                            return e = e % 360 / 60,
                            l = 2 * t * (n < .5 ? n : 1 - n),
                            r = l * (1 - $(e % 2 - 1)),
                            o = s = a = n - l / 2,
                            e = ~~e,
                            o += [l, r, 0, 0, r, l][e],
                            s += [r, l, l, r, 0, 0][e],
                            a += [0, 0, r, l, l, r][e],
                            xe(o, s, a, i)
                        }
                        ,
                        t.rgb2hsb = function(e, t, n) {
                            n = Ce(e, t, n),
                            e = n[0],
                            t = n[1],
                            n = n[2];
                            var i, o, s, a;
                            return s = F(e, t, n),
                            a = s - V(e, t, n),
                            i = 0 == a ? null : s == e ? (t - n) / a : s == t ? (n - e) / a + 2 : (e - t) / a + 4,
                            i = (i + 360) % 6 * 60 / 360,
                            o = 0 == a ? 0 : a / s,
                            {
                                h: i,
                                s: o,
                                b: s,
                                toString: ye
                            }
                        }
                        ,
                        t.rgb2hsl = function(e, t, n) {
                            n = Ce(e, t, n),
                            e = n[0],
                            t = n[1],
                            n = n[2];
                            var i, o, s, a, r, l;
                            return a = F(e, t, n),
                            r = V(e, t, n),
                            l = a - r,
                            i = 0 == l ? null : a == e ? (t - n) / l : a == t ? (n - e) / l + 2 : (e - t) / l + 4,
                            i = (i + 360) % 6 * 60 / 360,
                            s = (a + r) / 2,
                            o = 0 == l ? 0 : s < .5 ? l / (2 * s) : l / (2 - 2 * s),
                            {
                                h: i,
                                s: o,
                                l: s,
                                toString: be
                            }
                        }
                        ,
                        t._path2string = function() {
                            return this.join(",").replace(se, "$1")
                        }
                        ;
                        t._preload = function(e, t) {
                            var n = A.doc.createElement("img");
                            n.style.cssText = "position:absolute;left:-9999em;top:-9999em",
                            n.onload = function() {
                                t.call(this),
                                this.onload = null,
                                A.doc.body.removeChild(this)
                            }
                            ,
                            n.onerror = function() {
                                A.doc.body.removeChild(this)
                            }
                            ,
                            A.doc.body.appendChild(n),
                            n.src = e
                        }
                        ;
                        t.getRGB = o(function(e) {
                            if (!e || (e = P(e)).indexOf("-") + 1)
                                return {
                                    r: -1,
                                    g: -1,
                                    b: -1,
                                    hex: "none",
                                    error: 1,
                                    toString: a
                                };
                            if ("none" == e)
                                return {
                                    r: -1,
                                    g: -1,
                                    b: -1,
                                    hex: "none",
                                    toString: a
                                };
                            !(oe[k](e.toLowerCase().substring(0, 2)) || "#" == e.charAt()) && (e = _e(e));
                            var n, i, o, s, r, l, c = e.match(K);
                            return c ? (c[2] && (o = X(c[2].substring(5), 16),
                            i = X(c[2].substring(3, 5), 16),
                            n = X(c[2].substring(1, 3), 16)),
                            c[3] && (o = X((r = c[3].charAt(3)) + r, 16),
                            i = X((r = c[3].charAt(2)) + r, 16),
                            n = X((r = c[3].charAt(1)) + r, 16)),
                            c[4] && (l = c[4][N](ie),
                            n = J(l[0]),
                            "%" == l[0].slice(-1) && (n *= 2.55),
                            i = J(l[1]),
                            "%" == l[1].slice(-1) && (i *= 2.55),
                            o = J(l[2]),
                            "%" == l[2].slice(-1) && (o *= 2.55),
                            "rgba" == c[1].toLowerCase().slice(0, 4) && (s = J(l[3])),
                            l[3] && "%" == l[3].slice(-1) && (s /= 100)),
                            c[5] ? (l = c[5][N](ie),
                            n = J(l[0]),
                            "%" == l[0].slice(-1) && (n *= 2.55),
                            i = J(l[1]),
                            "%" == l[1].slice(-1) && (i *= 2.55),
                            o = J(l[2]),
                            "%" == l[2].slice(-1) && (o *= 2.55),
                            ("deg" == l[0].slice(-3) || "°" == l[0].slice(-1)) && (n /= 360),
                            "hsba" == c[1].toLowerCase().slice(0, 4) && (s = J(l[3])),
                            l[3] && "%" == l[3].slice(-1) && (s /= 100),
                            t.hsb2rgb(n, i, o, s)) : c[6] ? (l = c[6][N](ie),
                            n = J(l[0]),
                            "%" == l[0].slice(-1) && (n *= 2.55),
                            i = J(l[1]),
                            "%" == l[1].slice(-1) && (i *= 2.55),
                            o = J(l[2]),
                            "%" == l[2].slice(-1) && (o *= 2.55),
                            ("deg" == l[0].slice(-3) || "°" == l[0].slice(-1)) && (n /= 360),
                            "hsla" == c[1].toLowerCase().slice(0, 4) && (s = J(l[3])),
                            l[3] && "%" == l[3].slice(-1) && (s /= 100),
                            t.hsl2rgb(n, i, o, s)) : (c = {
                                r: n,
                                g: i,
                                b: o,
                                toString: a
                            },
                            c.hex = "#" + (16777216 | o | i << 8 | n << 16).toString(16).slice(1),
                            t.is(s, "finite") && (c.opacity = s),
                            c)) : {
                                r: -1,
                                g: -1,
                                b: -1,
                                hex: "none",
                                error: 1,
                                toString: a
                            }
                        }, t),
                        t.hsb = o(function(e, n, i) {
                            return t.hsb2rgb(e, n, i).hex
                        }),
                        t.hsl = o(function(e, n, i) {
                            return t.hsl2rgb(e, n, i).hex
                        }),
                        t.rgb = o(function(e, t, n) {
                            function i(e) {
                                return e + .5 | 0
                            }
                            return "#" + (16777216 | i(n) | i(t) << 8 | i(e) << 16).toString(16).slice(1)
                        }),
                        t.getColor = function(e) {
                            var t = this.getColor.start = this.getColor.start || {
                                h: 0,
                                s: 1,
                                b: e || .75
                            }
                              , n = this.hsb2rgb(t.h, t.s, t.b);
                            return t.h += .075,
                            t.h > 1 && (t.h = 0,
                            t.s -= .2,
                            t.s <= 0 && (this.getColor.start = {
                                h: 0,
                                s: 1,
                                b: t.b
                            })),
                            n.hex
                        }
                        ,
                        t.getColor.reset = function() {
                            delete this.start
                        }
                        ,
                        t.parsePathString = function(e) {
                            if (!e)
                                return null;
                            var n = Se(e);
                            if (n.arr)
                                return Ae(n.arr);
                            var i = {
                                a: 7,
                                c: 6,
                                h: 1,
                                l: 2,
                                m: 2,
                                r: 4,
                                q: 4,
                                s: 4,
                                t: 2,
                                v: 1,
                                z: 0
                            }
                              , o = [];
                            return t.is(e, W) && t.is(e[0], W) && (o = Ae(e)),
                            o.length || P(e).replace(ae, function(e, t, n) {
                                var s = []
                                  , a = t.toLowerCase();
                                if (n.replace(le, function(e, t) {
                                    t && s.push(+t)
                                }),
                                "m" == a && s.length > 2 && (o.push([t][L](s.splice(0, 2))),
                                a = "l",
                                t = "m" == t ? "l" : "L"),
                                "r" == a)
                                    o.push([t][L](s));
                                else
                                    for (; s.length >= i[a] && (o.push([t][L](s.splice(0, i[a]))),
                                    i[a]); )
                                        ;
                            }),
                            o.toString = t._path2string,
                            n.arr = Ae(o),
                            o
                        }
                        ,
                        t.parseTransformString = o(function(e) {
                            if (!e)
                                return null;
                            var n = [];
                            return t.is(e, W) && t.is(e[0], W) && (n = Ae(e)),
                            n.length || P(e).replace(re, function(e, t, i) {
                                var o = [];
                                B.call(t);
                                i.replace(le, function(e, t) {
                                    t && o.push(+t)
                                }),
                                n.push([t][L](o))
                            }),
                            n.toString = t._path2string,
                            n
                        });
                        var Se = function e(t) {
                            var n = e.ps = e.ps || {};
                            return n[t] ? n[t].sleep = 100 : n[t] = {
                                sleep: 100
                            },
                            setTimeout(function() {
                                for (var e in n)
                                    n[k](e) && e != t && !--n[e].sleep && delete n[e]
                            }),
                            n[t]
                        };
                        t.findDotsAtSegment = function(e, t, n, i, o, s, a, r, l) {
                            var c = 1 - l
                              , d = U(c, 3)
                              , h = U(c, 2)
                              , u = l * l
                              , p = u * l
                              , f = d * e + 3 * h * l * n + 3 * c * l * l * o + p * a
                              , g = d * t + 3 * h * l * i + 3 * c * l * l * s + p * r
                              , m = e + 2 * l * (n - e) + u * (o - 2 * n + e)
                              , v = t + 2 * l * (i - t) + u * (s - 2 * i + t)
                              , _ = n + 2 * l * (o - n) + u * (a - 2 * o + n)
                              , y = i + 2 * l * (s - i) + u * (r - 2 * s + i)
                              , b = c * e + l * n
                              , w = c * t + l * i
                              , C = c * o + l * a
                              , x = c * s + l * r
                              , S = 90 - 180 * z.atan2(m - _, v - y) / H;
                            return (m > _ || v < y) && (S += 180),
                            {
                                x: f,
                                y: g,
                                m: {
                                    x: m,
                                    y: v
                                },
                                n: {
                                    x: _,
                                    y: y
                                },
                                start: {
                                    x: b,
                                    y: w
                                },
                                end: {
                                    x: C,
                                    y: x
                                },
                                alpha: S
                            }
                        }
                        ,
                        t.bezierBBox = function(e, n, i, o, s, a, r, l) {
                            t.is(e, "array") || (e = [e, n, i, o, s, a, r, l]);
                            var c = Re.apply(null, e);
                            return {
                                x: c.min.x,
                                y: c.min.y,
                                x2: c.max.x,
                                y2: c.max.y,
                                width: c.max.x - c.min.x,
                                height: c.max.y - c.min.y
                            }
                        }
                        ,
                        t.isPointInsideBBox = function(e, t, n) {
                            return t >= e.x && t <= e.x2 && n >= e.y && n <= e.y2
                        }
                        ,
                        t.isBBoxIntersect = function(e, n) {
                            var i = t.isPointInsideBBox;
                            return i(n, e.x, e.y) || i(n, e.x2, e.y) || i(n, e.x, e.y2) || i(n, e.x2, e.y2) || i(e, n.x, n.y) || i(e, n.x2, n.y) || i(e, n.x, n.y2) || i(e, n.x2, n.y2) || (e.x < n.x2 && e.x > n.x || n.x < e.x2 && n.x > e.x) && (e.y < n.y2 && e.y > n.y || n.y < e.y2 && n.y > e.y)
                        }
                        ,
                        t.pathIntersection = function(e, t) {
                            return p(e, t)
                        }
                        ,
                        t.pathIntersectionNumber = function(e, t) {
                            return p(e, t, 1)
                        }
                        ,
                        t.isPointInsidePath = function(e, n, i) {
                            var o = t.pathBBox(e);
                            return t.isPointInsideBBox(o, n, i) && p(e, [["M", n, i], ["H", o.x2 + 10]], 1) % 2 == 1
                        }
                        ,
                        t._removedFactory = function(t) {
                            return function() {
                                e("raphael.log", null, "Raphaël: you are calling to method “" + t + "” of removed object", t)
                            }
                        }
                        ;
                        var ke = t.pathBBox = function(e) {
                            var t = Se(e);
                            if (t.bbox)
                                return n(t.bbox);
                            if (!e)
                                return {
                                    x: 0,
                                    y: 0,
                                    width: 0,
                                    height: 0,
                                    x2: 0,
                                    y2: 0
                                };
                            e = Pe(e);
                            for (var i, o = 0, s = 0, a = [], r = [], l = 0, c = e.length; l < c; l++)
                                if (i = e[l],
                                "M" == i[0])
                                    o = i[1],
                                    s = i[2],
                                    a.push(o),
                                    r.push(s);
                                else {
                                    var d = Re(o, s, i[1], i[2], i[3], i[4], i[5], i[6]);
                                    a = a[L](d.min.x, d.max.x),
                                    r = r[L](d.min.y, d.max.y),
                                    o = i[5],
                                    s = i[6]
                                }
                            var h = V[I](0, a)
                              , u = V[I](0, r)
                              , p = F[I](0, a)
                              , f = F[I](0, r)
                              , g = p - h
                              , m = f - u
                              , v = {
                                x: h,
                                y: u,
                                x2: p,
                                y2: f,
                                width: g,
                                height: m,
                                cx: h + g / 2,
                                cy: u + m / 2
                            };
                            return t.bbox = n(v),
                            v
                        }
                          , Ae = function(e) {
                            var i = n(e);
                            return i.toString = t._path2string,
                            i
                        }
                          , Me = t._pathToRelative = function(e) {
                            var n = Se(e);
                            if (n.rel)
                                return Ae(n.rel);
                            t.is(e, W) && t.is(e && e[0], W) || (e = t.parsePathString(e));
                            var i = []
                              , o = 0
                              , s = 0
                              , a = 0
                              , r = 0
                              , l = 0;
                            "M" == e[0][0] && (o = e[0][1],
                            s = e[0][2],
                            a = o,
                            r = s,
                            l++,
                            i.push(["M", o, s]));
                            for (var c = l, d = e.length; c < d; c++) {
                                var h = i[c] = []
                                  , u = e[c];
                                if (u[0] != B.call(u[0]))
                                    switch (h[0] = B.call(u[0]),
                                    h[0]) {
                                    case "a":
                                        h[1] = u[1],
                                        h[2] = u[2],
                                        h[3] = u[3],
                                        h[4] = u[4],
                                        h[5] = u[5],
                                        h[6] = +(u[6] - o).toFixed(3),
                                        h[7] = +(u[7] - s).toFixed(3);
                                        break;
                                    case "v":
                                        h[1] = +(u[1] - s).toFixed(3);
                                        break;
                                    case "m":
                                        a = u[1],
                                        r = u[2];
                                    default:
                                        for (var p = 1, f = u.length; p < f; p++)
                                            h[p] = +(u[p] - (p % 2 ? o : s)).toFixed(3)
                                    }
                                else {
                                    h = i[c] = [],
                                    "m" == u[0] && (a = u[1] + o,
                                    r = u[2] + s);
                                    for (var g = 0, m = u.length; g < m; g++)
                                        i[c][g] = u[g]
                                }
                                var v = i[c].length;
                                switch (i[c][0]) {
                                case "z":
                                    o = a,
                                    s = r;
                                    break;
                                case "h":
                                    o += +i[c][v - 1];
                                    break;
                                case "v":
                                    s += +i[c][v - 1];
                                    break;
                                default:
                                    o += +i[c][v - 2],
                                    s += +i[c][v - 1]
                                }
                            }
                            return i.toString = t._path2string,
                            n.rel = Ae(i),
                            i
                        }
                          , Ee = t._pathToAbsolute = function(e) {
                            var n = Se(e);
                            if (n.abs)
                                return Ae(n.abs);
                            if (t.is(e, W) && t.is(e && e[0], W) || (e = t.parsePathString(e)),
                            !e || !e.length)
                                return [["M", 0, 0]];
                            var i = []
                              , o = 0
                              , s = 0
                              , a = 0
                              , l = 0
                              , c = 0;
                            "M" == e[0][0] && (o = +e[0][1],
                            s = +e[0][2],
                            a = o,
                            l = s,
                            c++,
                            i[0] = ["M", o, s]);
                            for (var d, h, u = 3 == e.length && "M" == e[0][0] && "R" == e[1][0].toUpperCase() && "Z" == e[2][0].toUpperCase(), p = c, f = e.length; p < f; p++) {
                                if (i.push(d = []),
                                h = e[p],
                                h[0] != ee.call(h[0]))
                                    switch (d[0] = ee.call(h[0]),
                                    d[0]) {
                                    case "A":
                                        d[1] = h[1],
                                        d[2] = h[2],
                                        d[3] = h[3],
                                        d[4] = h[4],
                                        d[5] = h[5],
                                        d[6] = +(h[6] + o),
                                        d[7] = +(h[7] + s);
                                        break;
                                    case "V":
                                        d[1] = +h[1] + s;
                                        break;
                                    case "H":
                                        d[1] = +h[1] + o;
                                        break;
                                    case "R":
                                        for (var g = [o, s][L](h.slice(1)), m = 2, v = g.length; m < v; m++)
                                            g[m] = +g[m] + o,
                                            g[++m] = +g[m] + s;
                                        i.pop(),
                                        i = i[L](r(g, u));
                                        break;
                                    case "M":
                                        a = +h[1] + o,
                                        l = +h[2] + s;
                                    default:
                                        for (m = 1,
                                        v = h.length; m < v; m++)
                                            d[m] = +h[m] + (m % 2 ? o : s)
                                    }
                                else if ("R" == h[0])
                                    g = [o, s][L](h.slice(1)),
                                    i.pop(),
                                    i = i[L](r(g, u)),
                                    d = ["R"][L](h.slice(-2));
                                else
                                    for (var _ = 0, y = h.length; _ < y; _++)
                                        d[_] = h[_];
                                switch (d[0]) {
                                case "Z":
                                    o = a,
                                    s = l;
                                    break;
                                case "H":
                                    o = d[1];
                                    break;
                                case "V":
                                    s = d[1];
                                    break;
                                case "M":
                                    a = d[d.length - 2],
                                    l = d[d.length - 1];
                                default:
                                    o = d[d.length - 2],
                                    s = d[d.length - 1]
                                }
                            }
                            return i.toString = t._path2string,
                            n.abs = Ae(i),
                            i
                        }
                          , Ie = function(e, t, n, i) {
                            return [e, t, n, i, n, i]
                        }
                          , Le = function(e, t, n, i, o, s) {
                            return [1 / 3 * e + 2 / 3 * n, 1 / 3 * t + 2 / 3 * i, 1 / 3 * o + 2 / 3 * n, 1 / 3 * s + 2 / 3 * i, o, s]
                        }
                          , Te = function e(t, n, i, s, a, r, l, c, d, h) {
                            var u, p = 120 * H / 180, f = H / 180 * (+a || 0), g = [], m = o(function(e, t, n) {
                                return {
                                    x: e * z.cos(n) - t * z.sin(n),
                                    y: e * z.sin(n) + t * z.cos(n)
                                }
                            });
                            if (h)
                                k = h[0],
                                A = h[1],
                                x = h[2],
                                S = h[3];
                            else {
                                u = m(t, n, -f),
                                t = u.x,
                                n = u.y,
                                u = m(c, d, -f),
                                c = u.x,
                                d = u.y;
                                var v = (z.cos(H / 180 * a),
                                z.sin(H / 180 * a),
                                (t - c) / 2)
                                  , _ = (n - d) / 2
                                  , y = v * v / (i * i) + _ * _ / (s * s);
                                y > 1 && (y = z.sqrt(y),
                                i *= y,
                                s *= y);
                                var b = i * i
                                  , w = s * s
                                  , C = (r == l ? -1 : 1) * z.sqrt($((b * w - b * _ * _ - w * v * v) / (b * _ * _ + w * v * v)))
                                  , x = C * i * _ / s + (t + c) / 2
                                  , S = C * -s * v / i + (n + d) / 2
                                  , k = z.asin(((n - S) / s).toFixed(9))
                                  , A = z.asin(((d - S) / s).toFixed(9));
                                k = t < x ? H - k : k,
                                A = c < x ? H - A : A,
                                k < 0 && (k = 2 * H + k),
                                A < 0 && (A = 2 * H + A),
                                l && k > A && (k -= 2 * H),
                                !l && A > k && (A -= 2 * H)
                            }
                            var M = A - k;
                            if ($(M) > p) {
                                var E = A
                                  , I = c
                                  , T = d;
                                A = k + p * (l && A > k ? 1 : -1),
                                c = x + i * z.cos(A),
                                d = S + s * z.sin(A),
                                g = e(c, d, i, s, a, 0, l, I, T, [A, E, x, S])
                            }
                            M = A - k;
                            var O = z.cos(k)
                              , R = z.sin(k)
                              , P = z.cos(A)
                              , D = z.sin(A)
                              , j = z.tan(M / 4)
                              , B = 4 / 3 * i * j
                              , F = 4 / 3 * s * j
                              , V = [t, n]
                              , U = [t + B * R, n - F * O]
                              , q = [c + B * D, d - F * P]
                              , W = [c, d];
                            if (U[0] = 2 * V[0] - U[0],
                            U[1] = 2 * V[1] - U[1],
                            h)
                                return [U, q, W][L](g);
                            g = [U, q, W][L](g).join()[N](",");
                            for (var G = [], K = 0, Z = g.length; K < Z; K++)
                                G[K] = K % 2 ? m(g[K - 1], g[K], f).y : m(g[K], g[K + 1], f).x;
                            return G
                        }
                          , Oe = function(e, t, n, i, o, s, a, r, l) {
                            var c = 1 - l;
                            return {
                                x: U(c, 3) * e + 3 * U(c, 2) * l * n + 3 * c * l * l * o + U(l, 3) * a,
                                y: U(c, 3) * t + 3 * U(c, 2) * l * i + 3 * c * l * l * s + U(l, 3) * r
                            }
                        }
                          , Re = o(function(e, t, n, i, o, s, a, r) {
                            var l, c = o - 2 * n + e - (a - 2 * o + n), d = 2 * (n - e) - 2 * (o - n), h = e - n, u = (-d + z.sqrt(d * d - 4 * c * h)) / 2 / c, p = (-d - z.sqrt(d * d - 4 * c * h)) / 2 / c, f = [t, r], g = [e, a];
                            return $(u) > "1e12" && (u = .5),
                            $(p) > "1e12" && (p = .5),
                            u > 0 && u < 1 && (l = Oe(e, t, n, i, o, s, a, r, u),
                            g.push(l.x),
                            f.push(l.y)),
                            p > 0 && p < 1 && (l = Oe(e, t, n, i, o, s, a, r, p),
                            g.push(l.x),
                            f.push(l.y)),
                            c = s - 2 * i + t - (r - 2 * s + i),
                            d = 2 * (i - t) - 2 * (s - i),
                            h = t - i,
                            u = (-d + z.sqrt(d * d - 4 * c * h)) / 2 / c,
                            p = (-d - z.sqrt(d * d - 4 * c * h)) / 2 / c,
                            $(u) > "1e12" && (u = .5),
                            $(p) > "1e12" && (p = .5),
                            u > 0 && u < 1 && (l = Oe(e, t, n, i, o, s, a, r, u),
                            g.push(l.x),
                            f.push(l.y)),
                            p > 0 && p < 1 && (l = Oe(e, t, n, i, o, s, a, r, p),
                            g.push(l.x),
                            f.push(l.y)),
                            {
                                min: {
                                    x: V[I](0, g),
                                    y: V[I](0, f)
                                },
                                max: {
                                    x: F[I](0, g),
                                    y: F[I](0, f)
                                }
                            }
                        })
                          , Pe = t._path2curve = o(function(e, t) {
                            var n = !t && Se(e);
                            if (!t && n.curve)
                                return Ae(n.curve);
                            for (var i = Ee(e), o = t && Ee(t), s = {
                                x: 0,
                                y: 0,
                                bx: 0,
                                by: 0,
                                X: 0,
                                Y: 0,
                                qx: null,
                                qy: null
                            }, a = {
                                x: 0,
                                y: 0,
                                bx: 0,
                                by: 0,
                                X: 0,
                                Y: 0,
                                qx: null,
                                qy: null
                            }, r = (function(e, t, n) {
                                var i, o, s = {
                                    T: 1,
                                    Q: 1
                                };
                                if (!e)
                                    return ["C", t.x, t.y, t.x, t.y, t.x, t.y];
                                switch (!(e[0]in s) && (t.qx = t.qy = null),
                                e[0]) {
                                case "M":
                                    t.X = e[1],
                                    t.Y = e[2];
                                    break;
                                case "A":
                                    e = ["C"][L](Te[I](0, [t.x, t.y][L](e.slice(1))));
                                    break;
                                case "S":
                                    "C" == n || "S" == n ? (i = 2 * t.x - t.bx,
                                    o = 2 * t.y - t.by) : (i = t.x,
                                    o = t.y),
                                    e = ["C", i, o][L](e.slice(1));
                                    break;
                                case "T":
                                    "Q" == n || "T" == n ? (t.qx = 2 * t.x - t.qx,
                                    t.qy = 2 * t.y - t.qy) : (t.qx = t.x,
                                    t.qy = t.y),
                                    e = ["C"][L](Le(t.x, t.y, t.qx, t.qy, e[1], e[2]));
                                    break;
                                case "Q":
                                    t.qx = e[1],
                                    t.qy = e[2],
                                    e = ["C"][L](Le(t.x, t.y, e[1], e[2], e[3], e[4]));
                                    break;
                                case "L":
                                    e = ["C"][L](Ie(t.x, t.y, e[1], e[2]));
                                    break;
                                case "H":
                                    e = ["C"][L](Ie(t.x, t.y, e[1], t.y));
                                    break;
                                case "V":
                                    e = ["C"][L](Ie(t.x, t.y, t.x, e[1]));
                                    break;
                                case "Z":
                                    e = ["C"][L](Ie(t.x, t.y, t.X, t.Y))
                                }
                                return e
                            }
                            ), l = function(e, t) {
                                if (e[t].length > 7) {
                                    e[t].shift();
                                    for (var n = e[t]; n.length; )
                                        d[t] = "A",
                                        o && (h[t] = "A"),
                                        e.splice(t++, 0, ["C"][L](n.splice(0, 6)));
                                    e.splice(t, 1),
                                    g = F(i.length, o && o.length || 0)
                                }
                            }, c = function(e, t, n, s, a) {
                                e && t && "M" == e[a][0] && "M" != t[a][0] && (t.splice(a, 0, ["M", s.x, s.y]),
                                n.bx = 0,
                                n.by = 0,
                                n.x = e[a][1],
                                n.y = e[a][2],
                                g = F(i.length, o && o.length || 0))
                            }, d = [], h = [], u = "", p = "", f = 0, g = F(i.length, o && o.length || 0); f < g; f++) {
                                i[f] && (u = i[f][0]),
                                "C" != u && (d[f] = u,
                                f && (p = d[f - 1])),
                                i[f] = r(i[f], s, p),
                                "A" != d[f] && "C" == u && (d[f] = "C"),
                                l(i, f),
                                o && (o[f] && (u = o[f][0]),
                                "C" != u && (h[f] = u,
                                f && (p = h[f - 1])),
                                o[f] = r(o[f], a, p),
                                "A" != h[f] && "C" == u && (h[f] = "C"),
                                l(o, f)),
                                c(i, o, s, a, f),
                                c(o, i, a, s, f);
                                var m = i[f]
                                  , v = o && o[f]
                                  , _ = m.length
                                  , y = o && v.length;
                                s.x = m[_ - 2],
                                s.y = m[_ - 1],
                                s.bx = J(m[_ - 4]) || s.x,
                                s.by = J(m[_ - 3]) || s.y,
                                a.bx = o && (J(v[y - 4]) || a.x),
                                a.by = o && (J(v[y - 3]) || a.y),
                                a.x = o && v[y - 2],
                                a.y = o && v[y - 1]
                            }
                            return o || (n.curve = Ae(i)),
                            o ? [i, o] : i
                        }, null, Ae)
                          , Ne = (t._parseDots = o(function(e) {
                            for (var n = [], i = 0, o = e.length; i < o; i++) {
                                var s = {}
                                  , a = e[i].match(/^([^:]*):?([\d\.]*)/);
                                if (s.color = t.getRGB(a[1]),
                                s.color.error)
                                    return null;
                                s.opacity = s.color.opacity,
                                s.color = s.color.hex,
                                a[2] && (s.offset = a[2] + "%"),
                                n.push(s)
                            }
                            for (i = 1,
                            o = n.length - 1; i < o; i++)
                                if (!n[i].offset) {
                                    for (var r = J(n[i - 1].offset || 0), l = 0, c = i + 1; c < o; c++)
                                        if (n[c].offset) {
                                            l = n[c].offset;
                                            break
                                        }
                                    l || (l = 100,
                                    c = o),
                                    l = J(l);
                                    for (var d = (l - r) / (c - i + 1); i < c; i++)
                                        r += d,
                                        n[i].offset = r + "%"
                                }
                            return n
                        }),
                        t._tear = function(e, t) {
                            e == t.top && (t.top = e.prev),
                            e == t.bottom && (t.bottom = e.next),
                            e.next && (e.next.prev = e.prev),
                            e.prev && (e.prev.next = e.next)
                        }
                        )
                          , De = (t._tofront = function(e, t) {
                            t.top !== e && (Ne(e, t),
                            e.next = null,
                            e.prev = t.top,
                            t.top.next = e,
                            t.top = e)
                        }
                        ,
                        t._toback = function(e, t) {
                            t.bottom !== e && (Ne(e, t),
                            e.next = t.bottom,
                            e.prev = null,
                            t.bottom.prev = e,
                            t.bottom = e)
                        }
                        ,
                        t._insertafter = function(e, t, n) {
                            Ne(e, n),
                            t == n.top && (n.top = e),
                            t.next && (t.next.prev = e),
                            e.next = t.next,
                            e.prev = t,
                            t.next = e
                        }
                        ,
                        t._insertbefore = function(e, t, n) {
                            Ne(e, n),
                            t == n.bottom && (n.bottom = e),
                            t.prev && (t.prev.next = e),
                            e.prev = t.prev,
                            t.prev = e,
                            e.next = t
                        }
                        ,
                        t.toMatrix = function(e, t) {
                            var n = ke(e)
                              , i = {
                                _: {
                                    transform: O
                                },
                                getBBox: function() {
                                    return n
                                }
                            };
                            return je(i, t),
                            i.matrix
                        }
                        )
                          , je = (t.transformPath = function(e, t) {
                            return ge(e, De(e, t))
                        }
                        ,
                        t._extractTransform = function(e, n) {
                            if (null == n)
                                return e._.transform;
                            n = P(n).replace(/\.{3}|\u2026/g, e._.transform || O);
                            var i = t.parseTransformString(n)
                              , o = 0
                              , s = 0
                              , a = 0
                              , r = 1
                              , l = 1
                              , c = e._
                              , d = new f;
                            if (c.transform = i || [],
                            i)
                                for (var h = 0, u = i.length; h < u; h++) {
                                    var p, g, m, v, _, y = i[h], b = y.length, w = P(y[0]).toLowerCase(), C = y[0] != w, x = C ? d.invert() : 0;
                                    "t" == w && 3 == b ? C ? (p = x.x(0, 0),
                                    g = x.y(0, 0),
                                    m = x.x(y[1], y[2]),
                                    v = x.y(y[1], y[2]),
                                    d.translate(m - p, v - g)) : d.translate(y[1], y[2]) : "r" == w ? 2 == b ? (_ = _ || e.getBBox(1),
                                    d.rotate(y[1], _.x + _.width / 2, _.y + _.height / 2),
                                    o += y[1]) : 4 == b && (C ? (m = x.x(y[2], y[3]),
                                    v = x.y(y[2], y[3]),
                                    d.rotate(y[1], m, v)) : d.rotate(y[1], y[2], y[3]),
                                    o += y[1]) : "s" == w ? 2 == b || 3 == b ? (_ = _ || e.getBBox(1),
                                    d.scale(y[1], y[b - 1], _.x + _.width / 2, _.y + _.height / 2),
                                    r *= y[1],
                                    l *= y[b - 1]) : 5 == b && (C ? (m = x.x(y[3], y[4]),
                                    v = x.y(y[3], y[4]),
                                    d.scale(y[1], y[2], m, v)) : d.scale(y[1], y[2], y[3], y[4]),
                                    r *= y[1],
                                    l *= y[2]) : "m" == w && 7 == b && d.add(y[1], y[2], y[3], y[4], y[5], y[6]),
                                    c.dirtyT = 1,
                                    e.matrix = d
                                }
                            e.matrix = d,
                            c.sx = r,
                            c.sy = l,
                            c.deg = o,
                            c.dx = s = d.e,
                            c.dy = a = d.f,
                            1 == r && 1 == l && !o && c.bbox ? (c.bbox.x += +s,
                            c.bbox.y += +a) : c.dirtyT = 1
                        }
                        )
                          , Be = function(e) {
                            var t = e[0];
                            switch (t.toLowerCase()) {
                            case "t":
                                return [t, 0, 0];
                            case "m":
                                return [t, 1, 0, 0, 1, 0, 0];
                            case "r":
                                return 4 == e.length ? [t, 0, e[2], e[3]] : [t, 0];
                            case "s":
                                return 5 == e.length ? [t, 1, 1, e[3], e[4]] : 3 == e.length ? [t, 1, 1] : [t, 1]
                            }
                        }
                          , ze = t._equaliseTransform = function(e, n) {
                            n = P(n).replace(/\.{3}|\u2026/g, e),
                            e = t.parseTransformString(e) || [],
                            n = t.parseTransformString(n) || [];
                            for (var i, o, s, a, r = F(e.length, n.length), l = [], c = [], d = 0; d < r; d++) {
                                if (s = e[d] || Be(n[d]),
                                a = n[d] || Be(s),
                                s[0] != a[0] || "r" == s[0].toLowerCase() && (s[2] != a[2] || s[3] != a[3]) || "s" == s[0].toLowerCase() && (s[3] != a[3] || s[4] != a[4]))
                                    return;
                                for (l[d] = [],
                                c[d] = [],
                                i = 0,
                                o = F(s.length, a.length); i < o; i++)
                                    i in s && (l[d][i] = s[i]),
                                    i in a && (c[d][i] = a[i])
                            }
                            return {
                                from: l,
                                to: c
                            }
                        }
                        ;
                        t._getContainer = function(e, n, i, o) {
                            var s;
                            if (null != (s = null != o || t.is(e, "object") ? e : A.doc.getElementById(e)))
                                return s.tagName ? null == n ? {
                                    container: s,
                                    width: s.style.pixelWidth || s.offsetWidth,
                                    height: s.style.pixelHeight || s.offsetHeight
                                } : {
                                    container: s,
                                    width: n,
                                    height: i
                                } : {
                                    container: 1,
                                    x: e,
                                    y: n,
                                    width: i,
                                    height: o
                                }
                        }
                        ,
                        t.pathToRelative = Me,
                        t._engine = {},
                        t.path2curve = Pe,
                        t.matrix = function(e, t, n, i, o, s) {
                            return new f(e,t,n,i,o,s)
                        }
                        ,
                        function(e) {
                            function n(e) {
                                return e[0] * e[0] + e[1] * e[1]
                            }
                            function i(e) {
                                var t = z.sqrt(n(e));
                                e[0] && (e[0] /= t),
                                e[1] && (e[1] /= t)
                            }
                            e.add = function(e, t, n, i, o, s) {
                                var a, r, l, c, d = [[], [], []], h = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]], u = [[e, n, o], [t, i, s], [0, 0, 1]];
                                for (e && e instanceof f && (u = [[e.a, e.c, e.e], [e.b, e.d, e.f], [0, 0, 1]]),
                                a = 0; a < 3; a++)
                                    for (r = 0; r < 3; r++) {
                                        for (c = 0,
                                        l = 0; l < 3; l++)
                                            c += h[a][l] * u[l][r];
                                        d[a][r] = c
                                    }
                                this.a = d[0][0],
                                this.b = d[1][0],
                                this.c = d[0][1],
                                this.d = d[1][1],
                                this.e = d[0][2],
                                this.f = d[1][2]
                            }
                            ,
                            e.invert = function() {
                                var e = this
                                  , t = e.a * e.d - e.b * e.c;
                                return new f(e.d / t,-e.b / t,-e.c / t,e.a / t,(e.c * e.f - e.d * e.e) / t,(e.b * e.e - e.a * e.f) / t)
                            }
                            ,
                            e.clone = function() {
                                return new f(this.a,this.b,this.c,this.d,this.e,this.f)
                            }
                            ,
                            e.translate = function(e, t) {
                                this.add(1, 0, 0, 1, e, t)
                            }
                            ,
                            e.scale = function(e, t, n, i) {
                                null == t && (t = e),
                                (n || i) && this.add(1, 0, 0, 1, n, i),
                                this.add(e, 0, 0, t, 0, 0),
                                (n || i) && this.add(1, 0, 0, 1, -n, -i)
                            }
                            ,
                            e.rotate = function(e, n, i) {
                                e = t.rad(e),
                                n = n || 0,
                                i = i || 0;
                                var o = +z.cos(e).toFixed(9)
                                  , s = +z.sin(e).toFixed(9);
                                this.add(o, s, -s, o, n, i),
                                this.add(1, 0, 0, 1, -n, -i)
                            }
                            ,
                            e.x = function(e, t) {
                                return e * this.a + t * this.c + this.e
                            }
                            ,
                            e.y = function(e, t) {
                                return e * this.b + t * this.d + this.f
                            }
                            ,
                            e.get = function(e) {
                                return +this[P.fromCharCode(97 + e)].toFixed(4)
                            }
                            ,
                            e.toString = function() {
                                return t.svg ? "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")" : [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join()
                            }
                            ,
                            e.toFilter = function() {
                                return "progid:DXImageTransform.Microsoft.Matrix(M11=" + this.get(0) + ", M12=" + this.get(2) + ", M21=" + this.get(1) + ", M22=" + this.get(3) + ", Dx=" + this.get(4) + ", Dy=" + this.get(5) + ", sizingmethod='auto expand')"
                            }
                            ,
                            e.offset = function() {
                                return [this.e.toFixed(4), this.f.toFixed(4)]
                            }
                            ,
                            e.split = function() {
                                var e = {};
                                e.dx = this.e,
                                e.dy = this.f;
                                var o = [[this.a, this.c], [this.b, this.d]];
                                e.scalex = z.sqrt(n(o[0])),
                                i(o[0]),
                                e.shear = o[0][0] * o[1][0] + o[0][1] * o[1][1],
                                o[1] = [o[1][0] - o[0][0] * e.shear, o[1][1] - o[0][1] * e.shear],
                                e.scaley = z.sqrt(n(o[1])),
                                i(o[1]),
                                e.shear /= e.scaley;
                                var s = -o[0][1]
                                  , a = o[1][1];
                                return a < 0 ? (e.rotate = t.deg(z.acos(a)),
                                s < 0 && (e.rotate = 360 - e.rotate)) : e.rotate = t.deg(z.asin(s)),
                                e.isSimple = !(+e.shear.toFixed(9) || e.scalex.toFixed(9) != e.scaley.toFixed(9) && e.rotate),
                                e.isSuperSimple = !+e.shear.toFixed(9) && e.scalex.toFixed(9) == e.scaley.toFixed(9) && !e.rotate,
                                e.noRotation = !+e.shear.toFixed(9) && !e.rotate,
                                e
                            }
                            ,
                            e.toTransformString = function(e) {
                                var t = e || this[N]();
                                return t.isSimple ? (t.scalex = +t.scalex.toFixed(4),
                                t.scaley = +t.scaley.toFixed(4),
                                t.rotate = +t.rotate.toFixed(4),
                                (t.dx || t.dy ? "t" + [t.dx, t.dy] : O) + (1 != t.scalex || 1 != t.scaley ? "s" + [t.scalex, t.scaley, 0, 0] : O) + (t.rotate ? "r" + [t.rotate, 0, 0] : O)) : "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)]
                            }
                        }(f.prototype);
                        for (var Fe = function() {
                            this.returnValue = !1
                        }, Ve = function() {
                            return this.originalEvent.preventDefault()
                        }, $e = function() {
                            this.cancelBubble = !0
                        }, Ue = function() {
                            return this.originalEvent.stopPropagation()
                        }, He = function(e) {
                            var t = A.doc.documentElement.scrollTop || A.doc.body.scrollTop
                              , n = A.doc.documentElement.scrollLeft || A.doc.body.scrollLeft;
                            return {
                                x: e.clientX + n,
                                y: e.clientY + t
                            }
                        }, qe = function() {
                            return A.doc.addEventListener ? function(e, t, n, i) {
                                var o = function(e) {
                                    var t = He(e);
                                    return n.call(i, e, t.x, t.y)
                                };
                                if (e.addEventListener(t, o, !1),
                                T && j[t]) {
                                    var s = function(t) {
                                        for (var o = He(t), s = t, a = 0, r = t.targetTouches && t.targetTouches.length; a < r; a++)
                                            if (t.targetTouches[a].target == e) {
                                                t = t.targetTouches[a],
                                                t.originalEvent = s,
                                                t.preventDefault = Ve,
                                                t.stopPropagation = Ue;
                                                break
                                            }
                                        return n.call(i, t, o.x, o.y)
                                    };
                                    e.addEventListener(j[t], s, !1)
                                }
                                return function() {
                                    return e.removeEventListener(t, o, !1),
                                    T && j[t] && e.removeEventListener(j[t], s, !1),
                                    !0
                                }
                            }
                            : A.doc.attachEvent ? function(e, t, n, i) {
                                var o = function(e) {
                                    e = e || A.win.event;
                                    var t = A.doc.documentElement.scrollTop || A.doc.body.scrollTop
                                      , o = A.doc.documentElement.scrollLeft || A.doc.body.scrollLeft
                                      , s = e.clientX + o
                                      , a = e.clientY + t;
                                    return e.preventDefault = e.preventDefault || Fe,
                                    e.stopPropagation = e.stopPropagation || $e,
                                    n.call(i, e, s, a)
                                };
                                return e.attachEvent("on" + t, o),
                                function() {
                                    return e.detachEvent("on" + t, o),
                                    !0
                                }
                            }
                            : void 0
                        }(), We = [], Ge = function(t) {
                            for (var n, i = t.clientX, o = t.clientY, s = A.doc.documentElement.scrollTop || A.doc.body.scrollTop, a = A.doc.documentElement.scrollLeft || A.doc.body.scrollLeft, r = We.length; r--; ) {
                                if (n = We[r],
                                T && t.touches) {
                                    for (var l, c = t.touches.length; c--; )
                                        if (l = t.touches[c],
                                        l.identifier == n.el._drag.id) {
                                            i = l.clientX,
                                            o = l.clientY,
                                            (t.originalEvent ? t.originalEvent : t).preventDefault();
                                            break
                                        }
                                } else
                                    t.preventDefault();
                                var d, h = n.el.node, u = h.nextSibling, p = h.parentNode, f = h.style.display;
                                A.win.opera && p.removeChild(h),
                                h.style.display = "none",
                                d = n.el.paper.getElementByPoint(i, o),
                                h.style.display = f,
                                A.win.opera && (u ? p.insertBefore(h, u) : p.appendChild(h)),
                                d && e("raphael.drag.over." + n.el.id, n.el, d),
                                i += a,
                                o += s,
                                e("raphael.drag.move." + n.el.id, n.move_scope || n.el, i - n.el._drag.x, o - n.el._drag.y, i, o, t)
                            }
                        }, Ke = function n(i) {
                            t.unmousemove(Ge).unmouseup(n);
                            for (var o, s = We.length; s--; )
                                o = We[s],
                                o.el._drag = {},
                                e("raphael.drag.end." + o.el.id, o.end_scope || o.start_scope || o.move_scope || o.el, i);
                            We = []
                        }, Ze = t.el = {}, Ye = D.length; Ye--; )
                            !function(e) {
                                t[e] = Ze[e] = function(n, i) {
                                    return t.is(n, "function") && (this.events = this.events || [],
                                    this.events.push({
                                        name: e,
                                        f: n,
                                        unbind: qe(this.shape || this.node || A.doc, e, n, i || this)
                                    })),
                                    this
                                }
                                ,
                                t["un" + e] = Ze["un" + e] = function(n) {
                                    for (var i = this.events || [], o = i.length; o--; )
                                        i[o].name != e || !t.is(n, "undefined") && i[o].f != n || (i[o].unbind(),
                                        i.splice(o, 1),
                                        !i.length && delete this.events);
                                    return this
                                }
                            }(D[Ye]);
                        Ze.data = function(n, i) {
                            var o = ce[this.id] = ce[this.id] || {};
                            if (0 == arguments.length)
                                return o;
                            if (1 == arguments.length) {
                                if (t.is(n, "object")) {
                                    for (var s in n)
                                        n[k](s) && this.data(s, n[s]);
                                    return this
                                }
                                return e("raphael.data.get." + this.id, this, o[n], n),
                                o[n]
                            }
                            return o[n] = i,
                            e("raphael.data.set." + this.id, this, i, n),
                            this
                        }
                        ,
                        Ze.removeData = function(e) {
                            return null == e ? ce[this.id] = {} : ce[this.id] && delete ce[this.id][e],
                            this
                        }
                        ,
                        Ze.getData = function() {
                            return n(ce[this.id] || {})
                        }
                        ,
                        Ze.hover = function(e, t, n, i) {
                            return this.mouseover(e, n).mouseout(t, i || n)
                        }
                        ,
                        Ze.unhover = function(e, t) {
                            return this.unmouseover(e).unmouseout(t)
                        }
                        ;
                        var Qe = [];
                        Ze.drag = function(n, i, o, s, a, r) {
                            function l(l) {
                                (l.originalEvent || l).preventDefault();
                                var c = l.clientX
                                  , d = l.clientY
                                  , h = A.doc.documentElement.scrollTop || A.doc.body.scrollTop
                                  , u = A.doc.documentElement.scrollLeft || A.doc.body.scrollLeft;
                                if (this._drag.id = l.identifier,
                                T && l.touches)
                                    for (var p, f = l.touches.length; f--; )
                                        if (p = l.touches[f],
                                        this._drag.id = p.identifier,
                                        p.identifier == this._drag.id) {
                                            c = p.clientX,
                                            d = p.clientY;
                                            break
                                        }
                                this._drag.x = c + u,
                                this._drag.y = d + h,
                                !We.length && t.mousemove(Ge).mouseup(Ke),
                                We.push({
                                    el: this,
                                    move_scope: s,
                                    start_scope: a,
                                    end_scope: r
                                }),
                                i && e.on("raphael.drag.start." + this.id, i),
                                n && e.on("raphael.drag.move." + this.id, n),
                                o && e.on("raphael.drag.end." + this.id, o),
                                e("raphael.drag.start." + this.id, a || s || this, l.clientX + u, l.clientY + h, l)
                            }
                            return this._drag = {},
                            Qe.push({
                                el: this,
                                start: l
                            }),
                            this.mousedown(l),
                            this
                        }
                        ,
                        Ze.onDragOver = function(t) {
                            t ? e.on("raphael.drag.over." + this.id, t) : e.unbind("raphael.drag.over." + this.id)
                        }
                        ,
                        Ze.undrag = function() {
                            for (var n = Qe.length; n--; )
                                Qe[n].el == this && (this.unmousedown(Qe[n].start),
                                Qe.splice(n, 1),
                                e.unbind("raphael.drag.*." + this.id));
                            !Qe.length && t.unmousemove(Ge).unmouseup(Ke),
                            We = []
                        }
                        ,
                        w.circle = function(e, n, i) {
                            var o = t._engine.circle(this, e || 0, n || 0, i || 0);
                            return this.__set__ && this.__set__.push(o),
                            o
                        }
                        ,
                        w.rect = function(e, n, i, o, s) {
                            var a = t._engine.rect(this, e || 0, n || 0, i || 0, o || 0, s || 0);
                            return this.__set__ && this.__set__.push(a),
                            a
                        }
                        ,
                        w.ellipse = function(e, n, i, o) {
                            var s = t._engine.ellipse(this, e || 0, n || 0, i || 0, o || 0);
                            return this.__set__ && this.__set__.push(s),
                            s
                        }
                        ,
                        w.path = function(e) {
                            e && !t.is(e, "string") && !t.is(e[0], W) && (e += O);
                            var n = t._engine.path(t.format[I](t, arguments), this);
                            return this.__set__ && this.__set__.push(n),
                            n
                        }
                        ,
                        w.image = function(e, n, i, o, s) {
                            var a = t._engine.image(this, e || "about:blank", n || 0, i || 0, o || 0, s || 0);
                            return this.__set__ && this.__set__.push(a),
                            a
                        }
                        ,
                        w.text = function(e, n, i) {
                            var o = t._engine.text(this, e || 0, n || 0, P(i));
                            return this.__set__ && this.__set__.push(o),
                            o
                        }
                        ,
                        w.set = function(e) {
                            !t.is(e, "array") && (e = Array.prototype.splice.call(arguments, 0, arguments.length));
                            var n = new ct(e);
                            return this.__set__ && this.__set__.push(n),
                            n.paper = this,
                            n.type = "set",
                            n
                        }
                        ,
                        w.setStart = function(e) {
                            this.__set__ = e || this.set()
                        }
                        ,
                        w.setFinish = function(e) {
                            var t = this.__set__;
                            return delete this.__set__,
                            t
                        }
                        ,
                        w.getSize = function() {
                            var e = this.canvas.parentNode;
                            return {
                                width: e.offsetWidth,
                                height: e.offsetHeight
                            }
                        }
                        ,
                        w.setSize = function(e, n) {
                            return t._engine.setSize.call(this, e, n)
                        }
                        ,
                        w.setViewBox = function(e, n, i, o, s) {
                            return t._engine.setViewBox.call(this, e, n, i, o, s)
                        }
                        ,
                        w.top = w.bottom = null,
                        w.raphael = t;
                        var Je = function(e) {
                            var t = e.getBoundingClientRect()
                              , n = e.ownerDocument
                              , i = n.body
                              , o = n.documentElement
                              , s = o.clientTop || i.clientTop || 0
                              , a = o.clientLeft || i.clientLeft || 0;
                            return {
                                y: t.top + (A.win.pageYOffset || o.scrollTop || i.scrollTop) - s,
                                x: t.left + (A.win.pageXOffset || o.scrollLeft || i.scrollLeft) - a
                            }
                        };
                        w.getElementByPoint = function(e, t) {
                            var n = this
                              , i = n.canvas
                              , o = A.doc.elementFromPoint(e, t);
                            if (A.win.opera && "svg" == o.tagName) {
                                var s = Je(i)
                                  , a = i.createSVGRect();
                                a.x = e - s.x,
                                a.y = t - s.y,
                                a.width = a.height = 1;
                                var r = i.getIntersectionList(a, null);
                                r.length && (o = r[r.length - 1])
                            }
                            if (!o)
                                return null;
                            for (; o.parentNode && o != i.parentNode && !o.raphael; )
                                o = o.parentNode;
                            return o == n.canvas.parentNode && (o = i),
                            o = o && o.raphael ? n.getById(o.raphaelid) : null
                        }
                        ,
                        w.getElementsByBBox = function(e) {
                            var n = this.set();
                            return this.forEach(function(i) {
                                t.isBBoxIntersect(i.getBBox(), e) && n.push(i)
                            }),
                            n
                        }
                        ,
                        w.getById = function(e) {
                            for (var t = this.bottom; t; ) {
                                if (t.id == e)
                                    return t;
                                t = t.next
                            }
                            return null
                        }
                        ,
                        w.forEach = function(e, t) {
                            for (var n = this.bottom; n; ) {
                                if (!1 === e.call(t, n))
                                    return this;
                                n = n.next
                            }
                            return this
                        }
                        ,
                        w.getElementsByPoint = function(e, t) {
                            var n = this.set();
                            return this.forEach(function(i) {
                                i.isPointInside(e, t) && n.push(i)
                            }),
                            n
                        }
                        ,
                        Ze.isPointInside = function(e, n) {
                            var i = this.realPath = fe[this.type](this);
                            return this.attr("transform") && this.attr("transform").length && (i = t.transformPath(i, this.attr("transform"))),
                            t.isPointInsidePath(i, e, n)
                        }
                        ,
                        Ze.getBBox = function(e) {
                            if (this.removed)
                                return {};
                            var t = this._;
                            return e ? (!t.dirty && t.bboxwt || (this.realPath = fe[this.type](this),
                            t.bboxwt = ke(this.realPath),
                            t.bboxwt.toString = g,
                            t.dirty = 0),
                            t.bboxwt) : ((t.dirty || t.dirtyT || !t.bbox) && (!t.dirty && this.realPath || (t.bboxwt = 0,
                            this.realPath = fe[this.type](this)),
                            t.bbox = ke(ge(this.realPath, this.matrix)),
                            t.bbox.toString = g,
                            t.dirty = t.dirtyT = 0),
                            t.bbox)
                        }
                        ,
                        Ze.clone = function() {
                            if (this.removed)
                                return null;
                            var e = this.paper[this.type]().attr(this.attr());
                            return this.__set__ && this.__set__.push(e),
                            e
                        }
                        ,
                        Ze.glow = function(e) {
                            if ("text" == this.type)
                                return null;
                            e = e || {};
                            var t = {
                                width: (e.width || 10) + (+this.attr("stroke-width") || 1),
                                fill: e.fill || !1,
                                opacity: null == e.opacity ? .5 : e.opacity,
                                offsetx: e.offsetx || 0,
                                offsety: e.offsety || 0,
                                color: e.color || "#000"
                            }
                              , n = t.width / 2
                              , i = this.paper
                              , o = i.set()
                              , s = this.realPath || fe[this.type](this);
                            s = this.matrix ? ge(s, this.matrix) : s;
                            for (var a = 1; a < n + 1; a++)
                                o.push(i.path(s).attr({
                                    stroke: t.color,
                                    fill: t.fill ? t.color : "none",
                                    "stroke-linejoin": "round",
                                    "stroke-linecap": "round",
                                    "stroke-width": +(t.width / n * a).toFixed(3),
                                    opacity: +(t.opacity / n).toFixed(3)
                                }));
                            return o.insertBefore(this).translate(t.offsetx, t.offsety)
                        }
                        ;
                        var Xe = function(e, n, i, o, s, a, r, l, h) {
                            return null == h ? c(e, n, i, o, s, a, r, l) : t.findDotsAtSegment(e, n, i, o, s, a, r, l, d(e, n, i, o, s, a, r, l, h))
                        }
                          , et = function(e, n) {
                            return function(i, o, s) {
                                i = Pe(i);
                                for (var a, r, l, c, d, h = "", u = {}, p = 0, f = 0, g = i.length; f < g; f++) {
                                    if (l = i[f],
                                    "M" == l[0])
                                        a = +l[1],
                                        r = +l[2];
                                    else {
                                        if (c = Xe(a, r, l[1], l[2], l[3], l[4], l[5], l[6]),
                                        p + c > o) {
                                            if (n && !u.start) {
                                                if (d = Xe(a, r, l[1], l[2], l[3], l[4], l[5], l[6], o - p),
                                                h += ["C" + d.start.x, d.start.y, d.m.x, d.m.y, d.x, d.y],
                                                s)
                                                    return h;
                                                u.start = h,
                                                h = ["M" + d.x, d.y + "C" + d.n.x, d.n.y, d.end.x, d.end.y, l[5], l[6]].join(),
                                                p += c,
                                                a = +l[5],
                                                r = +l[6];
                                                continue
                                            }
                                            if (!e && !n)
                                                return d = Xe(a, r, l[1], l[2], l[3], l[4], l[5], l[6], o - p),
                                                {
                                                    x: d.x,
                                                    y: d.y,
                                                    alpha: d.alpha
                                                }
                                        }
                                        p += c,
                                        a = +l[5],
                                        r = +l[6]
                                    }
                                    h += l.shift() + l
                                }
                                return u.end = h,
                                d = e ? p : n ? u : t.findDotsAtSegment(a, r, l[0], l[1], l[2], l[3], l[4], l[5], 1),
                                d.alpha && (d = {
                                    x: d.x,
                                    y: d.y,
                                    alpha: d.alpha
                                }),
                                d
                            }
                        }
                          , tt = et(1)
                          , nt = et()
                          , it = et(0, 1);
                        t.getTotalLength = tt,
                        t.getPointAtLength = nt,
                        t.getSubpath = function(e, t, n) {
                            if (this.getTotalLength(e) - n < 1e-6)
                                return it(e, t).end;
                            var i = it(e, n, 1);
                            return t ? it(i, t).end : i
                        }
                        ,
                        Ze.getTotalLength = function() {
                            var e = this.getPath();
                            if (e)
                                return tt(e)
                        }
                        ,
                        Ze.getPointAtLength = function(e) {
                            var t = this.getPath();
                            if (t)
                                return nt(t, e)
                        }
                        ,
                        Ze.getPath = function() {
                            var e, n = t._getPath[this.type];
                            if ("text" != this.type && "set" != this.type)
                                return n && (e = n(this)),
                                e
                        }
                        ,
                        Ze.getSubpath = function(e, n) {
                            var i = this.getPath();
                            if (i)
                                return t.getSubpath(i, e, n)
                        }
                        ;
                        var ot = t.easing_formulas = {
                            linear: function(e) {
                                return e
                            },
                            "<": function(e) {
                                return U(e, 1.7)
                            },
                            ">": function(e) {
                                return U(e, .48)
                            },
                            "<>": function(e) {
                                var t = .48 - e / 1.04
                                  , n = z.sqrt(.1734 + t * t)
                                  , i = n - t
                                  , o = U($(i), 1 / 3) * (i < 0 ? -1 : 1)
                                  , s = -n - t
                                  , a = U($(s), 1 / 3) * (s < 0 ? -1 : 1)
                                  , r = o + a + .5;
                                return 3 * (1 - r) * r * r + r * r * r
                            },
                            backIn: function(e) {
                                var t = 1.70158;
                                return e * e * ((t + 1) * e - t)
                            },
                            backOut: function(e) {
                                e -= 1;
                                var t = 1.70158;
                                return e * e * ((t + 1) * e + t) + 1
                            },
                            elastic: function(e) {
                                return e == !!e ? e : U(2, -10 * e) * z.sin(2 * H * (e - .075) / .3) + 1
                            },
                            bounce: function(e) {
                                var t, n = 7.5625, i = 2.75;
                                return e < 1 / i ? t = n * e * e : e < 2 / i ? (e -= 1.5 / i,
                                t = n * e * e + .75) : e < 2.5 / i ? (e -= 2.25 / i,
                                t = n * e * e + .9375) : (e -= 2.625 / i,
                                t = n * e * e + .984375),
                                t
                            }
                        };
                        ot.easeIn = ot["ease-in"] = ot["<"],
                        ot.easeOut = ot["ease-out"] = ot[">"],
                        ot.easeInOut = ot["ease-in-out"] = ot["<>"],
                        ot["back-in"] = ot.backIn,
                        ot["back-out"] = ot.backOut;
                        var st = []
                          , at = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e) {
                            setTimeout(e, 16)
                        }
                          , rt = function n() {
                            for (var i = +new Date, o = 0; o < st.length; o++) {
                                var s = st[o];
                                if (!s.el.removed && !s.paused) {
                                    var a, r, l = i - s.start, c = s.ms, d = s.easing, h = s.from, u = s.diff, p = s.to, f = (s.t,
                                    s.el), g = {}, m = {};
                                    if (s.initstatus ? (l = (s.initstatus * s.anim.top - s.prev) / (s.percent - s.prev) * c,
                                    s.status = s.initstatus,
                                    delete s.initstatus,
                                    s.stop && st.splice(o--, 1)) : s.status = (s.prev + (s.percent - s.prev) * (l / c)) / s.anim.top,
                                    !(l < 0))
                                        if (l < c) {
                                            var v = d(l / c);
                                            for (var y in h)
                                                if (h[k](y)) {
                                                    switch (ne[y]) {
                                                    case q:
                                                        a = +h[y] + v * c * u[y];
                                                        break;
                                                    case "colour":
                                                        a = "rgb(" + [lt(Q(h[y].r + v * c * u[y].r)), lt(Q(h[y].g + v * c * u[y].g)), lt(Q(h[y].b + v * c * u[y].b))].join(",") + ")";
                                                        break;
                                                    case "path":
                                                        a = [];
                                                        for (var b = 0, w = h[y].length; b < w; b++) {
                                                            a[b] = [h[y][b][0]];
                                                            for (var C = 1, x = h[y][b].length; C < x; C++)
                                                                a[b][C] = +h[y][b][C] + v * c * u[y][b][C];
                                                            a[b] = a[b].join(R)
                                                        }
                                                        a = a.join(R);
                                                        break;
                                                    case "transform":
                                                        if (u[y].real)
                                                            for (a = [],
                                                            b = 0,
                                                            w = h[y].length; b < w; b++)
                                                                for (a[b] = [h[y][b][0]],
                                                                C = 1,
                                                                x = h[y][b].length; C < x; C++)
                                                                    a[b][C] = h[y][b][C] + v * c * u[y][b][C];
                                                        else {
                                                            var S = function(e) {
                                                                return +h[y][e] + v * c * u[y][e]
                                                            };
                                                            a = [["m", S(0), S(1), S(2), S(3), S(4), S(5)]]
                                                        }
                                                        break;
                                                    case "csv":
                                                        if ("clip-rect" == y)
                                                            for (a = [],
                                                            b = 4; b--; )
                                                                a[b] = +h[y][b] + v * c * u[y][b];
                                                        break;
                                                    default:
                                                        var A = [][L](h[y]);
                                                        for (a = [],
                                                        b = f.paper.customAttributes[y].length; b--; )
                                                            a[b] = +A[b] + v * c * u[y][b]
                                                    }
                                                    g[y] = a
                                                }
                                            f.attr(g),
                                            function(t, n, i) {
                                                setTimeout(function() {
                                                    e("raphael.anim.frame." + t, n, i)
                                                })
                                            }(f.id, f, s.anim)
                                        } else {
                                            if (function(n, i, o) {
                                                setTimeout(function() {
                                                    e("raphael.anim.frame." + i.id, i, o),
                                                    e("raphael.anim.finish." + i.id, i, o),
                                                    t.is(n, "function") && n.call(i)
                                                })
                                            }(s.callback, f, s.anim),
                                            f.attr(p),
                                            st.splice(o--, 1),
                                            s.repeat > 1 && !s.next) {
                                                for (r in p)
                                                    p[k](r) && (m[r] = s.totalOrigin[r]);
                                                s.el.attr(m),
                                                _(s.anim, s.el, s.anim.percents[0], null, s.totalOrigin, s.repeat - 1)
                                            }
                                            s.next && !s.stop && _(s.anim, s.el, s.next, null, s.totalOrigin, s.repeat)
                                        }
                                }
                            }
                            st.length && at(n)
                        }
                          , lt = function(e) {
                            return e > 255 ? 255 : e < 0 ? 0 : e
                        };
                        Ze.animateWith = function(e, n, i, o, s, a) {
                            var r = this;
                            if (r.removed)
                                return a && a.call(r),
                                r;
                            var l = i instanceof v ? i : t.animation(i, o, s, a);
                            _(l, r, l.percents[0], null, r.attr());
                            for (var c = 0, d = st.length; c < d; c++)
                                if (st[c].anim == n && st[c].el == e) {
                                    st[d - 1].start = st[c].start;
                                    break
                                }
                            return r
                        }
                        ,
                        Ze.onAnimation = function(t) {
                            return t ? e.on("raphael.anim.frame." + this.id, t) : e.unbind("raphael.anim.frame." + this.id),
                            this
                        }
                        ,
                        v.prototype.delay = function(e) {
                            var t = new v(this.anim,this.ms);
                            return t.times = this.times,
                            t.del = +e || 0,
                            t
                        }
                        ,
                        v.prototype.repeat = function(e) {
                            var t = new v(this.anim,this.ms);
                            return t.del = this.del,
                            t.times = z.floor(F(e, 0)) || 1,
                            t
                        }
                        ,
                        t.animation = function(e, n, i, o) {
                            if (e instanceof v)
                                return e;
                            !t.is(i, "function") && i || (o = o || i || null,
                            i = null),
                            e = Object(e),
                            n = +n || 0;
                            var s, a, r = {};
                            for (a in e)
                                e[k](a) && J(a) != a && J(a) + "%" != a && (s = !0,
                                r[a] = e[a]);
                            if (s)
                                return i && (r.easing = i),
                                o && (r.callback = o),
                                new v({
                                    100: r
                                },n);
                            if (o) {
                                var l = 0;
                                for (var c in e) {
                                    var d = X(c);
                                    e[k](c) && d > l && (l = d)
                                }
                                l += "%",
                                !e[l].callback && (e[l].callback = o)
                            }
                            return new v(e,n)
                        }
                        ,
                        Ze.animate = function(e, n, i, o) {
                            var s = this;
                            if (s.removed)
                                return o && o.call(s),
                                s;
                            var a = e instanceof v ? e : t.animation(e, n, i, o);
                            return _(a, s, a.percents[0], null, s.attr()),
                            s
                        }
                        ,
                        Ze.setTime = function(e, t) {
                            return e && null != t && this.status(e, V(t, e.ms) / e.ms),
                            this
                        }
                        ,
                        Ze.status = function(e, t) {
                            var n, i, o = [], s = 0;
                            if (null != t)
                                return _(e, this, -1, V(t, 1)),
                                this;
                            for (n = st.length; s < n; s++)
                                if (i = st[s],
                                i.el.id == this.id && (!e || i.anim == e)) {
                                    if (e)
                                        return i.status;
                                    o.push({
                                        anim: i.anim,
                                        status: i.status
                                    })
                                }
                            return e ? 0 : o
                        }
                        ,
                        Ze.pause = function(t) {
                            for (var n = 0; n < st.length; n++)
                                st[n].el.id != this.id || t && st[n].anim != t || !1 !== e("raphael.anim.pause." + this.id, this, st[n].anim) && (st[n].paused = !0);
                            return this
                        }
                        ,
                        Ze.resume = function(t) {
                            for (var n = 0; n < st.length; n++)
                                if (st[n].el.id == this.id && (!t || st[n].anim == t)) {
                                    var i = st[n];
                                    !1 !== e("raphael.anim.resume." + this.id, this, i.anim) && (delete i.paused,
                                    this.status(i.anim, i.status))
                                }
                            return this
                        }
                        ,
                        Ze.stop = function(t) {
                            for (var n = 0; n < st.length; n++)
                                st[n].el.id != this.id || t && st[n].anim != t || !1 !== e("raphael.anim.stop." + this.id, this, st[n].anim) && st.splice(n--, 1);
                            return this
                        }
                        ,
                        e.on("raphael.remove", y),
                        e.on("raphael.clear", y),
                        Ze.toString = function() {
                            return "Raphaël’s object"
                        }
                        ;
                        var ct = function e(t) {
                            if (this.items = [],
                            this.length = 0,
                            this.type = "set",
                            t)
                                for (var n = 0, i = t.length; n < i; n++)
                                    !t[n] || t[n].constructor != Ze.constructor && t[n].constructor != e || (this[this.items.length] = this.items[this.items.length] = t[n],
                                    this.length++)
                        }
                          , dt = ct.prototype;
                        dt.push = function() {
                            for (var e, t, n = 0, i = arguments.length; n < i; n++)
                                !(e = arguments[n]) || e.constructor != Ze.constructor && e.constructor != ct || (t = this.items.length,
                                this[t] = this.items[t] = e,
                                this.length++);
                            return this
                        }
                        ,
                        dt.pop = function() {
                            return this.length && delete this[this.length--],
                            this.items.pop()
                        }
                        ,
                        dt.forEach = function(e, t) {
                            for (var n = 0, i = this.items.length; n < i; n++)
                                if (!1 === e.call(t, this.items[n], n))
                                    return this;
                            return this
                        }
                        ;
                        for (var ht in Ze)
                            Ze[k](ht) && (dt[ht] = function(e) {
                                return function() {
                                    var t = arguments;
                                    return this.forEach(function(n) {
                                        n[e][I](n, t)
                                    })
                                }
                            }(ht));
                        return dt.attr = function(e, n) {
                            if (e && t.is(e, W) && t.is(e[0], "object"))
                                for (var i = 0, o = e.length; i < o; i++)
                                    this.items[i].attr(e[i]);
                            else
                                for (var s = 0, a = this.items.length; s < a; s++)
                                    this.items[s].attr(e, n);
                            return this
                        }
                        ,
                        dt.clear = function() {
                            for (; this.length; )
                                this.pop()
                        }
                        ,
                        dt.splice = function(e, t, n) {
                            e = e < 0 ? F(this.length + e, 0) : e,
                            t = F(0, V(this.length - e, t));
                            var i, o = [], s = [], a = [];
                            for (i = 2; i < arguments.length; i++)
                                a.push(arguments[i]);
                            for (i = 0; i < t; i++)
                                s.push(this[e + i]);
                            for (; i < this.length - e; i++)
                                o.push(this[e + i]);
                            var r = a.length;
                            for (i = 0; i < r + o.length; i++)
                                this.items[e + i] = this[e + i] = i < r ? a[i] : o[i - r];
                            for (i = this.items.length = this.length -= t - r; this[i]; )
                                delete this[i++];
                            return new ct(s)
                        }
                        ,
                        dt.exclude = function(e) {
                            for (var t = 0, n = this.length; t < n; t++)
                                if (this[t] == e)
                                    return this.splice(t, 1),
                                    !0
                        }
                        ,
                        dt.animate = function(e, n, i, o) {
                            (t.is(i, "function") || !i) && (o = i || null);
                            var s, a, r = this.items.length, l = r, c = this;
                            if (!r)
                                return this;
                            o && (a = function() {
                                !--r && o.call(c)
                            }
                            ),
                            i = t.is(i, "string") ? i : a;
                            var d = t.animation(e, n, i, a);
                            for (s = this.items[--l].animate(d); l--; )
                                this.items[l] && !this.items[l].removed && this.items[l].animateWith(s, d, d),
                                this.items[l] && !this.items[l].removed || r--;
                            return this
                        }
                        ,
                        dt.insertAfter = function(e) {
                            for (var t = this.items.length; t--; )
                                this.items[t].insertAfter(e);
                            return this
                        }
                        ,
                        dt.getBBox = function() {
                            for (var e = [], t = [], n = [], i = [], o = this.items.length; o--; )
                                if (!this.items[o].removed) {
                                    var s = this.items[o].getBBox();
                                    e.push(s.x),
                                    t.push(s.y),
                                    n.push(s.x + s.width),
                                    i.push(s.y + s.height)
                                }
                            return e = V[I](0, e),
                            t = V[I](0, t),
                            n = F[I](0, n),
                            i = F[I](0, i),
                            {
                                x: e,
                                y: t,
                                x2: n,
                                y2: i,
                                width: n - e,
                                height: i - t
                            }
                        }
                        ,
                        dt.clone = function(e) {
                            e = this.paper.set();
                            for (var t = 0, n = this.items.length; t < n; t++)
                                e.push(this.items[t].clone());
                            return e
                        }
                        ,
                        dt.toString = function() {
                            return "Raphaël‘s set"
                        }
                        ,
                        dt.glow = function(e) {
                            var t = this.paper.set();
                            return this.forEach(function(n, i) {
                                var o = n.glow(e);
                                null != o && o.forEach(function(e, n) {
                                    t.push(e)
                                })
                            }),
                            t
                        }
                        ,
                        dt.isPointInside = function(e, t) {
                            var n = !1;
                            return this.forEach(function(i) {
                                if (i.isPointInside(e, t))
                                    return n = !0,
                                    !1
                            }),
                            n
                        }
                        ,
                        t.registerFont = function(e) {
                            if (!e.face)
                                return e;
                            this.fonts = this.fonts || {};
                            var t = {
                                w: e.w,
                                face: {},
                                glyphs: {}
                            }
                              , n = e.face["font-family"];
                            for (var i in e.face)
                                e.face[k](i) && (t.face[i] = e.face[i]);
                            if (this.fonts[n] ? this.fonts[n].push(t) : this.fonts[n] = [t],
                            !e.svg) {
                                t.face["units-per-em"] = X(e.face["units-per-em"], 10);
                                for (var o in e.glyphs)
                                    if (e.glyphs[k](o)) {
                                        var s = e.glyphs[o];
                                        if (t.glyphs[o] = {
                                            w: s.w,
                                            k: {},
                                            d: s.d && "M" + s.d.replace(/[mlcxtrv]/g, function(e) {
                                                return {
                                                    l: "L",
                                                    c: "C",
                                                    x: "z",
                                                    t: "m",
                                                    r: "l",
                                                    v: "c"
                                                }[e] || "M"
                                            }) + "z"
                                        },
                                        s.k)
                                            for (var a in s.k)
                                                s[k](a) && (t.glyphs[o].k[a] = s.k[a])
                                    }
                            }
                            return e
                        }
                        ,
                        w.getFont = function(e, n, i, o) {
                            if (o = o || "normal",
                            i = i || "normal",
                            n = +n || {
                                normal: 400,
                                bold: 700,
                                lighter: 300,
                                bolder: 800
                            }[n] || 400,
                            t.fonts) {
                                var s = t.fonts[e];
                                if (!s) {
                                    var a = new RegExp("(^|\\s)" + e.replace(/[^\w\d\s+!~.:_-]/g, O) + "(\\s|$)","i");
                                    for (var r in t.fonts)
                                        if (t.fonts[k](r) && a.test(r)) {
                                            s = t.fonts[r];
                                            break
                                        }
                                }
                                var l;
                                if (s)
                                    for (var c = 0, d = s.length; c < d && (l = s[c],
                                    l.face["font-weight"] != n || l.face["font-style"] != i && l.face["font-style"] || l.face["font-stretch"] != o); c++)
                                        ;
                                return l
                            }
                        }
                        ,
                        w.print = function(e, n, i, o, s, a, r, l) {
                            a = a || "middle",
                            r = F(V(r || 0, 1), -1),
                            l = F(V(l || 1, 3), 1);
                            var c, d = P(i)[N](O), h = 0, u = 0, p = O;
                            if (t.is(o, "string") && (o = this.getFont(o)),
                            o) {
                                c = (s || 16) / o.face["units-per-em"];
                                for (var f = o.face.bbox[N](C), g = +f[0], m = f[3] - f[1], v = 0, _ = +f[1] + ("baseline" == a ? m + +o.face.descent : m / 2), y = 0, b = d.length; y < b; y++) {
                                    if ("\n" == d[y])
                                        h = 0,
                                        x = 0,
                                        u = 0,
                                        v += m * l;
                                    else {
                                        var w = u && o.glyphs[d[y - 1]] || {}
                                          , x = o.glyphs[d[y]];
                                        h += u ? (w.w || o.w) + (w.k && w.k[d[y]] || 0) + o.w * r : 0,
                                        u = 1
                                    }
                                    x && x.d && (p += t.transformPath(x.d, ["t", h * c, v * c, "s", c, c, g, _, "t", (e - g) / c, (n - _) / c]))
                                }
                            }
                            return this.path(p).attr({
                                fill: "#000",
                                stroke: "none"
                            })
                        }
                        ,
                        w.add = function(e) {
                            if (t.is(e, "array"))
                                for (var n, i = this.set(), o = 0, s = e.length; o < s; o++)
                                    n = e[o] || {},
                                    x[k](n.type) && i.push(this[n.type]().attr(n));
                            return i
                        }
                        ,
                        t.format = function(e, n) {
                            var i = t.is(n, W) ? [0][L](n) : arguments;
                            return e && t.is(e, "string") && i.length - 1 && (e = e.replace(S, function(e, t) {
                                return null == i[++t] ? O : i[t]
                            })),
                            e || O
                        }
                        ,
                        t.fullfill = function() {
                            var e = /\{([^\}]+)\}/g
                              , t = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g
                              , n = function(e, n, i) {
                                var o = i;
                                return n.replace(t, function(e, t, n, i, s) {
                                    t = t || i,
                                    o && (t in o && (o = o[t]),
                                    "function" == typeof o && s && (o = o()))
                                }),
                                o = (null == o || o == i ? e : o) + ""
                            };
                            return function(t, i) {
                                return String(t).replace(e, function(e, t) {
                                    return n(e, t, i)
                                })
                            }
                        }(),
                        t.ninja = function() {
                            if (M.was)
                                A.win.Raphael = M.is;
                            else {
                                window.Raphael = void 0;
                                try {
                                    delete window.Raphael
                                } catch (e) {}
                            }
                            return t
                        }
                        ,
                        t.st = dt,
                        e.on("raphael.DOMload", function() {
                            b = !0
                        }),
                        function(e, n, i) {
                            function o() {
                                /in/.test(e.readyState) ? setTimeout(o, 9) : t.eve("raphael.DOMload")
                            }
                            null == e.readyState && e.addEventListener && (e.addEventListener("DOMContentLoaded", i = function() {
                                e.removeEventListener("DOMContentLoaded", i, !1),
                                e.readyState = "complete"
                            }
                            , !1),
                            e.readyState = "loading"),
                            o()
                        }(document),
                        t
                    }
                    .apply(t, i)) && (e.exports = o)
                }
                , function(e, t, n) {
                    var i, o;
                    !function(n) {
                        var s, a, r = "hasOwnProperty", l = /[\.\/]/, c = /\s*,\s*/, d = function(e, t) {
                            return e - t
                        }, h = {
                            n: {}
                        }, u = function() {
                            for (var e = 0, t = this.length; e < t; e++)
                                if (void 0 !== this[e])
                                    return this[e]
                        }, p = function() {
                            for (var e = this.length; --e; )
                                if (void 0 !== this[e])
                                    return this[e]
                        }, f = Object.prototype.toString, g = String, m = Array.isArray || function(e) {
                            return e instanceof Array || "[object Array]" == f.call(e)
                        }
                        , v = function e(t, n) {
                            var i, o = a, r = Array.prototype.slice.call(arguments, 2), l = e.listeners(t), c = 0, h = [], f = {}, g = [], m = s;
                            g.firstDefined = u,
                            g.lastDefined = p,
                            s = t,
                            a = 0;
                            for (var v = 0, _ = l.length; v < _; v++)
                                "zIndex"in l[v] && (h.push(l[v].zIndex),
                                l[v].zIndex < 0 && (f[l[v].zIndex] = l[v]));
                            for (h.sort(d); h[c] < 0; )
                                if (i = f[h[c++]],
                                g.push(i.apply(n, r)),
                                a)
                                    return a = o,
                                    g;
                            for (v = 0; v < _; v++)
                                if ("zIndex"in (i = l[v]))
                                    if (i.zIndex == h[c]) {
                                        if (g.push(i.apply(n, r)),
                                        a)
                                            break;
                                        do {
                                            if (c++,
                                            i = f[h[c]],
                                            i && g.push(i.apply(n, r)),
                                            a)
                                                break
                                        } while (i)
                                    } else
                                        f[i.zIndex] = i;
                                else if (g.push(i.apply(n, r)),
                                a)
                                    break;
                            return a = o,
                            s = m,
                            g
                        };
                        v._events = h,
                        v.listeners = function(e) {
                            var t, n, i, o, s, a, r, c, d = m(e) ? e : e.split(l), u = h, p = [u], f = [];
                            for (o = 0,
                            s = d.length; o < s; o++) {
                                for (c = [],
                                a = 0,
                                r = p.length; a < r; a++)
                                    for (u = p[a].n,
                                    n = [u[d[o]], u["*"]],
                                    i = 2; i--; )
                                        (t = n[i]) && (c.push(t),
                                        f = f.concat(t.f || []));
                                p = c
                            }
                            return f
                        }
                        ,
                        v.separator = function(e) {
                            e ? (e = g(e).replace(/(?=[\.\^\]\[\-])/g, "\\"),
                            e = "[" + e + "]",
                            l = new RegExp(e)) : l = /[\.\/]/
                        }
                        ,
                        v.on = function(e, t) {
                            if ("function" != typeof t)
                                return function() {}
                                ;
                            for (var n = m(e) ? m(e[0]) ? e : [e] : g(e).split(c), i = 0, o = n.length; i < o; i++)
                                !function(e) {
                                    for (var n, i = m(e) ? e : g(e).split(l), o = h, s = 0, a = i.length; s < a; s++)
                                        o = o.n,
                                        o = o.hasOwnProperty(i[s]) && o[i[s]] || (o[i[s]] = {
                                            n: {}
                                        });
                                    for (o.f = o.f || [],
                                    s = 0,
                                    a = o.f.length; s < a; s++)
                                        if (o.f[s] == t) {
                                            n = !0;
                                            break
                                        }
                                    !n && o.f.push(t)
                                }(n[i]);
                            return function(e) {
                                +e == +e && (t.zIndex = +e)
                            }
                        }
                        ,
                        v.f = function(e) {
                            var t = [].slice.call(arguments, 1);
                            return function() {
                                v.apply(null, [e, null].concat(t).concat([].slice.call(arguments, 0)))
                            }
                        }
                        ,
                        v.stop = function() {
                            a = 1
                        }
                        ,
                        v.nt = function(e) {
                            var t = m(s) ? s.join(".") : s;
                            return e ? new RegExp("(?:\\.|\\/|^)" + e + "(?:\\.|\\/|$)").test(t) : t
                        }
                        ,
                        v.nts = function() {
                            return m(s) ? s : s.split(l)
                        }
                        ,
                        v.off = v.unbind = function(e, t) {
                            if (!e)
                                return void (v._events = h = {
                                    n: {}
                                });
                            var n = m(e) ? m(e[0]) ? e : [e] : g(e).split(c);
                            if (n.length > 1)
                                for (var i = 0, o = n.length; i < o; i++)
                                    v.off(n[i], t);
                            else {
                                n = m(e) ? e : g(e).split(l);
                                var s, a, d, i, o, u, p, f = [h];
                                for (i = 0,
                                o = n.length; i < o; i++)
                                    for (u = 0; u < f.length; u += d.length - 2) {
                                        if (d = [u, 1],
                                        s = f[u].n,
                                        "*" != n[i])
                                            s[n[i]] && d.push(s[n[i]]);
                                        else
                                            for (a in s)
                                                s[r](a) && d.push(s[a]);
                                        f.splice.apply(f, d)
                                    }
                                for (i = 0,
                                o = f.length; i < o; i++)
                                    for (s = f[i]; s.n; ) {
                                        if (t) {
                                            if (s.f) {
                                                for (u = 0,
                                                p = s.f.length; u < p; u++)
                                                    if (s.f[u] == t) {
                                                        s.f.splice(u, 1);
                                                        break
                                                    }
                                                !s.f.length && delete s.f
                                            }
                                            for (a in s.n)
                                                if (s.n[r](a) && s.n[a].f) {
                                                    var _ = s.n[a].f;
                                                    for (u = 0,
                                                    p = _.length; u < p; u++)
                                                        if (_[u] == t) {
                                                            _.splice(u, 1);
                                                            break
                                                        }
                                                    !_.length && delete s.n[a].f
                                                }
                                        } else {
                                            delete s.f;
                                            for (a in s.n)
                                                s.n[r](a) && s.n[a].f && delete s.n[a].f
                                        }
                                        s = s.n
                                    }
                            }
                        }
                        ,
                        v.once = function(e, t) {
                            return v.on(e, function n() {
                                return v.off(e, n),
                                t.apply(this, arguments)
                            })
                        }
                        ,
                        v.version = "0.5.0",
                        v.toString = function() {
                            return "You are running Eve 0.5.0"
                        }
                        ,
                        void 0 !== e && e.exports ? e.exports = v : (i = [],
                        void 0 !== (o = function() {
                            return v
                        }
                        .apply(t, i)) && (e.exports = o))
                    }()
                }
                , function(e, t, n) {
                    var i, o;
                    i = [n(1)],
                    void 0 !== (o = function(e) {
                        if (!e || e.svg) {
                            var t = "hasOwnProperty"
                              , n = String
                              , i = parseFloat
                              , o = parseInt
                              , s = Math
                              , a = s.max
                              , r = s.abs
                              , l = s.pow
                              , c = /[, ]+/
                              , d = e.eve
                              , h = ""
                              , u = " "
                              , p = "http://www.w3.org/1999/xlink"
                              , f = {
                                block: "M5,0 0,2.5 5,5z",
                                classic: "M5,0 0,2.5 5,5 3.5,3 3.5,2z",
                                diamond: "M2.5,0 5,2.5 2.5,5 0,2.5z",
                                open: "M6,1 1,3.5 6,6",
                                oval: "M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"
                            }
                              , g = {};
                            e.toString = function() {
                                return "Your browser supports SVG.\nYou are running Raphaël " + this.version
                            }
                            ;
                            var m = function i(o, s) {
                                if (s) {
                                    "string" == typeof o && (o = i(o));
                                    for (var a in s)
                                        s[t](a) && ("xlink:" == a.substring(0, 6) ? o.setAttributeNS(p, a.substring(6), n(s[a])) : o.setAttribute(a, n(s[a])))
                                } else
                                    o = e._g.doc.createElementNS("http://www.w3.org/2000/svg", o),
                                    o.style && (o.style.webkitTapHighlightColor = "rgba(0,0,0,0)");
                                return o
                            }
                              , v = function(t, o) {
                                var c = "linear"
                                  , d = t.id + o
                                  , u = .5
                                  , p = .5
                                  , f = t.node
                                  , g = t.paper
                                  , v = f.style
                                  , _ = e._g.doc.getElementById(d);
                                if (!_) {
                                    if (o = n(o).replace(e._radial_gradient, function(e, t, n) {
                                        if (c = "radial",
                                        t && n) {
                                            u = i(t),
                                            p = i(n);
                                            var o = 2 * (p > .5) - 1;
                                            l(u - .5, 2) + l(p - .5, 2) > .25 && (p = s.sqrt(.25 - l(u - .5, 2)) * o + .5) && .5 != p && (p = p.toFixed(5) - 1e-5 * o)
                                        }
                                        return h
                                    }),
                                    o = o.split(/\s*\-\s*/),
                                    "linear" == c) {
                                        var b = o.shift();
                                        if (b = -i(b),
                                        isNaN(b))
                                            return null;
                                        var w = [0, 0, s.cos(e.rad(b)), s.sin(e.rad(b))]
                                          , C = 1 / (a(r(w[2]), r(w[3])) || 1);
                                        w[2] *= C,
                                        w[3] *= C,
                                        w[2] < 0 && (w[0] = -w[2],
                                        w[2] = 0),
                                        w[3] < 0 && (w[1] = -w[3],
                                        w[3] = 0)
                                    }
                                    var x = e._parseDots(o);
                                    if (!x)
                                        return null;
                                    if (d = d.replace(/[\(\)\s,\xb0#]/g, "_"),
                                    t.gradient && d != t.gradient.id && (g.defs.removeChild(t.gradient),
                                    delete t.gradient),
                                    !t.gradient) {
                                        _ = m(c + "Gradient", {
                                            id: d
                                        }),
                                        t.gradient = _,
                                        m(_, "radial" == c ? {
                                            fx: u,
                                            fy: p
                                        } : {
                                            x1: w[0],
                                            y1: w[1],
                                            x2: w[2],
                                            y2: w[3],
                                            gradientTransform: t.matrix.invert()
                                        }),
                                        g.defs.appendChild(_);
                                        for (var S = 0, k = x.length; S < k; S++)
                                            _.appendChild(m("stop", {
                                                offset: x[S].offset ? x[S].offset : S ? "100%" : "0%",
                                                "stop-color": x[S].color || "#fff",
                                                "stop-opacity": isFinite(x[S].opacity) ? x[S].opacity : 1
                                            }))
                                    }
                                }
                                return m(f, {
                                    fill: y(d),
                                    opacity: 1,
                                    "fill-opacity": 1
                                }),
                                v.fill = h,
                                v.opacity = 1,
                                v.fillOpacity = 1,
                                1
                            }
                              , _ = function() {
                                var e = document.documentMode;
                                return e && (9 === e || 10 === e)
                            }
                              , y = function(e) {
                                if (_())
                                    return "url('#" + e + "')";
                                var t = document.location;
                                return "url('" + t.protocol + "//" + t.host + t.pathname + t.search + "#" + e + "')"
                            }
                              , b = function(e) {
                                var t = e.getBBox(1);
                                m(e.pattern, {
                                    patternTransform: e.matrix.invert() + " translate(" + t.x + "," + t.y + ")"
                                })
                            }
                              , w = function(i, o, s) {
                                if ("path" == i.type) {
                                    for (var a, r, l, c, d, u = n(o).toLowerCase().split("-"), p = i.paper, v = s ? "end" : "start", _ = i.node, y = i.attrs, b = y["stroke-width"], w = u.length, C = "classic", x = 3, S = 3, k = 5; w--; )
                                        switch (u[w]) {
                                        case "block":
                                        case "classic":
                                        case "oval":
                                        case "diamond":
                                        case "open":
                                        case "none":
                                            C = u[w];
                                            break;
                                        case "wide":
                                            S = 5;
                                            break;
                                        case "narrow":
                                            S = 2;
                                            break;
                                        case "long":
                                            x = 5;
                                            break;
                                        case "short":
                                            x = 2
                                        }
                                    if ("open" == C ? (x += 2,
                                    S += 2,
                                    k += 2,
                                    l = 1,
                                    c = s ? 4 : 1,
                                    d = {
                                        fill: "none",
                                        stroke: y.stroke
                                    }) : (c = l = x / 2,
                                    d = {
                                        fill: y.stroke,
                                        stroke: "none"
                                    }),
                                    i._.arrows ? s ? (i._.arrows.endPath && g[i._.arrows.endPath]--,
                                    i._.arrows.endMarker && g[i._.arrows.endMarker]--) : (i._.arrows.startPath && g[i._.arrows.startPath]--,
                                    i._.arrows.startMarker && g[i._.arrows.startMarker]--) : i._.arrows = {},
                                    "none" != C) {
                                        var A = "raphael-marker-" + C
                                          , M = "raphael-marker-" + v + C + x + S + "-obj" + i.id;
                                        e._g.doc.getElementById(A) ? g[A]++ : (p.defs.appendChild(m(m("path"), {
                                            "stroke-linecap": "round",
                                            d: f[C],
                                            id: A
                                        })),
                                        g[A] = 1);
                                        var E, I = e._g.doc.getElementById(M);
                                        I ? (g[M]++,
                                        E = I.getElementsByTagName("use")[0]) : (I = m(m("marker"), {
                                            id: M,
                                            markerHeight: S,
                                            markerWidth: x,
                                            orient: "auto",
                                            refX: c,
                                            refY: S / 2
                                        }),
                                        E = m(m("use"), {
                                            "xlink:href": "#" + A,
                                            transform: (s ? "rotate(180 " + x / 2 + " " + S / 2 + ") " : h) + "scale(" + x / k + "," + S / k + ")",
                                            "stroke-width": (1 / ((x / k + S / k) / 2)).toFixed(4)
                                        }),
                                        I.appendChild(E),
                                        p.defs.appendChild(I),
                                        g[M] = 1),
                                        m(E, d);
                                        var L = l * ("diamond" != C && "oval" != C);
                                        s ? (a = i._.arrows.startdx * b || 0,
                                        r = e.getTotalLength(y.path) - L * b) : (a = L * b,
                                        r = e.getTotalLength(y.path) - (i._.arrows.enddx * b || 0)),
                                        d = {},
                                        d["marker-" + v] = "url(#" + M + ")",
                                        (r || a) && (d.d = e.getSubpath(y.path, a, r)),
                                        m(_, d),
                                        i._.arrows[v + "Path"] = A,
                                        i._.arrows[v + "Marker"] = M,
                                        i._.arrows[v + "dx"] = L,
                                        i._.arrows[v + "Type"] = C,
                                        i._.arrows[v + "String"] = o
                                    } else
                                        s ? (a = i._.arrows.startdx * b || 0,
                                        r = e.getTotalLength(y.path) - a) : (a = 0,
                                        r = e.getTotalLength(y.path) - (i._.arrows.enddx * b || 0)),
                                        i._.arrows[v + "Path"] && m(_, {
                                            d: e.getSubpath(y.path, a, r)
                                        }),
                                        delete i._.arrows[v + "Path"],
                                        delete i._.arrows[v + "Marker"],
                                        delete i._.arrows[v + "dx"],
                                        delete i._.arrows[v + "Type"],
                                        delete i._.arrows[v + "String"];
                                    for (d in g)
                                        if (g[t](d) && !g[d]) {
                                            var T = e._g.doc.getElementById(d);
                                            T && T.parentNode.removeChild(T)
                                        }
                                }
                            }
                              , C = {
                                "-": [3, 1],
                                ",": [1.1, 1.1],
                                ".": [1, 1],
                                "-.": [3, 1, 1, 1],
                                "-..": [3, 1, 1, 1, 1, 1],
                                ". ": [1, 3],
                                "- ": [4, 3],
                                "--": [8, 3],
                                "- .": [4, 3, 1, 3],
                                "--.": [8, 3, 1, 3],
                                "--..": [8, 3, 1, 3, 1, 3]
                            }
                              , x = function(e, t, i) {
                                if (t = C[n(t).toLowerCase()]) {
                                    for (var o = e.attrs["stroke-width"] || "1", s = {
                                        round: o,
                                        square: o,
                                        butt: 0
                                    }[e.attrs["stroke-linecap"] || i["stroke-linecap"]] || 0, a = [], r = t.length; r--; )
                                        a[r] = t[r] * o + (r % 2 ? 1 : -1) * s;
                                    m(e.node, {
                                        "stroke-dasharray": a.join(",")
                                    })
                                } else
                                    m(e.node, {
                                        "stroke-dasharray": "none"
                                    })
                            }
                              , S = function(i, s) {
                                var l = i.node
                                  , d = i.attrs
                                  , u = l.style.visibility;
                                l.style.visibility = "hidden";
                                for (var f in s)
                                    if (s[t](f)) {
                                        if (!e._availableAttrs[t](f))
                                            continue;
                                        var g = s[f];
                                        switch (d[f] = g,
                                        f) {
                                        case "blur":
                                            i.blur(g);
                                            break;
                                        case "title":
                                            var _ = l.getElementsByTagName("title");
                                            if (_.length && (_ = _[0]))
                                                _.firstChild.nodeValue = g;
                                            else {
                                                _ = m("title");
                                                var y = e._g.doc.createTextNode(g);
                                                _.appendChild(y),
                                                l.appendChild(_)
                                            }
                                            break;
                                        case "href":
                                        case "target":
                                            var C = l.parentNode;
                                            if ("a" != C.tagName.toLowerCase()) {
                                                var S = m("a");
                                                C.insertBefore(S, l),
                                                S.appendChild(l),
                                                C = S
                                            }
                                            "target" == f ? C.setAttributeNS(p, "show", "blank" == g ? "new" : g) : C.setAttributeNS(p, f, g);
                                            break;
                                        case "cursor":
                                            l.style.cursor = g;
                                            break;
                                        case "transform":
                                            i.transform(g);
                                            break;
                                        case "arrow-start":
                                            w(i, g);
                                            break;
                                        case "arrow-end":
                                            w(i, g, 1);
                                            break;
                                        case "clip-rect":
                                            var A = n(g).split(c);
                                            if (4 == A.length) {
                                                i.clip && i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);
                                                var M = m("clipPath")
                                                  , E = m("rect");
                                                M.id = e.createUUID(),
                                                m(E, {
                                                    x: A[0],
                                                    y: A[1],
                                                    width: A[2],
                                                    height: A[3]
                                                }),
                                                M.appendChild(E),
                                                i.paper.defs.appendChild(M),
                                                m(l, {
                                                    "clip-path": "url(#" + M.id + ")"
                                                }),
                                                i.clip = E
                                            }
                                            if (!g) {
                                                var I = l.getAttribute("clip-path");
                                                if (I) {
                                                    var L = e._g.doc.getElementById(I.replace(/(^url\(#|\)$)/g, h));
                                                    L && L.parentNode.removeChild(L),
                                                    m(l, {
                                                        "clip-path": h
                                                    }),
                                                    delete i.clip
                                                }
                                            }
                                            break;
                                        case "path":
                                            "path" == i.type && (m(l, {
                                                d: g ? d.path = e._pathToAbsolute(g) : "M0,0"
                                            }),
                                            i._.dirty = 1,
                                            i._.arrows && ("startString"in i._.arrows && w(i, i._.arrows.startString),
                                            "endString"in i._.arrows && w(i, i._.arrows.endString, 1)));
                                            break;
                                        case "width":
                                            if (l.setAttribute(f, g),
                                            i._.dirty = 1,
                                            !d.fx)
                                                break;
                                            f = "x",
                                            g = d.x;
                                        case "x":
                                            d.fx && (g = -d.x - (d.width || 0));
                                        case "rx":
                                            if ("rx" == f && "rect" == i.type)
                                                break;
                                        case "cx":
                                            l.setAttribute(f, g),
                                            i.pattern && b(i),
                                            i._.dirty = 1;
                                            break;
                                        case "height":
                                            if (l.setAttribute(f, g),
                                            i._.dirty = 1,
                                            !d.fy)
                                                break;
                                            f = "y",
                                            g = d.y;
                                        case "y":
                                            d.fy && (g = -d.y - (d.height || 0));
                                        case "ry":
                                            if ("ry" == f && "rect" == i.type)
                                                break;
                                        case "cy":
                                            l.setAttribute(f, g),
                                            i.pattern && b(i),
                                            i._.dirty = 1;
                                            break;
                                        case "r":
                                            "rect" == i.type ? m(l, {
                                                rx: g,
                                                ry: g
                                            }) : l.setAttribute(f, g),
                                            i._.dirty = 1;
                                            break;
                                        case "src":
                                            "image" == i.type && l.setAttributeNS(p, "href", g);
                                            break;
                                        case "stroke-width":
                                            1 == i._.sx && 1 == i._.sy || (g /= a(r(i._.sx), r(i._.sy)) || 1),
                                            l.setAttribute(f, g),
                                            d["stroke-dasharray"] && x(i, d["stroke-dasharray"], s),
                                            i._.arrows && ("startString"in i._.arrows && w(i, i._.arrows.startString),
                                            "endString"in i._.arrows && w(i, i._.arrows.endString, 1));
                                            break;
                                        case "stroke-dasharray":
                                            x(i, g, s);
                                            break;
                                        case "fill":
                                            var T = n(g).match(e._ISURL);
                                            if (T) {
                                                M = m("pattern");
                                                var O = m("image");
                                                M.id = e.createUUID(),
                                                m(M, {
                                                    x: 0,
                                                    y: 0,
                                                    patternUnits: "userSpaceOnUse",
                                                    height: 1,
                                                    width: 1
                                                }),
                                                m(O, {
                                                    x: 0,
                                                    y: 0,
                                                    "xlink:href": T[1]
                                                }),
                                                M.appendChild(O),
                                                function(t) {
                                                    e._preload(T[1], function() {
                                                        var e = this.offsetWidth
                                                          , n = this.offsetHeight;
                                                        m(t, {
                                                            width: e,
                                                            height: n
                                                        }),
                                                        m(O, {
                                                            width: e,
                                                            height: n
                                                        })
                                                    })
                                                }(M),
                                                i.paper.defs.appendChild(M),
                                                m(l, {
                                                    fill: "url(#" + M.id + ")"
                                                }),
                                                i.pattern = M,
                                                i.pattern && b(i);
                                                break
                                            }
                                            var R = e.getRGB(g);
                                            if (R.error) {
                                                if (("circle" == i.type || "ellipse" == i.type || "r" != n(g).charAt()) && v(i, g)) {
                                                    if ("opacity"in d || "fill-opacity"in d) {
                                                        var P = e._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g, h));
                                                        if (P) {
                                                            var N = P.getElementsByTagName("stop");
                                                            m(N[N.length - 1], {
                                                                "stop-opacity": ("opacity"in d ? d.opacity : 1) * ("fill-opacity"in d ? d["fill-opacity"] : 1)
                                                            })
                                                        }
                                                    }
                                                    d.gradient = g,
                                                    d.fill = "none";
                                                    break
                                                }
                                            } else
                                                delete s.gradient,
                                                delete d.gradient,
                                                !e.is(d.opacity, "undefined") && e.is(s.opacity, "undefined") && m(l, {
                                                    opacity: d.opacity
                                                }),
                                                !e.is(d["fill-opacity"], "undefined") && e.is(s["fill-opacity"], "undefined") && m(l, {
                                                    "fill-opacity": d["fill-opacity"]
                                                });
                                            R[t]("opacity") && m(l, {
                                                "fill-opacity": R.opacity > 1 ? R.opacity / 100 : R.opacity
                                            });
                                        case "stroke":
                                            R = e.getRGB(g),
                                            l.setAttribute(f, R.hex),
                                            "stroke" == f && R[t]("opacity") && m(l, {
                                                "stroke-opacity": R.opacity > 1 ? R.opacity / 100 : R.opacity
                                            }),
                                            "stroke" == f && i._.arrows && ("startString"in i._.arrows && w(i, i._.arrows.startString),
                                            "endString"in i._.arrows && w(i, i._.arrows.endString, 1));
                                            break;
                                        case "gradient":
                                            ("circle" == i.type || "ellipse" == i.type || "r" != n(g).charAt()) && v(i, g);
                                            break;
                                        case "opacity":
                                            d.gradient && !d[t]("stroke-opacity") && m(l, {
                                                "stroke-opacity": g > 1 ? g / 100 : g
                                            });
                                        case "fill-opacity":
                                            if (d.gradient) {
                                                P = e._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g, h)),
                                                P && (N = P.getElementsByTagName("stop"),
                                                m(N[N.length - 1], {
                                                    "stop-opacity": g
                                                }));
                                                break
                                            }
                                        default:
                                            "font-size" == f && (g = o(g, 10) + "px");
                                            var D = f.replace(/(\-.)/g, function(e) {
                                                return e.substring(1).toUpperCase()
                                            });
                                            l.style[D] = g,
                                            i._.dirty = 1,
                                            l.setAttribute(f, g)
                                        }
                                    }
                                k(i, s),
                                l.style.visibility = u
                            }
                              , k = function(i, s) {
                                if ("text" == i.type && (s[t]("text") || s[t]("font") || s[t]("font-size") || s[t]("x") || s[t]("y"))) {
                                    var a = i.attrs
                                      , r = i.node
                                      , l = r.firstChild ? o(e._g.doc.defaultView.getComputedStyle(r.firstChild, h).getPropertyValue("font-size"), 10) : 10;
                                    if (s[t]("text")) {
                                        for (a.text = s.text; r.firstChild; )
                                            r.removeChild(r.firstChild);
                                        for (var c, d = n(s.text).split("\n"), u = [], p = 0, f = d.length; p < f; p++)
                                            c = m("tspan"),
                                            p && m(c, {
                                                dy: 1.2 * l,
                                                x: a.x
                                            }),
                                            c.appendChild(e._g.doc.createTextNode(d[p])),
                                            r.appendChild(c),
                                            u[p] = c
                                    } else
                                        for (u = r.getElementsByTagName("tspan"),
                                        p = 0,
                                        f = u.length; p < f; p++)
                                            p ? m(u[p], {
                                                dy: 1.2 * l,
                                                x: a.x
                                            }) : m(u[0], {
                                                dy: 0
                                            });
                                    m(r, {
                                        x: a.x,
                                        y: a.y
                                    }),
                                    i._.dirty = 1;
                                    var g = i._getBBox()
                                      , v = a.y - (g.y + g.height / 2);
                                    v && e.is(v, "finite") && m(u[0], {
                                        dy: v
                                    })
                                }
                            }
                              , A = function(e) {
                                return e.parentNode && "a" === e.parentNode.tagName.toLowerCase() ? e.parentNode : e
                            }
                              , M = function(t, n) {
                                this[0] = this.node = t,
                                t.raphael = !0,
                                this.id = function() {
                                    return ("0000" + (Math.random() * Math.pow(36, 5) << 0).toString(36)).slice(-5)
                                }(),
                                t.raphaelid = this.id,
                                this.matrix = e.matrix(),
                                this.realPath = null,
                                this.paper = n,
                                this.attrs = this.attrs || {},
                                this._ = {
                                    transform: [],
                                    sx: 1,
                                    sy: 1,
                                    deg: 0,
                                    dx: 0,
                                    dy: 0,
                                    dirty: 1
                                },
                                !n.bottom && (n.bottom = this),
                                this.prev = n.top,
                                n.top && (n.top.next = this),
                                n.top = this,
                                this.next = null
                            }
                              , E = e.el;
                            M.prototype = E,
                            E.constructor = M,
                            e._engine.path = function(e, t) {
                                var n = m("path");
                                t.canvas && t.canvas.appendChild(n);
                                var i = new M(n,t);
                                return i.type = "path",
                                S(i, {
                                    fill: "none",
                                    stroke: "#000",
                                    path: e
                                }),
                                i
                            }
                            ,
                            E.rotate = function(e, t, o) {
                                if (this.removed)
                                    return this;
                                if (e = n(e).split(c),
                                e.length - 1 && (t = i(e[1]),
                                o = i(e[2])),
                                e = i(e[0]),
                                null == o && (t = o),
                                null == t || null == o) {
                                    var s = this.getBBox(1);
                                    t = s.x + s.width / 2,
                                    o = s.y + s.height / 2
                                }
                                return this.transform(this._.transform.concat([["r", e, t, o]])),
                                this
                            }
                            ,
                            E.scale = function(e, t, o, s) {
                                if (this.removed)
                                    return this;
                                if (e = n(e).split(c),
                                e.length - 1 && (t = i(e[1]),
                                o = i(e[2]),
                                s = i(e[3])),
                                e = i(e[0]),
                                null == t && (t = e),
                                null == s && (o = s),
                                null == o || null == s)
                                    var a = this.getBBox(1);
                                return o = null == o ? a.x + a.width / 2 : o,
                                s = null == s ? a.y + a.height / 2 : s,
                                this.transform(this._.transform.concat([["s", e, t, o, s]])),
                                this
                            }
                            ,
                            E.translate = function(e, t) {
                                return this.removed ? this : (e = n(e).split(c),
                                e.length - 1 && (t = i(e[1])),
                                e = i(e[0]) || 0,
                                t = +t || 0,
                                this.transform(this._.transform.concat([["t", e, t]])),
                                this)
                            }
                            ,
                            E.transform = function(n) {
                                var i = this._;
                                if (null == n)
                                    return i.transform;
                                if (e._extractTransform(this, n),
                                this.clip && m(this.clip, {
                                    transform: this.matrix.invert()
                                }),
                                this.pattern && b(this),
                                this.node && m(this.node, {
                                    transform: this.matrix
                                }),
                                1 != i.sx || 1 != i.sy) {
                                    var o = this.attrs[t]("stroke-width") ? this.attrs["stroke-width"] : 1;
                                    this.attr({
                                        "stroke-width": o
                                    })
                                }
                                return this
                            }
                            ,
                            E.hide = function() {
                                return this.removed || (this.node.style.display = "none"),
                                this
                            }
                            ,
                            E.show = function() {
                                return this.removed || (this.node.style.display = ""),
                                this
                            }
                            ,
                            E.remove = function() {
                                var t = A(this.node);
                                if (!this.removed && t.parentNode) {
                                    var n = this.paper;
                                    n.__set__ && n.__set__.exclude(this),
                                    d.unbind("raphael.*.*." + this.id),
                                    this.gradient && n.defs.removeChild(this.gradient),
                                    e._tear(this, n),
                                    t.parentNode.removeChild(t),
                                    this.removeData();
                                    for (var i in this)
                                        this[i] = "function" == typeof this[i] ? e._removedFactory(i) : null;
                                    this.removed = !0
                                }
                            }
                            ,
                            E._getBBox = function() {
                                if ("none" == this.node.style.display) {
                                    this.show();
                                    var e = !0
                                }
                                var t, n = !1;
                                this.paper.canvas.parentElement ? t = this.paper.canvas.parentElement.style : this.paper.canvas.parentNode && (t = this.paper.canvas.parentNode.style),
                                t && "none" == t.display && (n = !0,
                                t.display = "");
                                var i = {};
                                try {
                                    i = this.node.getBBox()
                                } catch (e) {
                                    i = {
                                        x: this.node.clientLeft,
                                        y: this.node.clientTop,
                                        width: this.node.clientWidth,
                                        height: this.node.clientHeight
                                    }
                                } finally {
                                    i = i || {},
                                    n && (t.display = "none")
                                }
                                return e && this.hide(),
                                i
                            }
                            ,
                            E.attr = function(n, i) {
                                if (this.removed)
                                    return this;
                                if (null == n) {
                                    var o = {};
                                    for (var s in this.attrs)
                                        this.attrs[t](s) && (o[s] = this.attrs[s]);
                                    return o.gradient && "none" == o.fill && (o.fill = o.gradient) && delete o.gradient,
                                    o.transform = this._.transform,
                                    o
                                }
                                if (null == i && e.is(n, "string")) {
                                    if ("fill" == n && "none" == this.attrs.fill && this.attrs.gradient)
                                        return this.attrs.gradient;
                                    if ("transform" == n)
                                        return this._.transform;
                                    for (var a = n.split(c), r = {}, l = 0, h = a.length; l < h; l++)
                                        n = a[l],
                                        n in this.attrs ? r[n] = this.attrs[n] : e.is(this.paper.customAttributes[n], "function") ? r[n] = this.paper.customAttributes[n].def : r[n] = e._availableAttrs[n];
                                    return h - 1 ? r : r[a[0]]
                                }
                                if (null == i && e.is(n, "array")) {
                                    for (r = {},
                                    l = 0,
                                    h = n.length; l < h; l++)
                                        r[n[l]] = this.attr(n[l]);
                                    return r
                                }
                                if (null != i) {
                                    var u = {};
                                    u[n] = i
                                } else
                                    null != n && e.is(n, "object") && (u = n);
                                for (var p in u)
                                    d("raphael.attr." + p + "." + this.id, this, u[p]);
                                for (p in this.paper.customAttributes)
                                    if (this.paper.customAttributes[t](p) && u[t](p) && e.is(this.paper.customAttributes[p], "function")) {
                                        var f = this.paper.customAttributes[p].apply(this, [].concat(u[p]));
                                        this.attrs[p] = u[p];
                                        for (var g in f)
                                            f[t](g) && (u[g] = f[g])
                                    }
                                return S(this, u),
                                this
                            }
                            ,
                            E.toFront = function() {
                                if (this.removed)
                                    return this;
                                var t = A(this.node);
                                t.parentNode.appendChild(t);
                                var n = this.paper;
                                return n.top != this && e._tofront(this, n),
                                this
                            }
                            ,
                            E.toBack = function() {
                                if (this.removed)
                                    return this;
                                var t = A(this.node)
                                  , n = t.parentNode;
                                n.insertBefore(t, n.firstChild),
                                e._toback(this, this.paper);
                                this.paper;
                                return this
                            }
                            ,
                            E.insertAfter = function(t) {
                                if (this.removed || !t)
                                    return this;
                                var n = A(this.node)
                                  , i = A(t.node || t[t.length - 1].node);
                                return i.nextSibling ? i.parentNode.insertBefore(n, i.nextSibling) : i.parentNode.appendChild(n),
                                e._insertafter(this, t, this.paper),
                                this
                            }
                            ,
                            E.insertBefore = function(t) {
                                if (this.removed || !t)
                                    return this;
                                var n = A(this.node)
                                  , i = A(t.node || t[0].node);
                                return i.parentNode.insertBefore(n, i),
                                e._insertbefore(this, t, this.paper),
                                this
                            }
                            ,
                            E.blur = function(t) {
                                var n = this;
                                if (0 != +t) {
                                    var i = m("filter")
                                      , o = m("feGaussianBlur");
                                    n.attrs.blur = t,
                                    i.id = e.createUUID(),
                                    m(o, {
                                        stdDeviation: +t || 1.5
                                    }),
                                    i.appendChild(o),
                                    n.paper.defs.appendChild(i),
                                    n._blur = i,
                                    m(n.node, {
                                        filter: "url(#" + i.id + ")"
                                    })
                                } else
                                    n._blur && (n._blur.parentNode.removeChild(n._blur),
                                    delete n._blur,
                                    delete n.attrs.blur),
                                    n.node.removeAttribute("filter");
                                return n
                            }
                            ,
                            e._engine.circle = function(e, t, n, i) {
                                var o = m("circle");
                                e.canvas && e.canvas.appendChild(o);
                                var s = new M(o,e);
                                return s.attrs = {
                                    cx: t,
                                    cy: n,
                                    r: i,
                                    fill: "none",
                                    stroke: "#000"
                                },
                                s.type = "circle",
                                m(o, s.attrs),
                                s
                            }
                            ,
                            e._engine.rect = function(e, t, n, i, o, s) {
                                var a = m("rect");
                                e.canvas && e.canvas.appendChild(a);
                                var r = new M(a,e);
                                return r.attrs = {
                                    x: t,
                                    y: n,
                                    width: i,
                                    height: o,
                                    rx: s || 0,
                                    ry: s || 0,
                                    fill: "none",
                                    stroke: "#000"
                                },
                                r.type = "rect",
                                m(a, r.attrs),
                                r
                            }
                            ,
                            e._engine.ellipse = function(e, t, n, i, o) {
                                var s = m("ellipse");
                                e.canvas && e.canvas.appendChild(s);
                                var a = new M(s,e);
                                return a.attrs = {
                                    cx: t,
                                    cy: n,
                                    rx: i,
                                    ry: o,
                                    fill: "none",
                                    stroke: "#000"
                                },
                                a.type = "ellipse",
                                m(s, a.attrs),
                                a
                            }
                            ,
                            e._engine.image = function(e, t, n, i, o, s) {
                                var a = m("image");
                                m(a, {
                                    x: n,
                                    y: i,
                                    width: o,
                                    height: s,
                                    preserveAspectRatio: "none"
                                }),
                                a.setAttributeNS(p, "href", t),
                                e.canvas && e.canvas.appendChild(a);
                                var r = new M(a,e);
                                return r.attrs = {
                                    x: n,
                                    y: i,
                                    width: o,
                                    height: s,
                                    src: t
                                },
                                r.type = "image",
                                r
                            }
                            ,
                            e._engine.text = function(t, n, i, o) {
                                var s = m("text");
                                t.canvas && t.canvas.appendChild(s);
                                var a = new M(s,t);
                                return a.attrs = {
                                    x: n,
                                    y: i,
                                    "text-anchor": "middle",
                                    text: o,
                                    "font-family": e._availableAttrs["font-family"],
                                    "font-size": e._availableAttrs["font-size"],
                                    stroke: "none",
                                    fill: "#000"
                                },
                                a.type = "text",
                                S(a, a.attrs),
                                a
                            }
                            ,
                            e._engine.setSize = function(e, t) {
                                return this.width = e || this.width,
                                this.height = t || this.height,
                                this.canvas.setAttribute("width", this.width),
                                this.canvas.setAttribute("height", this.height),
                                this._viewBox && this.setViewBox.apply(this, this._viewBox),
                                this
                            }
                            ,
                            e._engine.create = function() {
                                var t = e._getContainer.apply(0, arguments)
                                  , n = t && t.container
                                  , i = t.x
                                  , o = t.y
                                  , s = t.width
                                  , a = t.height;
                                if (!n)
                                    throw new Error("SVG container not found.");
                                var r, l = m("svg"), c = "overflow:hidden;";
                                return i = i || 0,
                                o = o || 0,
                                s = s || 512,
                                a = a || 342,
                                m(l, {
                                    height: a,
                                    version: 1.1,
                                    width: s,
                                    xmlns: "http://www.w3.org/2000/svg",
                                    "xmlns:xlink": "http://www.w3.org/1999/xlink"
                                }),
                                1 == n ? (l.style.cssText = c + "position:absolute;left:" + i + "px;top:" + o + "px",
                                e._g.doc.body.appendChild(l),
                                r = 1) : (l.style.cssText = c + "position:relative",
                                n.firstChild ? n.insertBefore(l, n.firstChild) : n.appendChild(l)),
                                n = new e._Paper,
                                n.width = s,
                                n.height = a,
                                n.canvas = l,
                                n.clear(),
                                n._left = n._top = 0,
                                r && (n.renderfix = function() {}
                                ),
                                n.renderfix(),
                                n
                            }
                            ,
                            e._engine.setViewBox = function(e, t, n, i, o) {
                                d("raphael.setViewBox", this, this._viewBox, [e, t, n, i, o]);
                                var s, r, l = this.getSize(), c = a(n / l.width, i / l.height), h = this.top, p = o ? "xMidYMid meet" : "xMinYMin";
                                for (null == e ? (this._vbSize && (c = 1),
                                delete this._vbSize,
                                s = "0 0 " + this.width + u + this.height) : (this._vbSize = c,
                                s = e + u + t + u + n + u + i),
                                m(this.canvas, {
                                    viewBox: s,
                                    preserveAspectRatio: p
                                }); c && h; )
                                    r = "stroke-width"in h.attrs ? h.attrs["stroke-width"] : 1,
                                    h.attr({
                                        "stroke-width": r
                                    }),
                                    h._.dirty = 1,
                                    h._.dirtyT = 1,
                                    h = h.prev;
                                return this._viewBox = [e, t, n, i, !!o],
                                this
                            }
                            ,
                            e.prototype.renderfix = function() {
                                var e, t = this.canvas, n = t.style;
                                try {
                                    e = t.getScreenCTM() || t.createSVGMatrix()
                                } catch (n) {
                                    e = t.createSVGMatrix()
                                }
                                var i = -e.e % 1
                                  , o = -e.f % 1;
                                (i || o) && (i && (this._left = (this._left + i) % 1,
                                n.left = this._left + "px"),
                                o && (this._top = (this._top + o) % 1,
                                n.top = this._top + "px"))
                            }
                            ,
                            e.prototype.clear = function() {
                                e.eve("raphael.clear", this);
                                for (var t = this.canvas; t.firstChild; )
                                    t.removeChild(t.firstChild);
                                this.bottom = this.top = null,
                                (this.desc = m("desc")).appendChild(e._g.doc.createTextNode("Created with Raphaël " + e.version)),
                                t.appendChild(this.desc),
                                t.appendChild(this.defs = m("defs"))
                            }
                            ,
                            e.prototype.remove = function() {
                                d("raphael.remove", this),
                                this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);
                                for (var t in this)
                                    this[t] = "function" == typeof this[t] ? e._removedFactory(t) : null
                            }
                            ;
                            var I = e.st;
                            for (var L in E)
                                E[t](L) && !I[t](L) && (I[L] = function(e) {
                                    return function() {
                                        var t = arguments;
                                        return this.forEach(function(n) {
                                            n[e].apply(n, t)
                                        })
                                    }
                                }(L))
                        }
                    }
                    .apply(t, i)) && (e.exports = o)
                }
                , function(e, t, n) {
                    var i, o;
                    i = [n(1)],
                    void 0 !== (o = function(e) {
                        if (!e || e.vml) {
                            var t = "hasOwnProperty"
                              , n = String
                              , i = parseFloat
                              , o = Math
                              , s = o.round
                              , a = o.max
                              , r = o.min
                              , l = o.abs
                              , c = /[, ]+/
                              , d = e.eve
                              , h = " "
                              , u = ""
                              , p = {
                                M: "m",
                                L: "l",
                                C: "c",
                                Z: "x",
                                m: "t",
                                l: "r",
                                c: "v",
                                z: "x"
                            }
                              , f = /([clmz]),?([^clmz]*)/gi
                              , g = / progid:\S+Blur\([^\)]+\)/g
                              , m = /-?[^,\s-]+/g
                              , v = "position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)"
                              , _ = 21600
                              , y = {
                                path: 1,
                                rect: 1,
                                image: 1
                            }
                              , b = {
                                circle: 1,
                                ellipse: 1
                            }
                              , w = function(t) {
                                var i = /[ahqstv]/gi
                                  , o = e._pathToAbsolute;
                                if (n(t).match(i) && (o = e._path2curve),
                                i = /[clmz]/g,
                                o == e._pathToAbsolute && !n(t).match(i)) {
                                    var a = n(t).replace(f, function(e, t, n) {
                                        var i = []
                                          , o = "m" == t.toLowerCase()
                                          , a = p[t];
                                        return n.replace(m, function(e) {
                                            o && 2 == i.length && (a += i + p["m" == t ? "l" : "L"],
                                            i = []),
                                            i.push(s(e * _))
                                        }),
                                        a + i
                                    });
                                    return a
                                }
                                var r, l, c = o(t);
                                a = [];
                                for (var d = 0, g = c.length; d < g; d++) {
                                    r = c[d],
                                    l = c[d][0].toLowerCase(),
                                    "z" == l && (l = "x");
                                    for (var v = 1, y = r.length; v < y; v++)
                                        l += s(r[v] * _) + (v != y - 1 ? "," : u);
                                    a.push(l)
                                }
                                return a.join(h)
                            }
                              , C = function(t, n, i) {
                                var o = e.matrix();
                                return o.rotate(-t, .5, .5),
                                {
                                    dx: o.x(n, i),
                                    dy: o.y(n, i)
                                }
                            }
                              , x = function(e, t, n, i, o, s) {
                                var a = e._
                                  , r = e.matrix
                                  , c = a.fillpos
                                  , d = e.node
                                  , u = d.style
                                  , p = 1
                                  , f = ""
                                  , g = _ / t
                                  , m = _ / n;
                                if (u.visibility = "hidden",
                                t && n) {
                                    if (d.coordsize = l(g) + h + l(m),
                                    u.rotation = s * (t * n < 0 ? -1 : 1),
                                    s) {
                                        var v = C(s, i, o);
                                        i = v.dx,
                                        o = v.dy
                                    }
                                    if (t < 0 && (f += "x"),
                                    n < 0 && (f += " y") && (p = -1),
                                    u.flip = f,
                                    d.coordorigin = i * -g + h + o * -m,
                                    c || a.fillsize) {
                                        var y = d.getElementsByTagName("fill");
                                        y = y && y[0],
                                        d.removeChild(y),
                                        c && (v = C(s, r.x(c[0], c[1]), r.y(c[0], c[1])),
                                        y.position = v.dx * p + h + v.dy * p),
                                        a.fillsize && (y.size = a.fillsize[0] * l(t) + h + a.fillsize[1] * l(n)),
                                        d.appendChild(y)
                                    }
                                    u.visibility = "visible"
                                }
                            };
                            e.toString = function() {
                                return "Your browser doesn’t support SVG. Falling down to VML.\nYou are running Raphaël " + this.version
                            }
                            ;
                            var S = function(e, t, i) {
                                for (var o = n(t).toLowerCase().split("-"), s = i ? "end" : "start", a = o.length, r = "classic", l = "medium", c = "medium"; a--; )
                                    switch (o[a]) {
                                    case "block":
                                    case "classic":
                                    case "oval":
                                    case "diamond":
                                    case "open":
                                    case "none":
                                        r = o[a];
                                        break;
                                    case "wide":
                                    case "narrow":
                                        c = o[a];
                                        break;
                                    case "long":
                                    case "short":
                                        l = o[a]
                                    }
                                var d = e.node.getElementsByTagName("stroke")[0];
                                d[s + "arrow"] = r,
                                d[s + "arrowlength"] = l,
                                d[s + "arrowwidth"] = c
                            }
                              , k = function(o, l) {
                                o.attrs = o.attrs || {};
                                var d = o.node
                                  , p = o.attrs
                                  , f = d.style
                                  , g = y[o.type] && (l.x != p.x || l.y != p.y || l.width != p.width || l.height != p.height || l.cx != p.cx || l.cy != p.cy || l.rx != p.rx || l.ry != p.ry || l.r != p.r)
                                  , m = b[o.type] && (p.cx != l.cx || p.cy != l.cy || p.r != l.r || p.rx != l.rx || p.ry != l.ry)
                                  , v = o;
                                for (var C in l)
                                    l[t](C) && (p[C] = l[C]);
                                if (g && (p.path = e._getPath[o.type](o),
                                o._.dirty = 1),
                                l.href && (d.href = l.href),
                                l.title && (d.title = l.title),
                                l.target && (d.target = l.target),
                                l.cursor && (f.cursor = l.cursor),
                                "blur"in l && o.blur(l.blur),
                                (l.path && "path" == o.type || g) && (d.path = w(~n(p.path).toLowerCase().indexOf("r") ? e._pathToAbsolute(p.path) : p.path),
                                o._.dirty = 1,
                                "image" == o.type && (o._.fillpos = [p.x, p.y],
                                o._.fillsize = [p.width, p.height],
                                x(o, 1, 1, 0, 0, 0))),
                                "transform"in l && o.transform(l.transform),
                                m) {
                                    var k = +p.cx
                                      , M = +p.cy
                                      , E = +p.rx || +p.r || 0
                                      , L = +p.ry || +p.r || 0;
                                    d.path = e.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x", s((k - E) * _), s((M - L) * _), s((k + E) * _), s((M + L) * _), s(k * _)),
                                    o._.dirty = 1
                                }
                                if ("clip-rect"in l) {
                                    var T = n(l["clip-rect"]).split(c);
                                    if (4 == T.length) {
                                        T[2] = +T[2] + +T[0],
                                        T[3] = +T[3] + +T[1];
                                        var O = d.clipRect || e._g.doc.createElement("div")
                                          , R = O.style;
                                        R.clip = e.format("rect({1}px {2}px {3}px {0}px)", T),
                                        d.clipRect || (R.position = "absolute",
                                        R.top = 0,
                                        R.left = 0,
                                        R.width = o.paper.width + "px",
                                        R.height = o.paper.height + "px",
                                        d.parentNode.insertBefore(O, d),
                                        O.appendChild(d),
                                        d.clipRect = O)
                                    }
                                    l["clip-rect"] || d.clipRect && (d.clipRect.style.clip = "auto")
                                }
                                if (o.textpath) {
                                    var P = o.textpath.style;
                                    l.font && (P.font = l.font),
                                    l["font-family"] && (P.fontFamily = '"' + l["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g, u) + '"'),
                                    l["font-size"] && (P.fontSize = l["font-size"]),
                                    l["font-weight"] && (P.fontWeight = l["font-weight"]),
                                    l["font-style"] && (P.fontStyle = l["font-style"])
                                }
                                if ("arrow-start"in l && S(v, l["arrow-start"]),
                                "arrow-end"in l && S(v, l["arrow-end"], 1),
                                null != l.opacity || null != l.fill || null != l.src || null != l.stroke || null != l["stroke-width"] || null != l["stroke-opacity"] || null != l["fill-opacity"] || null != l["stroke-dasharray"] || null != l["stroke-miterlimit"] || null != l["stroke-linejoin"] || null != l["stroke-linecap"]) {
                                    var N = d.getElementsByTagName("fill");
                                    if (N = N && N[0],
                                    !N && (N = I("fill")),
                                    "image" == o.type && l.src && (N.src = l.src),
                                    l.fill && (N.on = !0),
                                    null != N.on && "none" != l.fill && null !== l.fill || (N.on = !1),
                                    N.on && l.fill) {
                                        var D = n(l.fill).match(e._ISURL);
                                        if (D) {
                                            N.parentNode == d && d.removeChild(N),
                                            N.rotate = !0,
                                            N.src = D[1],
                                            N.type = "tile";
                                            var j = o.getBBox(1);
                                            N.position = j.x + h + j.y,
                                            o._.fillpos = [j.x, j.y],
                                            e._preload(D[1], function() {
                                                o._.fillsize = [this.offsetWidth, this.offsetHeight]
                                            })
                                        } else
                                            N.color = e.getRGB(l.fill).hex,
                                            N.src = u,
                                            N.type = "solid",
                                            e.getRGB(l.fill).error && (v.type in {
                                                circle: 1,
                                                ellipse: 1
                                            } || "r" != n(l.fill).charAt()) && A(v, l.fill, N) && (p.fill = "none",
                                            p.gradient = l.fill,
                                            N.rotate = !1)
                                    }
                                    if ("fill-opacity"in l || "opacity"in l) {
                                        var B = ((+p["fill-opacity"] + 1 || 2) - 1) * ((+p.opacity + 1 || 2) - 1) * ((+e.getRGB(l.fill).o + 1 || 2) - 1);
                                        B = r(a(B, 0), 1),
                                        N.opacity = B,
                                        N.src && (N.color = "none")
                                    }
                                    d.appendChild(N);
                                    var z = d.getElementsByTagName("stroke") && d.getElementsByTagName("stroke")[0]
                                      , F = !1;
                                    !z && (F = z = I("stroke")),
                                    (l.stroke && "none" != l.stroke || l["stroke-width"] || null != l["stroke-opacity"] || l["stroke-dasharray"] || l["stroke-miterlimit"] || l["stroke-linejoin"] || l["stroke-linecap"]) && (z.on = !0),
                                    ("none" == l.stroke || null === l.stroke || null == z.on || 0 == l.stroke || 0 == l["stroke-width"]) && (z.on = !1);
                                    var V = e.getRGB(l.stroke);
                                    z.on && l.stroke && (z.color = V.hex),
                                    B = ((+p["stroke-opacity"] + 1 || 2) - 1) * ((+p.opacity + 1 || 2) - 1) * ((+V.o + 1 || 2) - 1);
                                    var $ = .75 * (i(l["stroke-width"]) || 1);
                                    if (B = r(a(B, 0), 1),
                                    null == l["stroke-width"] && ($ = p["stroke-width"]),
                                    l["stroke-width"] && (z.weight = $),
                                    $ && $ < 1 && (B *= $) && (z.weight = 1),
                                    z.opacity = B,
                                    l["stroke-linejoin"] && (z.joinstyle = l["stroke-linejoin"] || "miter"),
                                    z.miterlimit = l["stroke-miterlimit"] || 8,
                                    l["stroke-linecap"] && (z.endcap = "butt" == l["stroke-linecap"] ? "flat" : "square" == l["stroke-linecap"] ? "square" : "round"),
                                    "stroke-dasharray"in l) {
                                        var U = {
                                            ",": "minidot",
                                            "-": "shortdash",
                                            ".": "shortdot",
                                            "-.": "shortdashdot",
                                            "-..": "shortdashdotdot",
                                            ". ": "dot",
                                            "- ": "dash",
                                            "--": "longdash",
                                            "- .": "dashdot",
                                            "--.": "longdashdot",
                                            "--..": "longdashdotdot"
                                        };
                                        z.dashstyle = U[t](l["stroke-dasharray"]) ? U[l["stroke-dasharray"]] : u
                                    }
                                    F && d.appendChild(z)
                                }
                                if ("text" == v.type) {
                                    v.paper.canvas.style.display = u;
                                    var H = v.paper.span
                                      , q = p.font && p.font.match(/\d+(?:\.\d*)?(?=px)/);
                                    f = H.style,
                                    p.font && (f.font = p.font),
                                    p["font-family"] && (f.fontFamily = p["font-family"]),
                                    p["font-weight"] && (f.fontWeight = p["font-weight"]),
                                    p["font-style"] && (f.fontStyle = p["font-style"]),
                                    q = i(p["font-size"] || q && q[0]) || 10,
                                    f.fontSize = 100 * q + "px",
                                    v.textpath.string && (H.innerHTML = n(v.textpath.string).replace(/</g, "&#60;").replace(/&/g, "&#38;").replace(/\n/g, "<br>"));
                                    var W = H.getBoundingClientRect();
                                    v.W = p.w = (W.right - W.left) / 100,
                                    v.H = p.h = (W.bottom - W.top) / 100,
                                    v.X = p.x,
                                    v.Y = p.y + v.H / 2,
                                    ("x"in l || "y"in l) && (v.path.v = e.format("m{0},{1}l{2},{1}", s(p.x * _), s(p.y * _), s(p.x * _) + 1));
                                    for (var G = ["x", "y", "text", "font", "font-family", "font-weight", "font-style", "font-size"], K = 0, Z = G.length; K < Z; K++)
                                        if (G[K]in l) {
                                            v._.dirty = 1;
                                            break
                                        }
                                    switch (p["text-anchor"]) {
                                    case "start":
                                        v.textpath.style["v-text-align"] = "left",
                                        v.bbx = v.W / 2;
                                        break;
                                    case "end":
                                        v.textpath.style["v-text-align"] = "right",
                                        v.bbx = -v.W / 2;
                                        break;
                                    default:
                                        v.textpath.style["v-text-align"] = "center",
                                        v.bbx = 0
                                    }
                                    v.textpath.style["v-text-kern"] = !0
                                }
                            }
                              , A = function(t, s, a) {
                                t.attrs = t.attrs || {};
                                var r = (t.attrs,
                                Math.pow)
                                  , l = "linear"
                                  , c = ".5 .5";
                                if (t.attrs.gradient = s,
                                s = n(s).replace(e._radial_gradient, function(e, t, n) {
                                    return l = "radial",
                                    t && n && (t = i(t),
                                    n = i(n),
                                    r(t - .5, 2) + r(n - .5, 2) > .25 && (n = o.sqrt(.25 - r(t - .5, 2)) * (2 * (n > .5) - 1) + .5),
                                    c = t + h + n),
                                    u
                                }),
                                s = s.split(/\s*\-\s*/),
                                "linear" == l) {
                                    var d = s.shift();
                                    if (d = -i(d),
                                    isNaN(d))
                                        return null
                                }
                                var p = e._parseDots(s);
                                if (!p)
                                    return null;
                                if (t = t.shape || t.node,
                                p.length) {
                                    t.removeChild(a),
                                    a.on = !0,
                                    a.method = "none",
                                    a.color = p[0].color,
                                    a.color2 = p[p.length - 1].color;
                                    for (var f = [], g = 0, m = p.length; g < m; g++)
                                        p[g].offset && f.push(p[g].offset + h + p[g].color);
                                    a.colors = f.length ? f.join() : "0% " + a.color,
                                    "radial" == l ? (a.type = "gradientTitle",
                                    a.focus = "100%",
                                    a.focussize = "0 0",
                                    a.focusposition = c,
                                    a.angle = 0) : (a.type = "gradient",
                                    a.angle = (270 - d) % 360),
                                    t.appendChild(a)
                                }
                                return 1
                            }
                              , M = function(t, n) {
                                this[0] = this.node = t,
                                t.raphael = !0,
                                this.id = e._oid++,
                                t.raphaelid = this.id,
                                this.X = 0,
                                this.Y = 0,
                                this.attrs = {},
                                this.paper = n,
                                this.matrix = e.matrix(),
                                this._ = {
                                    transform: [],
                                    sx: 1,
                                    sy: 1,
                                    dx: 0,
                                    dy: 0,
                                    deg: 0,
                                    dirty: 1,
                                    dirtyT: 1
                                },
                                !n.bottom && (n.bottom = this),
                                this.prev = n.top,
                                n.top && (n.top.next = this),
                                n.top = this,
                                this.next = null
                            }
                              , E = e.el;
                            M.prototype = E,
                            E.constructor = M,
                            E.transform = function(t) {
                                if (null == t)
                                    return this._.transform;
                                var i, o = this.paper._viewBoxShift, s = o ? "s" + [o.scale, o.scale] + "-1-1t" + [o.dx, o.dy] : u;
                                o && (i = t = n(t).replace(/\.{3}|\u2026/g, this._.transform || u)),
                                e._extractTransform(this, s + t);
                                var a, r = this.matrix.clone(), l = this.skew, c = this.node, d = ~n(this.attrs.fill).indexOf("-"), p = !n(this.attrs.fill).indexOf("url(");
                                if (r.translate(1, 1),
                                p || d || "image" == this.type)
                                    if (l.matrix = "1 0 0 1",
                                    l.offset = "0 0",
                                    a = r.split(),
                                    d && a.noRotation || !a.isSimple) {
                                        c.style.filter = r.toFilter();
                                        var f = this.getBBox()
                                          , g = this.getBBox(1)
                                          , m = f.x - g.x
                                          , v = f.y - g.y;
                                        c.coordorigin = m * -_ + h + v * -_,
                                        x(this, 1, 1, m, v, 0)
                                    } else
                                        c.style.filter = u,
                                        x(this, a.scalex, a.scaley, a.dx, a.dy, a.rotate);
                                else
                                    c.style.filter = u,
                                    l.matrix = n(r),
                                    l.offset = r.offset();
                                return null !== i && (this._.transform = i,
                                e._extractTransform(this, i)),
                                this
                            }
                            ,
                            E.rotate = function(e, t, o) {
                                if (this.removed)
                                    return this;
                                if (null != e) {
                                    if (e = n(e).split(c),
                                    e.length - 1 && (t = i(e[1]),
                                    o = i(e[2])),
                                    e = i(e[0]),
                                    null == o && (t = o),
                                    null == t || null == o) {
                                        var s = this.getBBox(1);
                                        t = s.x + s.width / 2,
                                        o = s.y + s.height / 2
                                    }
                                    return this._.dirtyT = 1,
                                    this.transform(this._.transform.concat([["r", e, t, o]])),
                                    this
                                }
                            }
                            ,
                            E.translate = function(e, t) {
                                return this.removed ? this : (e = n(e).split(c),
                                e.length - 1 && (t = i(e[1])),
                                e = i(e[0]) || 0,
                                t = +t || 0,
                                this._.bbox && (this._.bbox.x += e,
                                this._.bbox.y += t),
                                this.transform(this._.transform.concat([["t", e, t]])),
                                this)
                            }
                            ,
                            E.scale = function(e, t, o, s) {
                                if (this.removed)
                                    return this;
                                if (e = n(e).split(c),
                                e.length - 1 && (t = i(e[1]),
                                o = i(e[2]),
                                s = i(e[3]),
                                isNaN(o) && (o = null),
                                isNaN(s) && (s = null)),
                                e = i(e[0]),
                                null == t && (t = e),
                                null == s && (o = s),
                                null == o || null == s)
                                    var a = this.getBBox(1);
                                return o = null == o ? a.x + a.width / 2 : o,
                                s = null == s ? a.y + a.height / 2 : s,
                                this.transform(this._.transform.concat([["s", e, t, o, s]])),
                                this._.dirtyT = 1,
                                this
                            }
                            ,
                            E.hide = function() {
                                return !this.removed && (this.node.style.display = "none"),
                                this
                            }
                            ,
                            E.show = function() {
                                return !this.removed && (this.node.style.display = u),
                                this
                            }
                            ,
                            E.auxGetBBox = e.el.getBBox,
                            E.getBBox = function() {
                                var e = this.auxGetBBox();
                                if (this.paper && this.paper._viewBoxShift) {
                                    var t = {}
                                      , n = 1 / this.paper._viewBoxShift.scale;
                                    return t.x = e.x - this.paper._viewBoxShift.dx,
                                    t.x *= n,
                                    t.y = e.y - this.paper._viewBoxShift.dy,
                                    t.y *= n,
                                    t.width = e.width * n,
                                    t.height = e.height * n,
                                    t.x2 = t.x + t.width,
                                    t.y2 = t.y + t.height,
                                    t
                                }
                                return e
                            }
                            ,
                            E._getBBox = function() {
                                return this.removed ? {} : {
                                    x: this.X + (this.bbx || 0) - this.W / 2,
                                    y: this.Y - this.H,
                                    width: this.W,
                                    height: this.H
                                }
                            }
                            ,
                            E.remove = function() {
                                if (!this.removed && this.node.parentNode) {
                                    this.paper.__set__ && this.paper.__set__.exclude(this),
                                    e.eve.unbind("raphael.*.*." + this.id),
                                    e._tear(this, this.paper),
                                    this.node.parentNode.removeChild(this.node),
                                    this.shape && this.shape.parentNode.removeChild(this.shape);
                                    for (var t in this)
                                        this[t] = "function" == typeof this[t] ? e._removedFactory(t) : null;
                                    this.removed = !0
                                }
                            }
                            ,
                            E.attr = function(n, i) {
                                if (this.removed)
                                    return this;
                                if (null == n) {
                                    var o = {};
                                    for (var s in this.attrs)
                                        this.attrs[t](s) && (o[s] = this.attrs[s]);
                                    return o.gradient && "none" == o.fill && (o.fill = o.gradient) && delete o.gradient,
                                    o.transform = this._.transform,
                                    o
                                }
                                if (null == i && e.is(n, "string")) {
                                    if ("fill" == n && "none" == this.attrs.fill && this.attrs.gradient)
                                        return this.attrs.gradient;
                                    for (var a = n.split(c), r = {}, l = 0, h = a.length; l < h; l++)
                                        n = a[l],
                                        n in this.attrs ? r[n] = this.attrs[n] : e.is(this.paper.customAttributes[n], "function") ? r[n] = this.paper.customAttributes[n].def : r[n] = e._availableAttrs[n];
                                    return h - 1 ? r : r[a[0]]
                                }
                                if (this.attrs && null == i && e.is(n, "array")) {
                                    for (r = {},
                                    l = 0,
                                    h = n.length; l < h; l++)
                                        r[n[l]] = this.attr(n[l]);
                                    return r
                                }
                                var u;
                                null != i && (u = {},
                                u[n] = i),
                                null == i && e.is(n, "object") && (u = n);
                                for (var p in u)
                                    d("raphael.attr." + p + "." + this.id, this, u[p]);
                                if (u) {
                                    for (p in this.paper.customAttributes)
                                        if (this.paper.customAttributes[t](p) && u[t](p) && e.is(this.paper.customAttributes[p], "function")) {
                                            var f = this.paper.customAttributes[p].apply(this, [].concat(u[p]));
                                            this.attrs[p] = u[p];
                                            for (var g in f)
                                                f[t](g) && (u[g] = f[g])
                                        }
                                    u.text && "text" == this.type && (this.textpath.string = u.text),
                                    k(this, u)
                                }
                                return this
                            }
                            ,
                            E.toFront = function() {
                                return !this.removed && this.node.parentNode.appendChild(this.node),
                                this.paper && this.paper.top != this && e._tofront(this, this.paper),
                                this
                            }
                            ,
                            E.toBack = function() {
                                return this.removed ? this : (this.node.parentNode.firstChild != this.node && (this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild),
                                e._toback(this, this.paper)),
                                this)
                            }
                            ,
                            E.insertAfter = function(t) {
                                return this.removed ? this : (t.constructor == e.st.constructor && (t = t[t.length - 1]),
                                t.node.nextSibling ? t.node.parentNode.insertBefore(this.node, t.node.nextSibling) : t.node.parentNode.appendChild(this.node),
                                e._insertafter(this, t, this.paper),
                                this)
                            }
                            ,
                            E.insertBefore = function(t) {
                                return this.removed ? this : (t.constructor == e.st.constructor && (t = t[0]),
                                t.node.parentNode.insertBefore(this.node, t.node),
                                e._insertbefore(this, t, this.paper),
                                this)
                            }
                            ,
                            E.blur = function(t) {
                                var n = this.node.runtimeStyle
                                  , i = n.filter;
                                return i = i.replace(g, u),
                                0 != +t ? (this.attrs.blur = t,
                                n.filter = i + h + " progid:DXImageTransform.Microsoft.Blur(pixelradius=" + (+t || 1.5) + ")",
                                n.margin = e.format("-{0}px 0 0 -{0}px", s(+t || 1.5))) : (n.filter = i,
                                n.margin = 0,
                                delete this.attrs.blur),
                                this
                            }
                            ,
                            e._engine.path = function(e, t) {
                                var n = I("shape");
                                n.style.cssText = v,
                                n.coordsize = _ + h + _,
                                n.coordorigin = t.coordorigin;
                                var i = new M(n,t)
                                  , o = {
                                    fill: "none",
                                    stroke: "#000"
                                };
                                e && (o.path = e),
                                i.type = "path",
                                i.path = [],
                                i.Path = u,
                                k(i, o),
                                t.canvas && t.canvas.appendChild(n);
                                var s = I("skew");
                                return s.on = !0,
                                n.appendChild(s),
                                i.skew = s,
                                i.transform(u),
                                i
                            }
                            ,
                            e._engine.rect = function(t, n, i, o, s, a) {
                                var r = e._rectPath(n, i, o, s, a)
                                  , l = t.path(r)
                                  , c = l.attrs;
                                return l.X = c.x = n,
                                l.Y = c.y = i,
                                l.W = c.width = o,
                                l.H = c.height = s,
                                c.r = a,
                                c.path = r,
                                l.type = "rect",
                                l
                            }
                            ,
                            e._engine.ellipse = function(e, t, n, i, o) {
                                var s = e.path();
                                s.attrs;
                                return s.X = t - i,
                                s.Y = n - o,
                                s.W = 2 * i,
                                s.H = 2 * o,
                                s.type = "ellipse",
                                k(s, {
                                    cx: t,
                                    cy: n,
                                    rx: i,
                                    ry: o
                                }),
                                s
                            }
                            ,
                            e._engine.circle = function(e, t, n, i) {
                                var o = e.path();
                                o.attrs;
                                return o.X = t - i,
                                o.Y = n - i,
                                o.W = o.H = 2 * i,
                                o.type = "circle",
                                k(o, {
                                    cx: t,
                                    cy: n,
                                    r: i
                                }),
                                o
                            }
                            ,
                            e._engine.image = function(t, n, i, o, s, a) {
                                var r = e._rectPath(i, o, s, a)
                                  , l = t.path(r).attr({
                                    stroke: "none"
                                })
                                  , c = l.attrs
                                  , d = l.node
                                  , h = d.getElementsByTagName("fill")[0];
                                return c.src = n,
                                l.X = c.x = i,
                                l.Y = c.y = o,
                                l.W = c.width = s,
                                l.H = c.height = a,
                                c.path = r,
                                l.type = "image",
                                h.parentNode == d && d.removeChild(h),
                                h.rotate = !0,
                                h.src = n,
                                h.type = "tile",
                                l._.fillpos = [i, o],
                                l._.fillsize = [s, a],
                                d.appendChild(h),
                                x(l, 1, 1, 0, 0, 0),
                                l
                            }
                            ,
                            e._engine.text = function(t, i, o, a) {
                                var r = I("shape")
                                  , l = I("path")
                                  , c = I("textpath");
                                i = i || 0,
                                o = o || 0,
                                a = a || "",
                                l.v = e.format("m{0},{1}l{2},{1}", s(i * _), s(o * _), s(i * _) + 1),
                                l.textpathok = !0,
                                c.string = n(a),
                                c.on = !0,
                                r.style.cssText = v,
                                r.coordsize = _ + h + _,
                                r.coordorigin = "0 0";
                                var d = new M(r,t)
                                  , p = {
                                    fill: "#000",
                                    stroke: "none",
                                    font: e._availableAttrs.font,
                                    text: a
                                };
                                d.shape = r,
                                d.path = l,
                                d.textpath = c,
                                d.type = "text",
                                d.attrs.text = n(a),
                                d.attrs.x = i,
                                d.attrs.y = o,
                                d.attrs.w = 1,
                                d.attrs.h = 1,
                                k(d, p),
                                r.appendChild(c),
                                r.appendChild(l),
                                t.canvas.appendChild(r);
                                var f = I("skew");
                                return f.on = !0,
                                r.appendChild(f),
                                d.skew = f,
                                d.transform(u),
                                d
                            }
                            ,
                            e._engine.setSize = function(t, n) {
                                var i = this.canvas.style;
                                return this.width = t,
                                this.height = n,
                                t == +t && (t += "px"),
                                n == +n && (n += "px"),
                                i.width = t,
                                i.height = n,
                                i.clip = "rect(0 " + t + " " + n + " 0)",
                                this._viewBox && e._engine.setViewBox.apply(this, this._viewBox),
                                this
                            }
                            ,
                            e._engine.setViewBox = function(t, n, i, o, s) {
                                e.eve("raphael.setViewBox", this, this._viewBox, [t, n, i, o, s]);
                                var a, r, l = this.getSize(), c = l.width, d = l.height;
                                return s && (a = d / o,
                                r = c / i,
                                i * a < c && (t -= (c - i * a) / 2 / a),
                                o * r < d && (n -= (d - o * r) / 2 / r)),
                                this._viewBox = [t, n, i, o, !!s],
                                this._viewBoxShift = {
                                    dx: -t,
                                    dy: -n,
                                    scale: l
                                },
                                this.forEach(function(e) {
                                    e.transform("...")
                                }),
                                this
                            }
                            ;
                            var I;
                            e._engine.initWin = function(e) {
                                var t = e.document;
                                t.styleSheets.length < 31 ? t.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)") : t.styleSheets[0].addRule(".rvml", "behavior:url(#default#VML)");
                                try {
                                    !t.namespaces.rvml && t.namespaces.add("rvml", "urn:schemas-microsoft-com:vml"),
                                    I = function(e) {
                                        return t.createElement("<rvml:" + e + ' class="rvml">')
                                    }
                                } catch (e) {
                                    I = function(e) {
                                        return t.createElement("<" + e + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')
                                    }
                                }
                            }
                            ,
                            e._engine.initWin(e._g.win),
                            e._engine.create = function() {
                                var t = e._getContainer.apply(0, arguments)
                                  , n = t.container
                                  , i = t.height
                                  , o = t.width
                                  , s = t.x
                                  , a = t.y;
                                if (!n)
                                    throw new Error("VML container not found.");
                                var r = new e._Paper
                                  , l = r.canvas = e._g.doc.createElement("div")
                                  , c = l.style;
                                return s = s || 0,
                                a = a || 0,
                                o = o || 512,
                                i = i || 342,
                                r.width = o,
                                r.height = i,
                                o == +o && (o += "px"),
                                i == +i && (i += "px"),
                                r.coordsize = 216e5 + h + 216e5,
                                r.coordorigin = "0 0",
                                r.span = e._g.doc.createElement("span"),
                                r.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;",
                                l.appendChild(r.span),
                                c.cssText = e.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", o, i),
                                1 == n ? (e._g.doc.body.appendChild(l),
                                c.left = s + "px",
                                c.top = a + "px",
                                c.position = "absolute") : n.firstChild ? n.insertBefore(l, n.firstChild) : n.appendChild(l),
                                r.renderfix = function() {}
                                ,
                                r
                            }
                            ,
                            e.prototype.clear = function() {
                                e.eve("raphael.clear", this),
                                this.canvas.innerHTML = u,
                                this.span = e._g.doc.createElement("span"),
                                this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;",
                                this.canvas.appendChild(this.span),
                                this.bottom = this.top = null
                            }
                            ,
                            e.prototype.remove = function() {
                                e.eve("raphael.remove", this),
                                this.canvas.parentNode.removeChild(this.canvas);
                                for (var t in this)
                                    this[t] = "function" == typeof this[t] ? e._removedFactory(t) : null;
                                return !0
                            }
                            ;
                            var L = e.st;
                            for (var T in E)
                                E[t](T) && !L[t](T) && (L[T] = function(e) {
                                    return function() {
                                        var t = arguments;
                                        return this.forEach(function(n) {
                                            n[e].apply(n, t)
                                        })
                                    }
                                }(T))
                        }
                    }
                    .apply(t, i)) && (e.exports = o)
                }
                ])
            })
        }
        ).call(t, n("E4vQ")(e))
    },
    q3Rn: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            id: null,
            library: null,
            section: null,
            team: null,
            initialize: function(e) {
                this.id = e.id,
                this.library = e.library,
                this.section = e.section,
                this.team = e.team ? e.team : null,
                i.all[this.fullName()] = this
            },
            isDefault: function() {
                return "default" === this.library
            },
            isInLibraryAndSection: function(e, t) {
                return this.library === e && this.section === t
            },
            name: function() {
                return (this.section ? this.section + "-" : "") + this.id
            },
            fullName: function() {
                return (this.isDefault() ? "" : this.library + "/") + (this.section ? this.section + "-" : "") + this.id
            },
            equals: function(e) {
                return this.fullName() === e.fullName()
            },
            url: function() {
                return i.libraries[this.library].paths[this.name()]
            },
            group: function() {
                if (!i.libraries[this.library].hasGroups)
                    return null;
                var e = this.id.substring(0, this.id.indexOf("_"));
                return "" != e ? e : null
            },
            nextInGroup: function() {
                if (!this.group())
                    return null;
                var e = i.allInGroup(this.library, this.group());
                if (0 === e.length)
                    return null;
                var t = e.indexOf(this);
                return t === e.length - 1 ? e[0] : e[t + 1]
            },
            getTitle: function() {
                if ("task" === this.group()) {
                    return 25 * Number(this.id.charAt(5) - 1) + "% " + I18n.t("js.done_lower")
                }
                return "priority" === this.group() ? I18n.t("js.priority_s", {
                    v0: this.id.charAt(10)
                }) : this.id.split("_").map(function(e) {
                    return e.capitalize()
                }).join(" ")
            },
            getElement: function(e) {
                return e = Object.extend({
                    src: this.url()
                }, e),
                new Element("img",e)
            },
            getSpritePosition: function() {
                return i.allInSection(this.library, this.section).indexOf(this)
            },
            getSpriteElement: function(e) {
                var t = this.getSpritePosition();
                return new Element(e || "a",{
                    href: "#",
                    style: "background-position: 0 " + 24 * -t + "px"
                })
            }
        });
        i.all = {},
        i.get = function(e) {
            return i.all.hasOwnProperty(e) ? i.all[e] : null
        }
        ,
        i.fromFullName = function(e) {
            if (e.split("/").length > 1)
                var t = e.split("/")[0]
                  , n = e.split("/")[1];
            else
                var t = "default"
                  , n = e;
            var o = null;
            n.split("-").length > 1 && (o = n.split("-")[0],
            n = n.split("-")[1]);
            try {
                if (i.libraries[t] && i.libraries[t].icons && (Array.isArray(i.libraries[t].icons) && i.libraries[t].icons.indexOf(n) >= 0 || !Array.isArray(i.libraries[t].icons) && i.libraries[t].icons[o].indexOf(n) >= 0)) {
                    var s = i.get(e);
                    return s || (s = new i({
                        id: n,
                        library: t,
                        section: o
                    })),
                    s
                }
                return null
            } catch (e) {
                return null
            }
        }
        ,
        i.allInGroup = function(e, t) {
            if (!i.libraries[e].hasGroups)
                return [];
            var n = i.allInLibrary(e)
              , o = [];
            return n.each(function(e) {
                e.group() === t && o.push(e)
            }),
            o
        }
        ,
        i.allInSection = function(e, t) {
            if (!i.libraries[e])
                return [];
            var n = i.libraries[e].icons;
            return null === t || Array.isArray(n) || !n.hasOwnProperty(t) ? i.allInLibrary(e) : n[t].map(function(n) {
                return i.findOrInit({
                    id: n,
                    library: e,
                    section: t
                })
            })
        }
        ,
        i.getSections = function(e) {
            var t = i.libraries[e].icons;
            return Array.isArray(t) ? null : Object.keys(t)
        }
        ,
        i.allInLibrary = function(e) {
            if (!i.libraries[e])
                return [];
            var t = i.libraries[e].icons
              , n = [];
            return Array.isArray(t) ? t.each(function(t) {
                n.push(i.findOrInit({
                    id: t,
                    library: e,
                    section: null
                }))
            }) : Object.keys(t).each(function(o) {
                t[o].each(function(t) {
                    n.push(i.findOrInit({
                        id: t,
                        library: e,
                        section: o
                    }))
                })
            }),
            n
        }
        ,
        i.libraryElements = function(e, t) {
            if (!i.libraries[e])
                return [];
            for (var n = i.libraries[e].icons, o = 0, s = n.length; o < s; o++) {
                i.findOrInit({
                    id: n[o],
                    library: e,
                    section: null
                });
                ret.push(element)
            }
            return 0
        }
        ,
        i.sectionToString = function(e, t) {
            return e !== t && t ? e + "_" + t : e
        }
        ,
        i.getByDetails = function(e) {
            for (var t = Object.keys(i.all), n = null, o = t.length; o-- && !n; )
                i.all[t[o]].id === e.id && i.all[t[o]].section === e.section && i.all[t[o]].library === e.library && (n = i.all[t[o]]);
            return n
        }
        ,
        i.findOrInit = function(e) {
            var t = i.getByDetails({
                id: e.id,
                library: e.library,
                section: e.section
            });
            return t || (t = new i({
                id: e.id,
                library: e.library,
                section: e.section
            })),
            t
        }
        ,
        i.compactAndOrder = function(e) {
            var t = [];
            return e.each(function(e) {
                e && (e.isDefault() && "priority" === e.group() ? t.unshift(e) : e.isDefault() && "task" === e.group() ? t.insert(e, t[0] && t[0].id.match("priority") ? 1 : 0) : t.push(e))
            }),
            t = t.uniqBy(function(e, t) {
                return e.equals(t)
            })
        }
        ,
        t.default = i
    },
    qmQO: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("6B3d")
          , o = n("twRW")
          , s = n("49TO")
          , a = n("zDP6")
          , r = n("YQ4/")
          , l = n("3sJ7")
          , c = n("ZjT+")
          , d = n("cdGT")
          , h = n("G8SJ")
          , u = n("L/YL")
          , p = n("079/")
          , f = n("iy3A")
          , g = n("UWmw")
          , m = CSS.scale(1)
          , v = CSS.scale(0)
          , _ = Class.create({
            el: null,
            toolbar: null,
            scaleFactor: 1,
            visible: !1,
            viewportSpace: {
                right: 0
            },
            initialize: function() {
                var e = this;
                this.el = $("sidebar"),
                this.toggleBtn = mm$("btn-show-sidebar"),
                this.toolbar = mm$("toolbar_sidebar"),
                this.expandedElement = this.toolbar,
                this.widgets = [],
                this.sections = [],
                this.format = new i.default(this),
                this.widgets.push(this.format),
                this.sections.push(this.format);
                var t = new o.default("design",[a.default, r.default, s.default],this)
                  , n = new o.default("media",[l.default, c.default, d.default],this)
                  , m = new o.default("extras",[h.default, u.default, p.default, f.default, g.default],this);
                this.sections.push(t),
                this.sections.push(n),
                this.sections.push(m),
                Element.bindOnClick(this.toggleBtn, function() {
                    return e.show(!0, !0)
                }),
                Element.bindOnClick("btn-hide-sidebar", function() {
                    return e.hide(!0, !0)
                }),
                UI.Registry.add(this),
                App.subscribe(CustomEvents.POST_LOAD, this.expandWidgetOnLoad.bind(this)),
                this.tooltips = MM.ui.ToolTips.touchSafe({
                    el: this.el
                })
            },
            show: function(e, t, n, i) {
                var o = App.config
                  , s = o.hide_sidebar
                  , a = o.sidebar_extended;
                s && !t || (this._doShow({
                    animation: n,
                    animationFunction: i,
                    expandedWidgetId: a,
                    useEffect: e
                }),
                t && App.setPreference("hide_sidebar", !1))
            },
            hide: function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : v
                  , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "cubic-bezier(1, 0, 0, 1)";
                if (this.visible) {
                    var o = e ? 500 : 0;
                    CSS.set(this.expandedElement, {
                        transitionDuration: o + "ms",
                        opacity: 0,
                        transform: n,
                        transitionTimingFunction: i
                    }),
                    this._doAnimation(n),
                    this.showToggleBtn(),
                    this.scaleFactor = 0,
                    App.SIDEBAR_WIDTH = 0,
                    App.SIDEBAR_HEIGHT = 0,
                    t && App.setPreference("hide_sidebar", !0),
                    UI.Registry.notify(this, "hide"),
                    this._updateViewportSpace()
                }
            },
            toggle: function(e) {
                this.visible ? this.hide(!0, e) : this.show(!0, e)
            },
            showToggleBtn: function() {
                removeClassName(this.toggleBtn, "hidden")
            },
            hideToggleBtn: function() {
                addClassName(this.toggleBtn, "hidden")
            },
            expandWidget: function(e) {
                var t = this.widgets.find(function(t) {
                    return t.id === e
                });
                t && t !== this.expandedWidget && t.expand()
            },
            expandWidgetOnLoad: function() {
                var e = MM.utils.Url.getHashParams()
                  , t = this.widgets.find(function(t) {
                    return t.id === e.sidebar_extended
                });
                if (t) {
                    var n = t.id;
                    this.visible ? this.expandWidget(n) : this._doShow({
                        expandedWidgetId: n
                    })
                }
            },
            toViewMode: function() {
                this.toggleBtn.addClassName("h-hidden"),
                this.hide(!0)
            },
            toEditMode: function() {
                this.show(!0),
                this.toggleBtn.removeClassName("h-hidden")
            },
            onSelectNode: function() {
                canvas.selected && this.visible && this.widgets.each(function(e) {
                    (e.visible || e.expanded) && e.onSelectNode()
                })
            },
            onResize: function() {
                var e = UI.Registry.viewportOffset
                  , t = e.top
                  , n = e.bottom
                  , i = MM.ui.page.height - (t + n + 30)
                  , o = this.expandedElement.getHeight()
                  , s = i < o ? Math.max(.75, i / o) : 1;
                this.scaleTo(s),
                this._updateViewportSpace()
            },
            scaleTo: function(e) {
                this.scaleFactor !== e && (this.scaleFactor = e,
                this._doAnimation(CSS.scale(e)))
            },
            _doAnimation: function(e) {
                CSS.set(this.expandedElement, {
                    transform: e
                })
            },
            _doShow: function() {
                var e = this
                  , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                  , n = App.config
                  , i = n.viewMode
                  , o = n.editable
                  , s = n.currentlyEditable;
                if (!("external" === i && !o || this.visible && s)) {
                    var a = t.animation
                      , r = void 0 === a ? m : a
                      , l = t.animationFunction
                      , c = void 0 === l ? "cubic-bezier(1, 0, 0, 1)" : l
                      , d = t.useEffect
                      , h = t.expandedWidgetId
                      , u = {
                        right: App.SCROLLBAR_SIZE + 15 + "px",
                        opacity: 1,
                        transitionTimingFunction: c
                    };
                    if (d && (u.transitionDuration = "500ms"),
                    this.expandWidget(h),
                    CSS.set(this.expandedElement, u),
                    this.visible = !0,
                    this._doAnimation(r),
                    this.onResize(),
                    d) {
                        var p = CSS.whichTransitionEvent();
                        Event.observeOnce(this.expandedElement, p, function() {
                            UI.Registry.notify(e, "show")
                        })
                    } else
                        UI.Registry.notify(this, "show");
                    this.hideToggleBtn(),
                    this.sections.each(function(e) {
                        e.show()
                    }, this),
                    this.onSelectNode(),
                    App.SIDEBAR_WIDTH = this.expandedElement.getWidth() + parseInt(this.expandedElement.getStyle("right")),
                    App.SIDEBAR_HEIGHT = this.expandedElement.getHeight()
                }
            },
            _updateViewportSpace: function() {
                var e = parseInt(this.expandedElement.style.right)
                  , t = (this.expandedElement.getWidth() + e) * this.scaleFactor;
                t !== this.viewportSpace.right && (this.viewportSpace = {
                    right: t
                })
            }
        });
        t.default = _
    },
    qzqB: function(e, t, n) {
        "use strict";
        (function(e) {
            var n = function(t) {
                var n = "input flyout " + (t.className || "");
                return e.createElement("a", {
                    href: "#",
                    className: n,
                    style: t.style
                }, t.icon, e.createElement("span", null, t.label))
            };
            t.a = n
        }
        ).call(t, n("nakD"))
    },
    rOv1: function(e, t, n) {
        function i(e) {
            return a(e) || s(e) || !!(r && e && e[r])
        }
        var o = n("S8m2")
          , s = n("Qziv")
          , a = n("zOp4")
          , r = o ? o.isConcatSpreadable : void 0;
        e.exports = i
    },
    rP4o: function(e, t, n) {
        var i = n("Xxf7")
          , o = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;"
        }
          , s = i(o);
        e.exports = s
    },
    rX76: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("t8zp")
          , o = Class.create({
            vnode: null,
            angle: null,
            orientation: null,
            graphics: null,
            initialize: function(e) {
                this.vnode = e,
                this.graphics = this.graphics || new i.VGraphics(this)
            },
            getOrientation: function() {
                return this.vnode.node.pos[0] > 0 ? App.Layouts.orientation.right : App.Layouts.orientation.left
            },
            paint: function(e) {
                return App.config.layout.paintRootChild(this, e)
            },
            domCoords: function() {
                return Math.offset(this.vnode.node.pos, Math.negativeOffset(canvas.getCenter(), this.vnode.dcontent.pos))
            },
            reposition: function(e) {
                App.config.layout.repositionRootChild(this, e)
            },
            refreshLayout: function() {
                App.config.layout.refreshRootChildLayout(this)
            },
            calculateLinePoints: function() {
                this.vnode.eachChild(function(e) {
                    e.calculateLinePoints(),
                    e.offsetLinePoints()
                }, !0)
            },
            redrawLines: function(e) {
                this.vnode.node.pos && !tree.notPainted && this.graphics && (this.calculateLinePoints(),
                this.redrawBoundaries(),
                this.graphics.redrawLines(),
                tree.readyForConnections && this.redrawConnections(e))
            },
            redrawRootLine: function(e, t) {
                this.calculateLinePoints(),
                this.graphics.redrawRootLine(e, t),
                "live" !== e && tree.readyForConnections && this.redrawConnections()
            },
            redrawBoundaries: function() {
                this.vnode.eachChild(function(e) {
                    e.node.boundary && (e.node.isVisible() ? e.node.boundary.view.redraw() : e.node.boundary.view.destroy())
                })
            },
            translateBoundaries: function(e) {
                this.vnode.eachChild(function(t) {
                    t.node.boundary && t.node.isVisible() && t.node.boundary.view.translate(e)
                })
            },
            translateOrgChildNodes: function(e) {
                this.redrawRootLine();
                for (var t = this.vnode.node.getNextSibling(); t; )
                    t._listener.rc.redrawRootLine(),
                    t._listener.rc.translateBoundaries({
                        x: e,
                        y: 0
                    }),
                    t._listener.rc.graphics.childrenPath.translate(e, 0),
                    t = t.getNextSibling()
            },
            redrawConnections: function(e) {
                this.vnode.eachChild(function(t) {
                    e && !t.isVisible() || t.node.connections.forEach(function(e) {
                        e.isDrawable() && e.view.redraw()
                    })
                })
            },
            destroyLines: function() {
                this.graphics && (this.graphics.destroy(),
                this.graphics = null)
            },
            destroy: function() {
                this.destroyLines(),
                this.vnode = null
            }
        });
        t.default = o
    },
    sNkp: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("MbB6")
          , o = n.n(i)
          , s = n("dnTF")
          , a = n.n(s)
          , r = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
            }
            return e
        }
          , l = {
            transitionDuration: 300,
            zoomFactor: 1.45,
            minZoom: .2,
            maxZoom: 6
        }
          , c = function(e) {
            return +e.toFixed(10).replace(/^(\-)?(.*)\./, "$10.")
        }
          , d = function(e, t, n, i, o) {
            this.originX = e,
            this.originY = t,
            this.translateX = n,
            this.translateY = i,
            this.scale = +o.toFixed(1)
        }
          , h = function(e) {
            x = e
        }
          , u = function(e, t) {
            e.scrollLeft -= t.translateX - x.translateX,
            e.scrollTop -= t.translateY - x.translateY
        }
          , p = function(e) {
            S = e
        }
          , f = function(e, t, n) {
            var i = 1 - n.scale
              , o = n.scale - 1 || 1;
            k = n.originX * i,
            A = n.originY * i;
            var s = t.scrollLeft - k
              , a = t.scrollTop - A;
            M.x = c(s) / o,
            M.y = c(a) / o,
            CSS.set(e, {
                transformOrigin: M.x + "px " + M.y + "px"
            }),
            t.scrollLeft = s,
            t.scrollTop = a,
            E = !0
        }
          , g = a()(function(e) {
            ServerConnection.setPreference("zoom_factor", C[e])
        }, 250)
          , m = function(e, t, n, i) {
            clearTimeout(w),
            E && (t.scrollLeft += k,
            t.scrollTop += A,
            E = !1);
            var o = n.originX + "px " + n.originY + "px"
              , s = i ? l.transitionDuration : 0;
            M.x = n.originX,
            M.y = n.originY,
            CSS.set(e, {
                transformOrigin: o,
                transform: "scale(" + n.scale.toFixed(2) + ")",
                transition: (MM.ua.isBrowser("Safari") ? browserPrefix() : "") + "transform " + s + "ms linear 0s"
            }),
            n.scale >= 1 && (w = setTimeout(f.bind(null, e, t, n), s + 200))
        }
          , v = function(e, t, n, i, o, s, a, r) {
            var l = _(e, x, n, i, e.offsetLeft, e.offsetTop, o, r.minScale, r.maxScale);
            if (l !== x) {
                var c = C.indexOf(+l.scale.toFixed(1));
                m(e, t, l, s),
                u(t, l),
                h(l),
                p(c),
                App.config.persistent && App.config.editable && a && g(S)
            }
        }
          , _ = function(e, t, n, i, o, s, a, r, l) {
            var c = t.scale
              , h = c + a / 10;
            h < r ? h = r : h > l && (h = l);
            var u = e.getBoundingClientRect()
              , p = n - o - u.left
              , f = i - s - u.top
              , g = p / c
              , m = f / c;
            if (c === h || g === t.originX && m === t.originY && (h === l || h === r))
                return t;
            var v = t.originX * c
              , _ = t.originY * c
              , y = t.translateX
              , b = t.translateY;
            return (Math.abs(p - v) > 1 || Math.abs(f - _) > 1) && c <= l ? (y += (p - v) * (1 - 1 / c),
            b += (f - _) * (1 - 1 / c)) : (1 !== c || p !== v && f !== _) && (g = v / c,
            m = _ / c),
            new d(g,m,y,b,h)
        }
          , y = o()(v, 50)
          , b = o()(v, l.transitionDuration + 100)
          , w = void 0
          , C = []
          , x = void 0
          , S = void 0
          , k = 0
          , A = 0
          , M = {
            x: 0,
            y: 0
        }
          , E = !1;
        t.default = {
            init: function(e, t, n) {
                this.el = e,
                this.scrollingContainer = t,
                this.opts = r({
                    minScale: l.minZoom,
                    maxScale: l.maxZoom
                }, n);
                for (var i = this.opts.minScale; i <= this.opts.maxScale; i += .1)
                    C.push(+i.toFixed(1));
                S = this.getZoomIndex(1),
                h(new d(0,0,0,0,1)),
                this.initialized = !0
            },
            canZoomOut: function() {
                return S > 0
            },
            canZoomIn: function() {
                return S < C.length - 1
            },
            zoomIn: function(e, t, n) {
                if (this.canZoomIn()) {
                    var i = Math.ceil(S * l.zoomFactor) || 1;
                    this.zoomTo(i, e, t, n)
                }
            },
            zoomOut: function(e, t, n) {
                if (this.canZoomOut()) {
                    var i = Math.floor(S / l.zoomFactor);
                    this.zoomTo(i, e, t, n)
                }
            },
            getScaleAvg: function() {
                return (this.opts.minScale + this.opts.maxScale) / 2
            },
            getZoomFactor: function(e) {
                return C[e || S]
            },
            getCurrentZoomIndex: function() {
                return S
            },
            getZoomIndex: function(e) {
                return C.indexOf(e)
            },
            zoomTo: function(e, t, n, i) {
                if (!i) {
                    var o = document.body.getBoundingClientRect()
                      , s = UI.Registry.viewportOffset;
                    i = {
                        left: (o.width - s.left - s.right) / 2,
                        top: o.height / 2
                    }
                }
                n ? b(this.el, this.scrollingContainer, i.left, i.top, e - S, n, t, this.opts) : v(this.el, this.scrollingContainer, i.left, i.top, e - S, n, t, this.opts)
            },
            onWheel: function(e, t) {
                e.preventDefault(),
                e.stopPropagation();
                var n = this.getZoomFactor() > 1 ? this.getZoomFactor() : 1;
                y(this.el, this.scrollingContainer, e.pageX, e.pageY, t * n, !1, !0, this.opts)
            },
            zoomToFit: function() {
                if (tree.finishedInitialization) {
                    var e = Math.max(.2, Math.min(1, parseFloat((MM.ui.page.width / App.config.layout.mapSize().width).toFixed(1))));
                    this.getZoomIndex(e) >= 0 && this.zoomTo(this.getZoomIndex(e), !1, !1)
                }
            },
            transformCssZoomValue: function(e, t) {
                return t ? e * this.getZoomFactor() : e / this.getZoomFactor()
            },
            transformCssZoomCoordinate: function(e, t, n) {
                var i = M[t]
                  , o = e - i;
                return i + this.transformCssZoomValue(o, n)
            }
        }
    },
    sfIr: function(e, t, n) {
        function i(e, t) {
            return !!(null == e ? 0 : e.length) && o(e, t, 0) > -1
        }
        var o = n("350u");
        e.exports = i
    },
    t6QJ: function(e, t) {
        function n(e) {
            if ("function" != typeof e)
                throw new TypeError(i);
            return function() {
                var t = arguments;
                switch (t.length) {
                case 0:
                    return !e.call(this);
                case 1:
                    return !e.call(this, t[0]);
                case 2:
                    return !e.call(this, t[0], t[1]);
                case 3:
                    return !e.call(this, t[0], t[1], t[2])
                }
                return !e.apply(this, t)
            }
        }
        var i = "Expected a function";
        e.exports = n
    },
    tCwE: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = function(e) {
            addClassName(e, "selected"),
            addClassName(e, "current")
        }
          , o = function(e) {
            addClassName(e, "selected"),
            removeClassName(e, "current")
        }
          , s = function(e) {
            removeClassName(e, "selected"),
            removeClassName(e, "current")
        }
          , a = function(e) {
            this.el.stopObserving("click", this.eventClickObserver),
            e && (this.eventClickObserver = e,
            this.el.observe("click", this.eventClickObserver))
        };
        t.default = {
            enabled: !0,
            state: null,
            _editingAction: null,
            eventClickObserver: null,
            isSelected: function() {
                return 2 === this.state
            },
            isPartiallySelected: function() {
                return 5 === this.state
            },
            isEditing: function() {
                return 3 === this.state
            },
            toInactive: function(e) {
                switch (this.state) {
                case 1:
                    return;
                case 2:
                case 4:
                case 5:
                    break;
                case 3:
                    this.leaveEditMode(e)
                }
                this.el.stopObserving("click", this.eventClickObserver);
                var t = this.el._listener;
                this.eventClickObserver = t.select.bindAsEventListener(t),
                this.enableSelecting(),
                this.state = 1,
                s(this.el),
                canvas.onUnselect(this.el._listener)
            },
            toPartiallySelected: function(e) {
                switch (this.state) {
                case 5:
                    return;
                case 1:
                case 2:
                case 4:
                    break;
                case 3:
                    this.leaveEditMode(e)
                }
                var t = this.el._listener;
                a.call(this, t.select.bindAsEventListener(t)),
                this.state = 5,
                o(this.el)
            },
            toSelected: function(e, t, n, o) {
                var s = !1
                  , r = !1;
                if (e) {
                    if (canvas._imageResizing)
                        return;
                    s = MM.ua.isPlatform("Macintosh") ? e.metaKey : e.ctrlKey,
                    r = e.shiftKey
                }
                switch (this.state) {
                case 5:
                    if (s || r)
                        return void this.toInactive();
                    break;
                case 2:
                    return;
                case 1:
                case 4:
                    break;
                case 3:
                    this.leaveEditMode(t)
                }
                a.call(this, this.toEditing.bindAsEventListener(this, "rename")),
                canvas.onSelect(this.el._listener, e, n, o),
                this.state = 2,
                i(this.el)
            },
            toEditing: function(e, t) {
                if ((!e || !canvas._imageResizing && !e.target.href) && this.enabled) {
                    switch (this._editingAction = t,
                    this.state) {
                    case 3:
                    case 4:
                        return
                    }
                    a.call(this),
                    this.state = 3;
                    var n = this.el._listener;
                    canvas.onSelect(n, e),
                    this.enterEditMode(),
                    i(this.el)
                }
            },
            toResizing: function() {
                switch (this.state) {
                case 3:
                    this.leaveEditMode(!0);
                    break;
                case 1:
                case 2:
                case 5:
                    break;
                case 4:
                    return
                }
                a.call(this),
                this.state = 4
            },
            disableSelecting: function() {
                this.enabled = !1,
                this.el.stopObserving("click", this.eventClickObserver)
            },
            enableSelecting: function() {
                this.enabled = !0,
                this.el.observe("click", this.eventClickObserver)
            }
        }
    },
    tZex: function(e, t, n) {
        function i(e, t, n) {
            "__proto__" == t && o ? o(e, t, {
                configurable: !0,
                enumerable: !0,
                value: n,
                writable: !0
            }) : e[t] = n
        }
        var o = n("jmhn");
        e.exports = i
    },
    twRW: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("A9ap")
          , o = Class.create(i.default, {
            initialize: function($super, e, t, n) {
                $super(e, n),
                this.tabs = [],
                this.widgets = {},
                t.each(function(e) {
                    var t = new e(n,this);
                    n[t.id] = t,
                    this.tabs.push(t.id),
                    this.widgets[t.id] = t,
                    n.widgets.push(t),
                    this.el.select("#btn_" + t.id)[0].observe("click", this.handleTabClick.bindAsEventListener(this, t.id))
                }
                .bind(this)),
                this.showWidget(this.activeTab())
            },
            handleTabClick: function(e, t) {
                e.stop(),
                this.showWidget(this.widgets[t]);
                var n = this.tabs.indexOf(t);
                App.setPreference("tab_" + this.el.id, n),
                App.trigger(CustomEvents["WIDGET_" + t.toUpperCase() + "_SELECTED"])
            },
            showWidget: function(e) {
                e.visible || (this.hidePreviousWidget(e),
                this.setWidget(e),
                e.show())
            },
            hidePreviousWidget: function(e) {
                if (this.active && this.active !== e) {
                    this.active.hide();
                    this.el.select("#btn_" + this.active.id)[0].removeClassName("selected")
                }
            },
            setWidget: function(e) {
                this.el.select("#btn_" + e.id)[0].addClassName("selected"),
                this.active = e
            },
            show: function($super) {
                $super();
                var e = MM.utils.Url.getHashParams();
                this.tabs.each(function(t) {
                    e.hasOwnProperty(t) && App.setPreference("tab_" + this.id, this.tabs.indexOf(t))
                }
                .bind(this)),
                this.activeTab().show()
            },
            onShow: function(e) {
                this.hidePreviousWidget(e),
                this.setWidget(e)
            },
            hide: function($super) {
                $super(),
                this.activeTab().hide()
            },
            toggle: function($super) {
                $super(),
                ServerConnection.setPreference("bar_" + this.id, !this.visible)
            },
            activeTab: function() {
                return this.active || this.sidebar[this.tabs[App.config["tab_" + this.id]] || this.tabs[0]]
            }
        });
        t.default = o
    },
    ugn0: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            function o(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function s(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function a(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var r = n("j0/H")
              , l = n("YmTu")
              , c = n("InUJ")
              , d = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , h = function(t) {
                function n(e) {
                    o(this, n);
                    var t = s(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
                    return t.goToLibrary = t.goToLibrary.bind(t),
                    t.onScroll = t.onScroll.bind(t),
                    t
                }
                return a(n, t),
                d(n, [{
                    key: "onScroll",
                    value: function(e) {
                        this.tabs && !this.animating && this.tabs.setActiveTab(e)
                    }
                }, {
                    key: "goToLibrary",
                    value: function(e) {
                        var t = this;
                        this.animating = !0,
                        Effect.ScrollToContext(i.findDOMNode(this.libraries[e]), {
                            target: i.findDOMNode(this.icons),
                            duration: "0.5",
                            offset: -115,
                            afterFinish: function() {
                                return t.animating = !1
                            }
                        })
                    }
                }, {
                    key: "update",
                    value: function() {
                        var e = this;
                        if (canvas.selected) {
                            var t = canvas.selected.node.icons;
                            this.props.libs.map(function(n) {
                                var i = Icon.sectionToString(n.lib, n.section)
                                  , o = t.filter(function(e) {
                                    return e.isInLibraryAndSection(n.lib, n.section)
                                });
                                e.libraries[i].update(o)
                            })
                        }
                    }
                }, {
                    key: "componentWillMount",
                    value: function() {
                        this.libraries = {}
                    }
                }, {
                    key: "componentDidMount",
                    value: function() {
                        this._tooltips = MM.ui.ToolTips.touchSafe({
                            el: this.container
                        })
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
                        MM.ui.ToolTips.destroyTouchSafe(this._tooltips)
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this
                          , n = void 0
                          , i = this.props.libs.map(function(i) {
                            var o = Icon.sectionToString(i.lib, i.section)
                              , s = "lib-" + o.replace("_", "-")
                              , a = e.createElement(r.default, {
                                prevName: n || o,
                                onScrollTo: t.onScroll,
                                icon: s,
                                iconSize: 16,
                                library: i.lib,
                                ref: function(e) {
                                    return t.libraries[o] = e
                                },
                                section: i.section,
                                onSelectIcon: t.props.onSelectIcon,
                                name: o,
                                key: "library_" + o
                            });
                            return n = o,
                            a
                        })
                          , o = this.props.libs.map(function(e) {
                            return Icon.sectionToString(e.lib, e.section)
                        });
                        return e.createElement("div", {
                            ref: function(e) {
                                return t.container = e
                            }
                        }, e.createElement("div", {
                            className: "h-flex-row bb-1 bc-grey5 p-10"
                        }, e.createElement(l.a, {
                            opts: {
                                name: "arrow-left",
                                color: "grey-lighter",
                                size: 12
                            },
                            onClick: this.props.onBack
                        }), e.createElement("div", {
                            className: "h-flex-row h-flex-grow justify-center fw-500 "
                        }, "Icons"), e.createElement(l.a, {
                            opts: {
                                name: "close",
                                color: "grey-lighter",
                                size: 10
                            },
                            onClick: this.props.onClose
                        })), e.createElement("div", {
                            ref: function(e) {
                                return t.icons = e
                            },
                            id: "icon_libraries",
                            className: "maxh-500 h-overflow-y p-r"
                        }, i), e.createElement(c.a, {
                            ref: function(e) {
                                return t.tabs = e
                            },
                            onClick: this.goToLibrary,
                            libs: o,
                            classes: "bt-1 bc-grey5 p-10 h-flex-row justify-sb"
                        }))
                    }
                }]),
                n
            }(e.Component);
            t.default = h
        }
        .call(t, n("nakD"), n("x9tB"))
    },
    uwez: function(e, t, n) {
        function i(e) {
            return e && e.length ? o(e) : []
        }
        var o = n("aaAh");
        e.exports = i
    },
    vLs6: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        n.d(t, "GoogleSearch", function() {
            return i
        }),
        n.d(t, "GoogleWebSearch", function() {
            return o
        });
        var i = Class.create({
            type: null,
            supported: ["ImageSearch", "WebSearch"],
            requestLimit: 4,
            requestLimitCookie: "google_cse",
            initialize: function(e) {
                if (this.engineId = "production" === ServerData.env || "production_new" === ServerData.env ? "015429506454637695210:3pbowazuebg" : "007810728781113314522:euuaxd-rpc8",
                this.apiKey = "production" === ServerData.env || "production_new" === ServerData.env ? "AIzaSyBwCN1sb2dpT-LTh40UrJb48dC1sIYU9Xo" : "AIzaSyDHKj0GxzU5NdnIpCVzO1Bbgyy7CfOCK6k",
                !(e.type && this.supported.indexOf(e.type) > -1))
                    throw "Unsupported or missing Google Search Engine";
                this.type = e.type,
                this.options = Object.extend({
                    resultCount: 20,
                    maxResults: 60
                }, e);
                var t = parseInt(MM.utils.getCookie(this.requestLimitCookie));
                this.index = 1,
                this.results = [],
                this.requestCount = isNaN(t) ? 0 : t
            },
            query: function(e, t, n) {
                if (e) {
                    if (n = n || {},
                    this.options.limitRequests && this.requestCount >= this.requestLimit)
                        return this.queryText = null,
                        this.searchComplete(this.results, n.onComplete),
                        void MM.ui.dialogs.dialogUpgrade("map_google_cse");
                    var i = {
                        q: e,
                        alt: "json",
                        cx: this.engineId,
                        key: this.apiKey,
                        start: n.index || 1
                    };
                    "ImageSearch" === this.type && (i.searchType = "image");
                    var o = Object.toQueryString(i) + (t ? "&fields=" + t : "")
                      , s = "https://www.googleapis.com/customsearch/v1?" + o
                      , a = new XMLHttpRequest;
                    MM.utils.setCookie(this.requestLimitCookie, ++this.requestCount, 1),
                    a.open("GET", s, !0),
                    a.onreadystatechange = function() {
                        if (4 === a.readyState) {
                            var t = JSON.parse(a.responseText);
                            if (200 === a.status) {
                                this.results = this.results.concat(t.items || []);
                                var i = t.queries.nextPage;
                                i && (this.index = i[0].startIndex),
                                i && this.results.length < this.options.resultCount && !this.options.disablePages ? (n.index = this.index,
                                this.query(e, n)) : this.searchComplete(this.results, n.onComplete)
                            } else
                                t.error && 403 === t.error.code && new Ajax.Request("/images/notify_google_rate"),
                                Windows.windows.length > 0 ? MM.ui.dialogs.showError(I18n.t("js.s_could_not_be_contacted", {
                                    v0: "Google"
                                })) : Message.show(I18n.t("js.s_could_not_be_contacted", {
                                    v0: "Google"
                                }), Message.ERROR),
                                n.onError && n.onError()
                        }
                    }
                    .bind(this),
                    a.send()
                }
            },
            searchComplete: function(e, t) {
                this.results = [],
                t && t(e)
            }
        })
          , o = Class.create(i, {
            initialize: function($super, e) {
                $super(Object.extend({
                    type: "WebSearch"
                }, e))
            },
            query: function($super, e, t) {
                var n = encodeURIComponent("queries,items") + "(" + encodeURIComponent("title,link,snippet") + ")";
                this.queryText = e,
                $super(e, n, t)
            },
            searchComplete: function($super, e, t) {
                e = e.collect(function(e) {
                    return {
                        title: e.title,
                        link: e.link,
                        description: e.snippet
                    }
                }),
                $super(e, t)
            }
        })
    },
    vQBY: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("dnTF")
          , o = n.n(i)
          , s = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
            }
            return e
        }
          , a = void 0
          , r = !1
          , l = !1
          , c = o()(function() {
            r = !1
        }, 250)
          , d = function(e) {
            var t = e.metaKey || e.ctrlKey
              , n = t || e.shiftKey || e.altKey;
            l = r ? l && n : n,
            r = !0,
            c();
            var i = Event.wheel(e, a.container);
            if (l)
                var o = -(i.deltaY || i.deltaX) >= 1 ? 1 : -1;
            else if (MM.ua.touchEvents())
                var o = e.scale >= 1 ? 1 : -1;
            void 0 !== o ? a.onZoom(e, o) : MM.ua.isPlatform("Macintosh") && a.onScroll(e, i)
        };
        t.default = {
            init: function(e) {
                a = s({
                    container: document.body,
                    onZoom: function() {
                        return null
                    },
                    onScroll: function() {
                        return null
                    }
                }, e)
            },
            enable: function() {
                a.container.observe(MM.ua.getEvent().mousewheel, d)
            },
            disable: function() {
                c.cancel(),
                a.container.stopObserving(MM.ua.getEvent().mousewheel, d)
            }
        }
    },
    vxEF: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        n.d(t, "COLORS", function() {
            return i
        }),
        n.d(t, "Editor", function() {
            return o
        });
        var i = {
            red: "d93651",
            orange: "ff9f1a",
            grassGreen: "8acc47",
            turquoise: "30bfbf",
            blue: "00aaff",
            lightPurple: "dfcef2",
            greyDark: "98aab3",
            greyLight: "e0e4e6"
        }
          , o = Class.create({
            el: null,
            pos: null,
            connection: null,
            initialize: function(e, t, n, i) {
                this.pos = {
                    x: e.x - 6,
                    y: e.y - 6
                },
                this.connection = t,
                this.el = new Element("div",{
                    id: "edit_" + this.connection.raphael_id,
                    className: "connection_edit",
                    style: "border: 2px solid #" + this.connection.color
                }),
                this._onclickListener = this._onClick.bind(this),
                this._onMouseOverListener = n,
                this._onMouseOutListener = i,
                this.toEditMode(),
                this.hide(),
                this.move(this.pos),
                canvas.el.appendChild(this.el)
            },
            _onClick: function(e) {
                e.stop(),
                this.connection.from._listener.select(),
                App.connectionPopover && this.destroyPopover(),
                App.connectionPopover = new Popover("connection",this.doActions.bind(this),{
                    opener: this.el
                });
                var t = []
                  , n = new Element("a",{
                    href: "#",
                    className: "subitem"
                }).update(I18n.t("js.connection_color"))
                  , o = new Element("ul",{
                    className: "popover menu submenu",
                    style: "display: none"
                });
                for (var s in i) {
                    var a = i[s]
                      , r = new Element("a",{
                        href: "#",
                        className: "color",
                        id: "btn_menu_connection_color_" + a
                    }).insert(new Element("span",{
                        style: "background-color: #" + a
                    }));
                    o.insert(new Element("li").insert(r))
                }
                n.insert(o),
                t.push(n),
                t.push(new Element("a",{
                    href: "#",
                    id: "btn_menu_connection_label"
                }).update(this.connection.label ? I18n.t("js.connection_label_edit") : I18n.t("js.connection_label_add"))),
                this.connection.label && t.push(new Element("a",{
                    href: "#",
                    id: "btn_menu_connection_label_delete"
                }).update(I18n.t("js.connection_label_delete"))),
                t.push(new Element("a",{
                    href: "#",
                    id: "btn_menu_connection_delete"
                }).update(I18n.t("js.connection_delete"))),
                App.connectionPopover.addElements(t),
                App.connectionPopover.show()
            },
            doActions: function(e) {
                switch (e = e.replace("btn_menu_", "")) {
                case "connection_label":
                    this.connection.view.updateLabel(),
                    this.connection.view.label.toEditing();
                    break;
                case "connection_label_delete":
                    this.connection.view.deleteLabel();
                    break;
                case "connection_delete":
                    this.connection.from.disconnectFrom(this.connection.to);
                    break;
                default:
                    var t = e.replace("connection_color_", "");
                    t && this.connection.setProperties({
                        color: t
                    })
                }
            },
            move: function(e) {
                this.pos = e,
                this.el.style.left = e.x + "px",
                this.el.style.top = e.y + "px"
            },
            show: function() {
                this.el.removeClassName("hidden")
            },
            hide: function() {
                this.el.addClassName("hidden")
            },
            toEditMode: function() {
                removeClassName(this.el, "h-hidden"),
                this.el.observe("click", this._onclickListener),
                this.el.observe("mouseover", this._onMouseOverListener),
                this.el.observe("mouseout", this._onMouseOutListener)
            },
            toViewMode: function() {
                addClassName(this.el, "h-hidden"),
                this.el.stopObserving("click", this._onclickListener),
                this.el.stopObserving("mouseover", this._onMouseOverListener),
                this.el.stopObserving("mouseout", this._onMouseOutListener)
            },
            destroyPopover: function() {
                App.connectionPopover.removeElements(),
                App.connectionPopover.destroy(),
                App.connectionPopover = null
            },
            destroy: function() {
                this.toViewMode(),
                Element.discard(this.el),
                this.connection = this.pos = null,
                App.connectionPopover && (App.connectionPopover.close(),
                this.destroyPopover())
            }
        })
    },
    wQol: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        n.d(t, "_Draggable", function() {
            return o
        }),
        n.d(t, "_Droppable", function() {
            return a
        });
        var i = {
            ghosting: !0,
            revert: !1,
            reverteffect: null,
            starteffect: null,
            endeffect: null,
            scroll: "canvas_container",
            positionLazy: !0,
            initialDelta: [0, 0],
            customFindAffected: function(e, t) {
                return canvas.findAffected(e, t)
            }
        }
          , o = {
            draggable: null,
            enableDragging: function(e) {
                e && this.draggable && this.disableDragging(),
                this.draggable || (this.draggable = new Draggable(this.el,i))
            },
            disableDragging: function() {
                this.draggable && (this.draggable.destroy(),
                this.draggable = null)
            }
        }
          , s = {
            accept: "tk_label",
            overlap: "vertical",
            positionLazy: !0,
            onHover: function(e, t, n) {
                return canvas.onLblHover(e, t, n)
            },
            scroll: "canvas_container"
        }
          , a = {
            enableDropping: function() {
                Droppables.add(this.el, s)
            },
            disableDropping: function() {
                Droppables.remove(this.el)
            }
        }
    },
    wgYI: function(e, t, n) {
        "use strict";
        var i = ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"]
          , o = {
            enter: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                if (this.options = e,
                this.onChangeListener = this.onChange.bind(this),
                Modernizr.fullscreen && !this.options.skipBrowserUI && this.hideBrowserUI(),
                this.options.skipAppUI || (this.hideAppUI(),
                !this.options.skipBrowserUI && this.browserUIHidden && (this.uberInterval = setInterval(function() {
                    this.isFullScreen() && !this.options.skipFullScreenCheck && (this.interval = setInterval(this.checkFullScreen.bind(this), 500),
                    clearInterval(this.uberInterval))
                }
                .bind(this), 200))),
                void 0 === this.keyMap) {
                    var t = MM.utils.KeyEvent;
                    this.keyMap = new MM.utils.KeyMap(document,"fullscreen_keymap",[{
                        key: t.ESC,
                        fn: this.exit.bind(this)
                    }])
                }
                if (this.keyMap.enable(),
                MM.ua.touchEvents())
                    if (mm$("btn_close_fullscreen"))
                        show(mm$("btn_close_fullscreen"));
                    else {
                        var n = new Element("div",{
                            id: "btn_close_fullscreen",
                            className: "p-a at-20 ar-15 bg-white bs-small p-8 rad-5px"
                        }).update(MM.ui.icon({
                            name: "arrows-diagonal-closer",
                            size: 16,
                            color: "blue"
                        }));
                        Element.bindOnClick(n, this.exit.bind(this)),
                        canvas.container.parentNode.appendChild(n)
                    }
                this.fullScreen = !0
            },
            onChange: function() {
                this.options && "function" == typeof this.options.onChange && this.options.onChange(),
                this.isFullScreen() || this.exit()
            },
            exit: function() {
                var e = this;
                this.fullScreen && (this.options.skipBrowserUI || this.showBrowserUI(),
                this.options.skipAppUI || this.showAppUI(),
                this.keyMap.disable(),
                MM.ua.touchEvents() && hide(mm$("btn_close_fullscreen")),
                this.fullScreen = !1,
                this.options && "function" == typeof this.options.onExit && this.options.onExit(),
                i.each(function(t) {
                    return document.removeEventListener(t, e.onChangeListener)
                }))
            },
            toggle: function(e) {
                this.fullScreen ? this.exit(e) : this.enter(e)
            },
            isFullScreen: function() {
                return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement
            },
            checkFullScreen: function() {
                this.isFullScreen() || (this.exit(),
                clearInterval(this.interval))
            },
            hideBrowserUI: function() {
                var e = this
                  , t = document.documentElement;
                t.requestFullscreen ? (t.requestFullscreen(),
                this.browserUIHidden = !0) : t.mozRequestFullScreen ? (t.mozRequestFullScreen(),
                this.browserUIHidden = !0) : t.webkitRequestFullScreen ? (t.webkitRequestFullScreen(),
                this.browserUIHidden = !0) : t.msRequestFullscreen && (t.msRequestFullscreen(),
                this.browserUIHidden = !0),
                i.each(function(t) {
                    return document.addEventListener(t, e.onChangeListener)
                })
            },
            showBrowserUI: function() {
                this.isFullScreen() && (document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitCancelFullScreen ? document.webkitCancelFullScreen() : document.msExitFullscreen && document.msExitFullscreen(),
                this.browserUIHidden = !1)
            },
            hideAppUI: function() {
                UI.Registry.toggleFullScreen(!0);
                var e = $$(".postit")[0];
                e && addClassName(e, "hidden")
            },
            showAppUI: function() {
                UI.Registry.toggleFullScreen(!1);
                var e = $$(".postit")[0];
                e && removeClassName(e, "hidden")
            }
        };
        t.a = o
    },
    wvK4: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Class.create({
            searcher: null,
            items: [],
            initialize: function(e) {
                this.options = Object.extend({
                    onSearch: Prototype.emptyFunction,
                    caching: !0
                }, e),
                this.ui = !e.hasOwnProperty("ui") || e.ui,
                this.ui && this.options.element && this.observeSearchField()
            },
            observeSearchField: function() {
                this.options.keyMap = new MM.utils.KeyMap(document,this.options.searcher + "_" + this.options.type + "_keymap",[{
                    key: MM.utils.KeyEvent.ENTER,
                    fn: function() {
                        this.options.element.value != this.search.queryText && (this.options.element.blur(),
                        this.query(this.options.element.value))
                    }
                    .bind(this)
                }, {
                    key: MM.utils.KeyEvent.ESC,
                    fn: function() {
                        this.options.element.blur()
                    }
                    .bind(this)
                }]),
                this.options.keyMap.disable(),
                this.options.element.observe("focus", this.options.keyMap.enable.bind(this.options.keyMap)),
                this.options.element.observe("blur", this.options.keyMap.disable.bind(this.options.keyMap))
            },
            query: function(e, t) {
                (this.options.element && !e || this.search.queryText === e.toLowerCase()) && this.options.caching || (this.ui && (this.options.element && (this.options.element.value = e),
                this.onSearchStarted()),
                this.items = [],
                this.search.query(e.toLowerCase(), this.getDefaultCallbacks(t)))
            },
            queryMore: function(e) {
                e.appendChild(MM.ui.LoadingSpinner(12, {
                    className: "h-iblock ml-5"
                })),
                this.search.queryMore(this.getDefaultCallbacks())
            },
            getDefaultCallbacks: function(e) {
                return Object.extend({
                    onComplete: this.onSearchCompleted.bind(this),
                    onError: this.onSearchError.bind(this)
                }, e)
            },
            onSearchStarted: function() {
                this.options.loadingSpinner || (this.options.loadingSpinner = MM.ui.LoadingSpinner(64)),
                mm$(this.options.searcher + "_" + this.options.type + "_container").update(this.options.loadingSpinner),
                $(this.options.searcher + "_" + this.options.type).select(".paging")[0] && $(this.options.searcher + "_" + this.options.type).select(".paging")[0].update(""),
                this.options.onSearch()
            },
            onSearchCompleted: function(e, t, n) {
                if (this.__removeLoadingSpinner(),
                e.length > 0) {
                    removeClassName(mm$(this.options.searcher + "_" + this.options.type + "_container"), "empty");
                    for (var i = 0, o = e.length; i < o; i++) {
                        var s = e[i];
                        this.items.push(s),
                        this.insertListElement(s, i)
                    }
                    this.updatePagination(t, n),
                    this.updateItemListInfo && this.updateItemListInfo(),
                    this.options.handler && this.options.handler(this.items)
                } else
                    this.onNoResultsFound()
            },
            onSearchError: function() {
                this.__removeLoadingSpinner(),
                this.onNoResultsFound()
            },
            insertListElement: function(e, t) {},
            updatePagination: function(e, t) {
                var n = $(this.options.searcher + "_" + this.options.type);
                if (n) {
                    var i = n.select(".paging")[0];
                    if (i && e > 1) {
                        i.innerHTML = "";
                        var n = new Element("div",{
                            class: "l-table-col text-center"
                        })
                          , o = new Element("span",{
                            class: "previous"
                        })
                          , s = new Element("span").update(I18n.t("js.page_d_of_d", {
                            v0: t,
                            v1: e
                        }))
                          , a = new Element("span",{
                            class: "next"
                        });
                        t > 1 && o.update(I18n.t("js.previous")).observe("click", this.showPage.bind(this, t - 1)),
                        t < e && a.update(I18n.t("js.next")).observe("click", this.showPage.bind(this, t + 1)),
                        i.appendChild(n.update(o)),
                        i.appendChild(n.clone().update(s)),
                        i.appendChild(n.clone().update(a))
                    }
                }
            },
            showPage: function(e) {
                isNaN(e) || e <= 0 || (this.onSearchStarted(),
                this.items = [],
                this.search.nextPage(e))
            },
            __removeLoadingSpinner: function() {
                this.ui && this.options.loadingSpinner && (this.options.loadingSpinner.remove(),
                this.options.loadingSpinner = null)
            }
        });
        t.default = i
    },
    xAzy: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        n.d(t, "VConnection", function() {
            return d
        }),
        n.d(t, "DEFAULT_COLOR", function() {
            return c
        });
        var i = n("3Ox4")
          , o = n("t8zp")
          , s = n("fGk7")
          , a = n("VQwZ")
          , r = n("vxEF")
          , l = function() {
            function e(e, t) {
                var n = []
                  , i = !0
                  , o = !1
                  , s = void 0;
                try {
                    for (var a, r = e[Symbol.iterator](); !(i = (a = r.next()).done) && (n.push(a.value),
                    !t || n.length !== t); i = !0)
                        ;
                } catch (e) {
                    o = !0,
                    s = e
                } finally {
                    try {
                        !i && r.return && r.return()
                    } finally {
                        if (o)
                            throw s
                    }
                }
                return n
            }
            return function(t, n) {
                if (Array.isArray(t))
                    return t;
                if (Symbol.iterator in Object(t))
                    return e(t, n);
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }()
          , c = r.COLORS.grassGreen
          , d = Class.create({
            connection: null,
            start: null,
            end: null,
            visible: !1,
            visibleHandlers: !1,
            labelPoint: {
                x: 0,
                y: 0,
                angle: 0
            },
            initialize: function(e) {
                this.connection = e
            },
            redraw: function(e) {
                var t = this.connection.from._listener
                  , n = this.connection.to._listener
                  , i = t.node.id
                  , o = n.node.id
                  , e = e || this.shallSelect();
                if (t.node.isVisible() && n.node.isVisible()) {
                    var s = Rectangle.fromPosSize(new Point(canvas.getNodeCanvasOffset(t)), new Point(t.dcontent.size()))
                      , a = Rectangle.fromPosSize(new Point(canvas.getNodeCanvasOffset(n)), new Point(n.dcontent.size()))
                      , r = Rectangle.fromPosSize(new Point(canvas.getNodeCanvasOffset(canvas.root)), new Point(canvas.root.dcontent.size()));
                    this.toViewMode();
                    var l = null;
                    l = canvas.root == t ? this._getBezierCoordinatesToRoot(r, a) : canvas.root == n ? this._getBezierCoordinatesToRoot(s, r) : this._getBezierCoordinates(r, s, a),
                    l.p1 && l.p2 && l.cp1 && l.cp2 && (this.drawConnection(l, !1, i, o, this.connection.color, e),
                    this.connection.label ? this.updateLabel() : this.label && this.deleteLabel())
                }
            },
            shallSelect: function() {
                var e = this.connection.from._listener
                  , t = this.connection.to._listener;
                return e.isEditing() || t.isEditing() || e.isSelected() || t.isSelected() || e.isPartiallySelected() || t.isPartiallySelected()
            },
            updateLabel: function() {
                this.label || (this.label = new s.default("connection_label",{
                    onEnterEditMode: function() {
                        canvas.removeFocus(),
                        canvas.disableScrollByDrag()
                    },
                    onLeaveEditMode: function() {
                        canvas.addFocus(),
                        canvas.enableScrollByDrag()
                    },
                    saveCallback: this.saveLabel.bind(this)
                }),
                canvas.el.appendChild(this.label.el)),
                this.connection.label && this.label.setValue(this.connection.label),
                this.positionLabel()
            },
            positionLabel: function() {
                var e = Object.clone(this.labelPoint);
                e.x -= this.label.getWidth() / 2,
                e.y -= this.label.getHeight() / 2,
                this.label.el.setStyle({
                    top: e.y + "px",
                    left: e.x + "px",
                    backgroundColor: "#" + this.connection.color
                })
            },
            saveLabel: function(e) {
                if (e.length > 255)
                    return this.connection.label ? this.label.setValue(this.connection.label) : this._removeLabel(),
                    Message.show(I18n.t("js.connection_label_is_too_long"), Message.ERROR, 5);
                this.connection.setProperties({
                    label: e
                })
            },
            deleteLabel: function() {
                this.connection.label && this.saveLabel(""),
                this._removeLabel()
            },
            _removeLabel: function() {
                this.label && (this.label.el.remove(),
                this.label = null)
            },
            _getBezierCoordinates: function(e, t, n) {
                var o, s, a, r, l, c, d, h = e.center(), u = t.center(), p = n.center(), f = new i.Line(h,u), g = new i.Line(h,p), m = new i.Line(u,p);
                if (!e.isValid() || !t.isValid() || !n.isValid())
                    return {};
                try {
                    o = new i.Line(u,g.slope()),
                    a = t.intersection(o),
                    r = a.find(function(e) {
                        return m.onOppositeSides(h, e)
                    }),
                    r || (r = a[0]),
                    a = o.pointsAtDistance(r, 100),
                    c = a.find(function(e) {
                        return m.onOppositeSides(h, e)
                    }),
                    s = new i.Line(p,f.slope()),
                    a = n.intersection(s),
                    l = a.find(function(e) {
                        return m.onOppositeSides(h, e)
                    }),
                    l || (l = a[0]),
                    a = s.pointsAtDistance(l, 100),
                    d = a.find(function(e) {
                        return m.onOppositeSides(h, e)
                    })
                } catch (e) {
                    MM.error.reportException({
                        exception: e,
                        message: "Connection drawing problem"
                    })
                }
                return {
                    p1: r,
                    p2: l,
                    cp1: c,
                    cp2: d
                }
            },
            _getBezierCoordinatesToRoot: function(e, t) {
                var n = e.radialIntersection(t.center())
                  , o = t.radialIntersection(e.center())
                  , s = new i.Line(n,o)
                  , a = new Point((n.x + o.x) / 2,(n.y + o.y) / 2)
                  , r = s.pointsAtDistance(a, 10)
                  , c = l(r, 2);
                return {
                    p1: n,
                    p2: o,
                    cp1: c[0],
                    cp2: c[1]
                }
            },
            _overrideControlPoints: function() {
                this.coords.cp1.x = this.coords.p1.x + this.connection.cp_from_x,
                this.coords.cp1.y = this.coords.p1.y + this.connection.cp_from_y,
                this.coords.cp2.x = this.coords.p2.x + this.connection.cp_to_x,
                this.coords.cp2.y = this.coords.p2.y + this.connection.cp_to_y
            },
            _deleteLinesForConnection: function(e) {
                var t = o.Graphics.connectionstack.get(e);
                if (t) {
                    for (var n = t.length - 1; n >= 0; n--)
                        if ("set" == t[n].type)
                            for (var i = t[n], s = 0; s <= i.length; s++)
                                i[s] && i[s].remove();
                        else
                            t[n].remove();
                    o.Graphics.connectionstack.unset(e)
                }
            },
            drawTemporaryConnection: function(e, t) {
                var n = Rectangle.fromPosSize(new Point(canvas.getNodeCanvasOffset(e)), new Point(e.dcontent.size()))
                  , i = Rectangle.fromPosSize(new Point(canvas.getNodeCanvasOffset(canvas.root)), new Point(canvas.root.dcontent.size()))
                  , o = Rectangle.fromPosSize(new Point(t.x - 25,t.y - 25), new Point(50,50))
                  , s = null;
                s = e == canvas.root ? this._getBezierCoordinatesToRoot(i, o) : this._getBezierCoordinates(i, n, o),
                s.p1 && s.p2 && s.cp1 && s.cp2 && this.drawConnection(s, !0)
            },
            drawConnection: function(e, t, n, i) {
                var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : c
                  , a = arguments[5];
                this.coords = e;
                var r = t ? "0-0" : this.connection.raphael_id;
                o.Graphics.connectionstack.get(r) && this._deleteLinesForConnection(r),
                !t && this.connection.cp_to_x && this._overrideControlPoints(),
                this.labelPoint = o.Graphics.drawConnection(this.coords.cp1.x, this.coords.cp1.y, this.coords.cp2.x, this.coords.cp2.y, this.coords.p1.x, this.coords.p1.y, this.coords.p2.x, this.coords.p2.y, r, s);
                var l = o.Graphics.connectionstack.get(r);
                l && l[1][3].updateAbsolute(this.coords.cp2.x, this.coords.cp2.y),
                this.visible = !0,
                App.config.editable && App.config.currentlyEditable && !t && (this.toEditMode(),
                a && this.showConnectionHandlers())
            },
            toViewMode: function() {
                this._editIcon && this._editIcon.toViewMode(),
                this.visibleHandlers && this.hideConnectionHandlers()
            },
            toEditMode: function() {
                this.visible && (this.coords.p1.x && this.coords.p1.y && (this._editIcon && this._editIcon.destroy(),
                this._editIcon = new r.Editor(this.coords.p1,this.connection,this._onMouseOver.bind(this),this._onMouseOut.bind(this))),
                this.coords.cp1.x && this.coords.cp1.y && this.coords.cp2.x && this.coords.cp2.y && (this._handlerIcon1 && this._handlerIcon1.destroy(),
                this._handlerIcon2 && this._handlerIcon2.destroy(),
                this._handlerIcon1 = new a.default(this.coords.cp1,2,this.connection),
                this._handlerIcon2 = new a.default(this.coords.cp2,3,this.connection)))
            },
            destroy: function() {
                this.connection && (this._deleteLinesForConnection(this.connection.raphael_id),
                this._handlerIcon1 && this._handlerIcon1.destroy(),
                this._handlerIcon2 && this._handlerIcon2.destroy(),
                this._editIcon && this._editIcon.destroy()),
                this.label && this._removeLabel()
            },
            clear: function() {
                this.toViewMode(),
                this.start = this.end = null,
                this.visible = !1,
                this._deleteLinesForConnection("0-0"),
                this.destroy()
            },
            showConnectionHandlers: function() {
                if (this.visible) {
                    if (o.Graphics.connectionstack.get(this.connection.raphael_id)) {
                        var e = o.Graphics.connectionstack.get(this.connection.raphael_id)[1];
                        e[0].show(),
                        e[2].show(),
                        e[3].show();
                        var t = {
                            x: e[2].attrs.cx,
                            y: e[2].attrs.cy
                        }
                          , n = {
                            x: e[3].attrs.cx,
                            y: e[3].attrs.cy
                        }
                    }
                    this._handlerIcon1 && this._handlerIcon2 && t && n ? (this._handlerIcon1.move(t),
                    this._handlerIcon2.move(n),
                    this._handlerIcon1.show(),
                    this._handlerIcon2.show()) : this.toEditMode(),
                    this.visibleHandlers = !0
                }
            },
            hideConnectionHandlers: function() {
                if (this.visibleHandlers && !this.shallSelect() && !this._handlerIcon1.dragging && !this._handlerIcon2.dragging) {
                    if (o.Graphics.connectionstack.get(this.connection.raphael_id)) {
                        var e = o.Graphics.connectionstack.get(this.connection.raphael_id)[1];
                        e[0].hide(),
                        e[2].hide(),
                        e[3].hide()
                    }
                    this._handlerIcon1.hide(),
                    this._handlerIcon2.hide(),
                    this.visibleHandlers = !1
                }
            },
            _onMouseOver: function() {
                this._editIcon.show()
            },
            _onMouseOut: function() {
                this._editIcon.hide()
            }
        });
        t.default = d
    },
    xOlx: function(e, t, n) {
        function i(e) {
            if (!s(e))
                return !1;
            var t = o(e);
            return t == r || t == l || t == a || t == c
        }
        var o = n("r1rA")
          , s = n("xwKO")
          , a = "[object AsyncFunction]"
          , r = "[object Function]"
          , l = "[object GeneratorFunction]"
          , c = "[object Proxy]";
        e.exports = i
    },
    yDlx: function(e, t, n) {
        function i(e, t) {
            if (null == e)
                return {};
            var n = o(r(e), function(e) {
                return [e]
            });
            return t = s(t),
            a(e, n, function(e, n) {
                return t(e, n[0])
            })
        }
        var o = n("eKAY")
          , s = n("EAyW")
          , a = n("TIa6")
          , r = n("yXac");
        e.exports = i
    },
    yXac: function(e, t) {
        function n(e) {
            var t = [];
            if (null != e)
                for (var n in Object(e))
                    t.push(n);
            return t
        }
        e.exports = n
    },
    ybj2: function(e, t, n) {
        function i(e) {
            return s(e) && o(e)
        }
        var o = n("K2yx")
          , s = n("7Zib");
        e.exports = i
    },
    yiO2: function(e, t, n) {
        "use strict";
        (function(e) {
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function o(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function s(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var a = n("YmTu")
              , r = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , l = function(t) {
                function n(e) {
                    i(this, n);
                    var t = o(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
                    return t.state = {
                        selected: t.props.selected
                    },
                    t.handleClick = t.handleClick.bind(t),
                    t
                }
                return s(n, t),
                r(n, [{
                    key: "handleClick",
                    value: function() {
                        this.props.handleClick(this),
                        this.setState({
                            selected: !0
                        })
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this.state.selected ? this.props.selectedColor : this.props.defaultColor;
                        return e.createElement("div", {
                            className: "bg-grey5-hover w-24px h-24px rad-3 h-flex-row justify-center",
                            onClick: this.handleClick
                        }, e.createElement(a.a, {
                            opts: {
                                name: this.props.icon,
                                color: t,
                                size: this.props.iconSize
                            }
                        }))
                    }
                }]),
                n
            }(e.Component);
            t.a = l
        }
        ).call(t, n("nakD"))
    },
    yj88: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n("ahzF")
          , o = n("wgYI")
          , s = n("kLIQ")
          , a = n("pNvO")
          , r = function(e, t, n) {
            t.remove();
            var i = new Element("img",{
                src: n.src,
                className: "w-150px h-auto"
            });
            e.parent.insert(i),
            e.sizeAndPosition()
        }
          , l = {
            on: !1,
            presenter: !1,
            viewer: !1,
            togglePresenter: function(e) {
                this.on ? ServerData.isLoggedIn ? new Ajax.Request("/presentation/present/",{
                    asynchronous: !e,
                    parameters: {
                        map_id: App.config.map_id,
                        presenter: "off"
                    },
                    onSuccess: function(e) {
                        e.responseText.evalJSON().error || l.onRemotePresenterEnd()
                    }
                }) : this.onRemotePresenterEnd() : (App.config.shareMode === App.MULTI ? Dialog.confirm("<h2>" + I18n.t("js.broadcast_presentation") + "</h2><p>" + I18n.t("js.broadcast_presentation_text") + "</p>", {
                    buttonClass: "button",
                    okLabel: I18n.t("js.si"),
                    cancelLabel: I18n.t("js.njet"),
                    ok: this.startPresenterShared.bind(this, e),
                    cancel: this.startPresenterSingle.bind(this),
                    windowParameters: {
                        height: 100,
                        width: 360
                    }
                }) : this.startPresenterSingle(),
                Amplitude.logEvent("play_slideshow"),
                App.trigger(CustomEvents.PRESENTATION_STARTED))
            },
            startPresenterSingle: function() {
                this.on = !0,
                this.presenter = !1,
                this.viewer = !1,
                Dialog.closeInfo(),
                l.Slideshow.play({
                    editable: !0,
                    toolbar: ["player", "slideshow"].include(MM.utils.siteLocation.getLoc()) ? "slideshow" : null,
                    startAt: void 0 === App.ui.SlideShow ? null : App.ui.SlideShow.selectedSlide
                })
            },
            startPresenterShared: function(e) {
                Dialog.closeInfo();
                var t = null;
                void 0 !== App.ui.SlideShow && App.ui.SlideShow.list && App.ui.SlideShow.list.first && (t = App.ui.SlideShow.list.indexOf(App.ui.SlideShow.selectedSlide)),
                new Ajax.Request("/presentation/present/",{
                    asynchronous: !e,
                    parameters: {
                        map_id: App.config.map_id,
                        presenter: "on",
                        presentation_step: t
                    },
                    onSuccess: function(e) {
                        e.responseText.evalJSON().error || (i.default.resetInterval(),
                        l.onRemotePresenterStart())
                    }
                })
            },
            onRemotePresenterStart: function() {
                this.on = !0,
                this.presenter = !0,
                this.viewer = !1,
                l.Slideshow.play({
                    editable: !0,
                    toolbar: ["player", "slideshow"].include(MM.utils.siteLocation.getLoc()) ? "slideshow" : null,
                    startAt: void 0 === App.ui.SlideShow ? null : App.ui.SlideShow.selectedSlide
                })
            },
            onRemotePresenterEnd: function() {
                this.on = !1,
                this.presenter = !1
            },
            toggleViewer: function(e) {
                if (this.presenter = !1,
                this.on)
                    this.on = !1,
                    this.viewer = !1,
                    Message.hideSticky(),
                    App.player.exit();
                else {
                    this.on = !0,
                    this.viewer = !0,
                    e || (e = users.currentUsers.find(function(e) {
                        return e.presenter
                    })),
                    i.default.resetInterval(),
                    l.Slideshow.play({
                        editable: !1,
                        toolbar: ["player", "slideshow"].include(MM.utils.siteLocation.getLoc()) ? "slideshow" : null,
                        startAt: e.presentation_step,
                        onEnd: this.updateViewerMode.bind(this, e)
                    });
                    var t = '<div row><div id="btn_toggleslideshow" class="icon-svg mh-20" data-icon="presentation-mode" data-color="blue" data-size="24"></div><div class="content" style="padding: 10px 20px">' + I18n.t("js.presentation_by", {
                        v0: e.name
                    }) + "</div></div>";
                    Message.showSticky(t)
                }
            },
            updateViewerMode: function(e) {
                if (this.on && !this.presenter && void 0 !== App.player) {
                    e && void 0 !== e || (e = users.currentUsers.find(function(e) {
                        return e.presenter
                    }));
                    var t = e.presentation_step
                      , n = MM.utils.Url.getHashParams();
                    if (n.hasOwnProperty("step"))
                        var i = n.step;
                    t != i && (App.player.gotoStep(t),
                    MM.ui.Notification.show({
                        title: I18n.t("js.new_presentation_slide"),
                        type: "title"
                    }))
                }
            }
        };
        l.Slideshow = {
            previews: [],
            getSlides: function(e) {
                new Ajax.Request("/presentation/slides",{
                    asynchronous: !1,
                    parameters: {
                        map_id: App.config.map_id
                    },
                    onSuccess: function(t) {
                        try {
                            var n = t.responseText.evalJSON();
                            n.error ? e.onFailure && e.onFailure() : this.buildSlidesList(n.slides, e.onSuccess, e)
                        } catch (t) {
                            e.onFailure && e.onFailure()
                        }
                    }
                    .bind(this),
                    onFailure: function() {
                        e.onFailure && e.onFailure()
                    }
                    .bind(null)
                })
            },
            buildSlidesList: function(e, t, n) {
                var i = new s.a.Doubly;
                e.each(function(e) {
                    var t = {
                        id: e.id,
                        position: e.position,
                        nodes: e.nodes.map(function(e) {
                            return tree.root.getChild(e.id)
                        }),
                        padding: e.padding,
                        transition: e.transition
                    };
                    n.ui ? i.insertEnd(new App.ui.VSlide(t)) : i.insertEnd(new App.ui.Slide(t))
                }
                .bind(null)),
                t && t(i)
            },
            initControls: function() {
                App.ui.PlayerControls.init(),
                l.Slideshow.showControls(null, "hidden"),
                l.Slideshow.controlEnter = function() {
                    mm$("map_controls")._hovered = !0
                }
                ,
                l.Slideshow.controlLeave = function() {
                    mm$("map_controls")._hovered = !1
                }
                ,
                Event.observe("map_controls", "mouseenter", l.Slideshow.controlEnter),
                Event.observe("map_controls", "mouseleave", l.Slideshow.controlLeave),
                mm$("presentation-bar-logo").onclick = o.a.exit.bind(o.a)
            },
            prepare: function(e) {
                "public" !== App.config.viewMode && "embedded" !== App.config.viewMode && (UI.Registry.toggleMode("view"),
                App.config.currentlyEditable = !1),
                "embedded" === App.config.viewMode && canvas.onRecenter(null, !1, !0),
                canvas.disableMobileFullScreen(),
                e || App.ui.SlideShow.init(App.ui.Footer.enable.bind(App.ui.Footer))
            },
            exit: function() {
                void 0 !== App.ui.SlideShow && App.ui.SlideShow.teardown(),
                "undefined" != typeof Selections && (Selections.teardown(),
                canvas.setupSelections()),
                canvas.enableMobileFullScreen(),
                App.config.editable && (App.config.currentlyEditable = !0,
                UI.Registry.toggleMode("edit"))
            },
            showControls: function(e, t) {
                if (e) {
                    if (Event.stop(e),
                    this.lastX == e.clientX || this.lastY == e.clientY)
                        return;
                    this.lastX = e.clientX,
                    this.lastY = e.clientY
                }
                App.ui.PlayerControls.show(!0, t || "faded"),
                l.Slideshow.controlsTimeout = setTimeout(l.Slideshow.hideControls, 4e3),
                Event.stopObserving(document, "mousemove", l.Slideshow.showControls)
            },
            hideControls: function() {
                if (mm$("map_controls")._hovered)
                    return void l.Slideshow.showControls();
                App.ui.PlayerControls.hide(!0, "faded"),
                Event.observe(document, "mousemove", l.Slideshow.showControls)
            },
            handleFullScreenChange: function() {
                setTimeout(function() {
                    canvas.onRecenter(null, !1, !0)
                }, 500)
            },
            play: function(e) {
                o.a.enter({
                    skipFullScreenCheck: !MM.ua.touchEvents(),
                    onChange: this.handleFullScreenChange.bind(this),
                    skipBrowserUI: MM.utils.Url.getHashParams().hasOwnProperty("player") || "public" === App.config.viewMode || "embedded" === App.config.viewMode,
                    skipAppUI: !0
                }),
                e = Object.extend({
                    toolbar: null
                }, e),
                e.toolbar && e.toolbar === App.ui.Footer.activeBar || App.ui.Footer.activeBar && App.ui.Footer.hideBar(App.ui.Footer.activeBar, !0),
                void 0 !== App.ui.SlideShow && App.ui.SlideShow.list && App.ui.SlideShow.list.first ? this.doPlay(e, App.ui.SlideShow.list) : this.getSlides({
                    ui: !1,
                    onSuccess: this.doPlay.bind(this, e)
                })
            },
            doPlay: function(e, t) {
                var i = this;
                l.Slideshow.prepare(!0),
                addClassName(canvas.el, "presentation_play"),
                canvas.disableMobileFullScreen();
                var s = App.ui.Zoom.getCurrentZoomIndex();
                canvas.root.eachChild(function(e) {
                    e.dcontent.el._title = e.dcontent.el.title,
                    e.dcontent.el.title = ""
                }),
                canvas.onResize(),
                users && users.currentUsers && users.currentUsers.each(function(e) {
                    if (e.idea_id) {
                        var t = tree.root.getChild(e.idea_id);
                        t && t._listener.unSelectByUser(e)
                    }
                }
                .bind(null)),
                App.ui.Zoom.zoomTo(App.ui.Zoom.getZoomIndex(1), !1),
                n.e(150).then(n.bind(null, "fRon")).then(function() {
                    App.player = App.ui.Player(null, {
                        onExit: function() {
                            removeClassName(canvas.el, "presentation_play"),
                            e.editable && (App.ui.PlayerControls.hide(!0, "hidden"),
                            clearTimeout(l.Slideshow.controlsTimeout),
                            Event.stopObserving("map_controls", "mouseenter", l.Slideshow.controlEnter),
                            Event.stopObserving("map_controls", "mouseleave", l.Slideshow.controlLeave),
                            Event.stopObserving(document, "mousemove", l.Slideshow.showControls)),
                            e.toolbar ? MM.utils.siteLocation.setLoc(e.toolbar) : (MM.utils.siteLocation.reset(),
                            l.Slideshow.exit()),
                            o.a.exit(),
                            o.a.showAppUI(),
                            canvas.closeTemporarilyOpen(),
                            l.on ? l.presenter ? l.togglePresenter() : l.viewer ? (l.on = !1,
                            l.viewer = !1) : l.on = !1 : canvas.enableMobileFullScreen(),
                            t.each(function(e) {
                                e.onExitPlay()
                            }),
                            $("slideshow_steps").remove(),
                            void 0 !== App.ui.SlideShow && App.ui.SlideShow.keyMap && App.ui.SlideShow.keyMap.enable(),
                            App.ui.Zoom.zoomTo(s, !1),
                            App.ui.Preview.popover && CSS.set(App.ui.Preview.popover.parent, {
                                transform: CSS.scale(1)
                            }),
                            canvas.root.eachChild(function(e) {
                                e.dcontent.el.title = e.dcontent.el._title
                            }),
                            i.previews.each(function(e) {
                                e.parent.remove(),
                                e.destroy()
                            }),
                            i.previews = [],
                            i.handleFullScreenChange(),
                            App.trigger(CustomEvents.PRESENTATION_STOPPED)
                        },
                        width: MM.ui.page.width,
                        height: MM.ui.page.height
                    }),
                    o.a.hideAppUI(),
                    setTimeout(function() {
                        void 0 !== App.ui.SlideShow && App.ui.SlideShow.keyMap && App.ui.SlideShow.keyMap.disable(),
                        App.player.init(t, {
                            startAt: e.startAt ? e.startAt : t.first
                        }),
                        MM.utils.siteLocation.setLoc("player"),
                        e.editable || App.ui.Player.keyMap.disable()
                    }, 1e3),
                    i.buildSlideShowSteps(e, t),
                    e.editable && (mm$("map_controls") ? l.Slideshow.initControls() : new Ajax.Request("/toolbar/slideshow_play/" + App.config.map_id)),
                    e.onEnd && e.onEnd()
                })
            },
            buildSlideShowSteps: function(e, t) {
                var n = this
                  , i = new Element("div",{
                    id: "slideshow_steps"
                })
                  , o = new Element("ul");
                i.appendChild(o),
                canvas.container.parentNode.appendChild(i);
                var s = canvas.getMapSizeAndOffset();
                t.each(function(t, i) {
                    var l = new Element("li",{
                        id: "slideshow_step" + t.id
                    });
                    if (l.innerHTML = e.editable ? '<a href="#" onclick="App.player.gotoStep(' + (i + 1) + '); return false;"></a>' : '<a href="#" onclick="return false;"></a>',
                    "embedded" !== App.config.viewMode) {
                        var c = new Element("div",{
                            className: "w-150px p-r ta-center"
                        }).insert(MM.ui.LoadingSpinner(32, {
                            className: "h-iblock"
                        }))
                          , d = new Element("div",{
                            id: "popover_slidespreview_" + t.id,
                            className: "popover",
                            style: "display: none"
                        }).insert(c);
                        canvas.container.parentNode.appendChild(d);
                        var h = new Popover("slidespreview_" + t.id,null,{
                            opener: l,
                            observeEvent: "mouseover"
                        });
                        a.a.add({
                            image: {
                                src: t.getPreviewImageSrc(s)
                            },
                            onLoad: r.bind(n, h, c)
                        }),
                        n.previews.push(h)
                    }
                    o.appendChild(l)
                })
            }
        },
        t.default = l
    },
    ylcm: function(e, t, n) {
        function i(e, t, n, i) {
            if (!r(e))
                return e;
            t = s(t, e);
            for (var c = -1, d = t.length, h = d - 1, u = e; null != u && ++c < d; ) {
                var p = l(t[c])
                  , f = n;
                if (c != h) {
                    var g = u[p];
                    f = i ? i(g, p, u) : void 0,
                    void 0 === f && (f = r(g) ? g : a(t[c + 1]) ? [] : {})
                }
                o(u, p, f),
                u = u[p]
            }
            return e
        }
        var o = n("5cCM")
          , s = n("Hnr2")
          , a = n("U8js")
          , r = n("xwKO")
          , l = n("4dmE");
        e.exports = i
    },
    zDP6: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        function(e, i) {
            var o = n("A9ap")
              , s = n("zOua")
              , a = n("h7V/")
              , r = Class.create(o.default, {
                initialize: function($super, e, t) {
                    $super("colors", e, t)
                },
                load: function($super) {
                    var e = this;
                    this.list = this.el.select("div")[0],
                    this.renderColors(),
                    this.initTabs(),
                    a.a.get("colors_widget_tab", function(t) {
                        e.selectTab(t ? t.value : e.tabs[0])
                    }),
                    $super()
                },
                initTabs: function() {
                    this.tabs = ["color", "backgroundColor"],
                    this.tabs.each(function(e) {
                        Element.bindOnClick(mm$("btn-" + e.toLowerCase()), this.selectTab.bind(this, e))
                    }
                    .bind(this))
                },
                selectTab: function(e) {
                    this.selectedTab !== e && this.tabs.include(e) && (this.selectedTab && removeClassName(mm$("btn-" + this.selectedTab.toLowerCase()), "selected"),
                    this.selectedTab = e,
                    a.a.save({
                        name: "colors_widget_tab",
                        value: this.selectedTab
                    }),
                    addClassName(mm$("btn-" + this.selectedTab.toLowerCase()), "selected"),
                    this.onSelectNode())
                },
                setValue: function(e) {
                    canvas.onSetStyle(this.selectedTab, e)
                },
                renderColors: function(t) {
                    e.render(i.createElement(s.a, {
                        selectedColor: t,
                        onItemClick: this.setValue.bind(this)
                    }), this.list)
                },
                onSelectNode: function() {
                    if (canvas.selected) {
                        var e = canvas.selected.node.currentStyle();
                        this.renderColors(e[this.selectedTab])
                    }
                }
            });
            t.default = r
        }
        .call(t, n("x9tB"), n("nakD"))
    },
    zOua: function(e, t, n) {
        "use strict";
        (function(e) {
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function o(e, t) {
                if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }
            function s(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            var a = n("+VMB")
              , r = n("67vC")
              , l = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        i.enumerable = i.enumerable || !1,
                        i.configurable = !0,
                        "value"in i && (i.writable = !0),
                        Object.defineProperty(e, i.key, i)
                    }
                }
                return function(t, n, i) {
                    return n && e(t.prototype, n),
                    i && e(t, i),
                    t
                }
            }()
              , c = function(t) {
                function n(e) {
                    i(this, n);
                    var t = o(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e));
                    return t.state = {
                        selectedColor: t.props.selectedColor
                    },
                    t
                }
                return s(n, t),
                l(n, [{
                    key: "_handleClick",
                    value: function(e) {
                        this.setState({
                            selectedColor: e
                        }),
                        this.props.onItemClick && this.props.onItemClick(e)
                    }
                }, {
                    key: "componentWillReceiveProps",
                    value: function(e) {
                        this.setState({
                            selectedColor: e.selectedColor
                        })
                    }
                }, {
                    key: "render",
                    value: function() {
                        var t = this;
                        return e.createElement(a.a, {
                            elementsInRow: this.props.elementsInRow,
                            items: r.COLORS.map(function(n) {
                                return {
                                    element: e.createElement("span", {
                                        style: {
                                            backgroundColor: "#" + n
                                        }
                                    }),
                                    className: "color" + (t.state.selectedColor === n ? " selected" : ""),
                                    onClick: function() {
                                        return t._handleClick(n)
                                    }
                                }
                            })
                        })
                    }
                }]),
                n
            }(e.Component);
            c.defaultProps = {
                elementsInRow: 8
            },
            t.a = c
        }
        ).call(t, n("nakD"))
    }
}, ["koC0"]);
