#!/usr/bin/env bash

set -o errexit
set -o nounset

function fail {
    echo $1
    exit 1
}

ACTION="${1:-}"
if [ -z ${ACTION} ]; then
    ACTION="production"
fi

PROJECT_DIR=$(readlink -f "$0" | xargs dirname | xargs dirname)
cd "${PROJECT_DIR}"

case "${ACTION}" in
  "production")
    docker-compose exec php yarn run encore production --verbose
    cat "${PROJECT_DIR}/public/build/manifest.json" > "${PROJECT_DIR}/var/cache/manifest.json"
    ;;
  "dev")
    docker-compose exec php yarn run encore dev --verbose
    cat "${PROJECT_DIR}/public/build/manifest.json" > "${PROJECT_DIR}/var/cache/manifest.json"
    ;;
  "both")
    docker-compose exec php yarn run encore production --verbose
    docker-compose exec php yarn run encore dev --verbose
    cat "${PROJECT_DIR}/public/build/manifest.json" > "${PROJECT_DIR}/var/cache/manifest.json"
    ;;
  "dev-server")
    which inotify-hookable > /dev/null || fail "inotify-hookable is not installed"
    touch "${PROJECT_DIR}/public/build/manifest.json"
    inotify-hookable --watch-directories "${PROJECT_DIR}/public/build" --on-modify-path-command "manifest.json=(cp ${PROJECT_DIR}/public/build/manifest.json ${PROJECT_DIR}/var/cache/manifest.json || true)" &
    #trap 'kill $(jobs -p)' SIGINT SIGTERM EXIT
    trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT
    docker-compose exec php yarn run encore dev-server --host 0.0.0.0 --port 80 --disable-host-check --hot --public=0.0.0.0:80 -d
    ;;
  retart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {production|dev|both|dev-server}"
esac
